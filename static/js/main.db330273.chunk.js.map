{"version":3,"sources":["store/InterfaceReducer.ts","utils/StringVariablesAndTypes.ts","store/store.ts","components/ThreeJSComponents/Control/Borders/SingleBorder.tsx","components/ThreeJSComponents/Control/Borders/BordersArray.tsx","components/ThreeJSComponents/Camera.tsx","components/ThreeJSComponents/Control/AstralPlane/Pyramid.tsx","components/ThreeJSComponents/Control/AstralPlane/Background.tsx","components/ThreeJSComponents/Control/AstralPlane/AnimatedCubes.tsx","components/ThreeJSComponents/Explosion/shaderMaterial.ts","components/ThreeJSComponents/Explosion/Crystal.tsx","textAndPrijectsInfo/TextContent.ts","components/ThreeJSComponents/Control/Lights/Sun.tsx","components/ThreeJSComponents/Control/AstralPlane/AstralPlaneContainer.tsx","components/ThreeJSComponents/Control/Videopanel/VideoPlaneLight.tsx","components/ThreeJSComponents/Control/Videopanel/Videopanel.tsx","components/ThreeJSComponents/Control/Lights/AnimatedLight.tsx","components/ThreeJSComponents/Control/Room/Room.tsx","components/ThreeJSComponents/posteffects/Postprocessing.tsx","components/ThreeJSComponents/MainScene.tsx","components/ThreeJSComponents/InitialCanvas.tsx","components/HTMLComponents/Greetings/TextTypingElement.tsx","components/HTMLComponents/Greetings/Arrow.tsx","components/HTMLComponents/Greetings/BigLogo.tsx","components/HTMLComponents/Greetings/MainPageContainer.tsx","components/HTMLComponents/Projects/SingleProject/ProjectAnnotation.tsx","components/HTMLComponents/Projects/SingleProject/CloseLookButton.tsx","components/HTMLComponents/Projects/SingleProject/ProjectPresentation.tsx","components/HTMLComponents/Projects/ProjectsContainer.tsx","components/HTMLComponents/Interface/LeftContextButton.tsx","components/HTMLComponents/Interface/Logo.tsx","components/HTMLComponents/Interface/InterfaceContainer.tsx","components/HTMLComponents/Interface/ProjectsCounter.tsx","components/HTMLComponents/Interface/AboutMe/TextTypingTechnologies.tsx","components/HTMLComponents/Interface/AboutMe/InfoBlock.tsx","components/HTMLComponents/Projects/CloseLook/ProsAndConsTyping.tsx","components/HTMLComponents/Projects/CloseLook/ProjectCloseLook.tsx","components/HTMLComponents/HTMLElementsContainer.tsx","components/HTMLComponents/preloaderAndErrorScreen/Preloader.tsx","components/HTMLComponents/preloaderAndErrorScreen/Error.tsx","App.tsx","index.tsx","assets/model/withoutAll.glb","assets/videos/testVid.mp4","assets/videos/counter.mp4","assets/videos/toDoList.mp4"],"names":["initialState","loadedState","scrollsCount","explosionProgress","sun","cameraState","videos","currentlyLookedProject","isMainPageFocused","isInterfaceAvailable","isCrystalExploded","isAboutMenuOpened","videoPlayerState","geometriesTransition","druggingState","scrollingState","actions","type","video","projectIndex","isFocused","isAvailable","play","project","positive","MainReducer","state","action","rootReducer","combineReducers","interface","store","createStore","React","memo","rotation","position","props","useMemo","extrudeShape","THREE","moveTo","lineTo","hole","holes","push","extrudeSettings","steps","depth","bevelEnabled","mesh","rotation-z","castShadow","receiveShadow","attach","args","color","roughness","shadowSide","isEqual","transition","useSelector","shallowEqual","useSprings","i","theta","config","mass","tension","friction","clamp","springs","setSprings","cancelsForAnimations","useRef","useEffect","current","forEach","cancel","to","next","a","cancelled","Math","PI","duration","immediate","loop","then","undefined","map","spring","key","scale","cameraPosition","mainDisplay","staticProjects","scrollProjects","closeLook","aboutMe","cameraLookAt","ordinaryPos","lookAtProject","dispatch","useDispatch","ref","useThree","setDefaultCamera","camera","useSpring","fov","lookAt","setCameraPosition","delay","useFrame","get","perspectiveCamera","pyramidPosition","metalness","meshBasicMaterial","side","closeLookPositions","positions","j","xGrid","yGrid","random","projectsObservationPositions","x","y","z","positionsInAstralPlane","scaleInAstralPlane","row","column","ceil","lerp","scaleX","scaleY","scaleZ","rotationDirections","rotationArray","animation","setAnimation","default","item","prop","innerShader","extensions","derivatives","uniforms","time","value","progress","inside","surfaceColor","insideColor","tCube","pixels","window","innerWidth","innerHeight","uvRate1","vertexShader","fragmentShader","outerShader","sign","number","abs","useState","innerMesh","outerMesh","setS","GLTFLoader","load","GLB","gltf","voronoiObj","scene","traverse","child","name","children","length","f","m","clone","innerGeometry","outerGeometry","filter","v","processedSurface","object","index","coords","surface","geometry","applyMatrix4","makeTranslation","volume","surfaceLength","attributes","array","volumeLength","offset","Array","fill","setAttribute","Float32Array","offset1","axis","normalize","axes","axes1","centroidVector","ar","len","getCentroid","centroid","centroid1","processSurface","BufferGeometryUtils","mergeBufferGeometries","computeBoundingSphere","group","mouseCoords","mouseX","mouseY","onMouseMoveHandler","e","clientX","clientY","addEventListener","removeEventListener","targetMouseX","targetMouseY","ta","taY","shaderMaterial","uniforms-progress-value","animatedSkillsStack","animatedBigSkillsStack","projectsInfo","projectName","projectDescription","detailedDescription","pros","cons","technologies","refToProject","refToGit","counter","todoList","contacts","header","href","distance","intensity","sunRef","useLayoutEffect","setTimeout","pointLight","decay","setSpring","onRest","projectMemo","setProjectMemo","videoMaterial","texture","find","minFilter","magFilter","format","encoding","anisotropy","transparent","lookAtPosition","mouseMoveHandler","useCallback","mouseXPercentage","mouseYPercentage","memoizedDeltaY","wheelHandler","deltaY","pause","material","multisampling","height","width","kernelSize","KernelSize","SMALL","density","weight","exposure","samples","clampMax","hue","saturation","fallback","InitialCanvas","style","background","shadowMap","colorManagement","onCreated","RectAreaLightUniformsLib","init","gl","alpha","antialias","stencil","concurrent","blink","keyframes","complexMixin","css","Wrapper","styled","div","$visible","visible","textArray","text","setText","isDeleting","setDeleting","loopNumber","setLoopNumber","typingSpeed","setTypingSpeed","timer","fullText","substring","handleType","clearTimeout","hoverAnimation","ArrowCenter","ArrowLeft","ArrowRight","AnimatedWrapper","ArrowWrapper","Arrow","onArrowClickHandler","onClick","MyName","WrapperForAppearing","MainPageWrapper","MyInfoWrapper","AnnotationWrapper","ProjectNameWrapper","AnimatedProjectName","$isScrolling","ProjectLittleDescription","AnimatedDescription","$invisible","isScrolling","isDrugging","ButtonWrapper","Line","AnimatedText","Button","VideoWrapper","Video","videoRef","currentTime","muted","src","AllProjectsWrapper","MenuButton","MenuButtonWrapper","isAboutBlockOpened","openInformation","closeInformation","closeProject","currentProject","memoizedText","AnimatedLogo","LogoWrapper","Logo","returnOnMainPage","animated","ProgressLine","CurrentProject","AllProjects","Border","ProgressBlock","setScroll","translateY","currentPercent","newY","wrapperRef","offsetHeight","currentY","currentTop","onDrugHandler","useDrag","delta","active","down","first","top","currentBlockPercent","staticY","InvisibleTextForSize","VisibleText","InnerCentralWrapper","CommonWrapper","Headers","$big","AboutMe","InfoHeaders","Contacts","SingleContact","isContentVisible","setVisibility","textContent","TextTypingTechnologies","$role","currentText","role","CloseLookWrapper","CenteringWrapper","ProjectName","References","SingleRef","ProjectDetailedDescription","ProsAndCons","memoizedProject","setProject","visibility","ScrollableWrapper","useWheel","direction","domTarget","swipe","isMobile","filterTaps","eventOptions","passive","LettersWrapper","SingleLetterWrapper","SingleLetter","loading","split","wrapperAnimation","setWrapperAnimation","loadStateCheck","document","readyState","Error","library","add","far","fas","GlobalStyles","createGlobalStyle","App","reloadFunction","location","reload","orientation","screen","root","getElementById","ReactDOM","unstable_createRoot","render","module","exports"],"mappings":"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","file":"static/js/main.db330273.chunk.js","sourcesContent":["import {InferActionTypes} from \"./store\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n    CLOSE_ABOUT_ME_SECTION,\r\n    CLOSE_LOOK,\r\n    CLOSE_PROJECT,\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK,\r\n    MAIN_SCENE_STATIC,\r\n    OPEN_ABOUT_ME_SECTION,\r\n    OPEN_PROJECT,\r\n    PROJECTS_SCROLLING,\r\n    PROJECTS_STATIC,\r\n    RETURNING_FROM_CLOSE_LOOK,\r\n    SET_INTERFACE_AVAILABILITY,\r\n    SET_MAIN_PAGE_STATE,\r\n    SET_SCROLLS,\r\n    SET_SUN,\r\n    SET_VIDEO,\r\n    SET_VIDEO_PLAYER_STATE,\r\n    START_DRUGGING,\r\n    START_SCROLLING,\r\n    STOP_DRUGGING,\r\n    STOP_SCROLLING,\r\n    TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n    TRANSITION_FROM_MAIN_PAGE,\r\n    TRANSITION_FROM_MAIN_TO_PROJECTS,\r\n    TRANSITION_TO_MAIN_PAGE,\r\n    TRANSITION_TO_ABOUT_SECTION,\r\n    STOP_ANY_ANIMATION,\r\n    STOP_TRANSITION_TO_MAIN_PAGE,\r\n    SET_LOADED_STATE,\r\n    GEOMETRIES_TRANSITION_FROM_MAIN_PAGE,\r\n    GEOMETRIES_TRANSITION_TO_MAIN_PAGE,\r\n} from \"../utils/StringVariablesAndTypes\";\r\n\r\ntype InitialStateType = {\r\n    loadedState: boolean,\r\n    scrollsCount: number,\r\n    explosionProgress: number,\r\n    cameraState: string | null,\r\n    sun: THREE.Mesh | null,\r\n    videos: { video: HTMLVideoElement, projectIndex: number }[],\r\n    currentlyLookedProject: number | null,\r\n    isMainPageFocused: boolean,\r\n    isInterfaceAvailable: boolean,\r\n    isCrystalExploded: boolean,\r\n    isAboutMenuOpened: boolean,\r\n    videoPlayerState: boolean,\r\n    geometriesTransition: null | string,\r\n    druggingState: boolean,\r\n    scrollingState: boolean\r\n};\r\n\r\nconst initialState = {\r\n    loadedState: true,\r\n    scrollsCount: 0,\r\n    explosionProgress: 0,\r\n    sun: null,\r\n    cameraState: null,\r\n    videos: [],\r\n    currentlyLookedProject: null,\r\n    isMainPageFocused: true,\r\n    isInterfaceAvailable: false,\r\n    isCrystalExploded: false,\r\n    isAboutMenuOpened: false,\r\n    videoPlayerState: false,\r\n    geometriesTransition: null,\r\n    druggingState: false,\r\n    scrollingState: false\r\n};\r\n\r\nconst MainReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"REDUX/SET_LOADED_STATE\":\r\n            return {\r\n                ...state,\r\n                loadedState: true\r\n            }\r\n        case 'REDUX/SET_SUN':\r\n            return {\r\n                ...state,\r\n                sun: action.sun\r\n            }\r\n        case 'REDUX/SET_SCROLLS':\r\n            return {\r\n                ...state,\r\n                scrollsCount: action.scrollsCount\r\n            }\r\n        case \"REDUX/SET_VIDEO\":\r\n            return {\r\n                ...state,\r\n            videos: [...state.videos, {video: action.video, projectIndex: action.projectIndex}]\r\n            }\r\n        case \"REDUX/SET_MAIN_PAGE_STATE\":\r\n            return {\r\n                ...state,\r\n                isMainPageFocused: action.isFocused\r\n            }\r\n        case \"REDUX/SET_INTERFACE_AVAILABILITY\":\r\n            return {\r\n                ...state,\r\n                isInterfaceAvailable: action.isAvailable,\r\n            }\r\n        case \"REDUX/SET_VIDEO_PLAYER_STATE\":\r\n            return {\r\n                ...state,\r\n                videoPlayerState: action.play\r\n            }\r\n        case \"REDUX/TRANSITION_FROM_MAIN_PAGE\":\r\n            return {\r\n                ...state,\r\n                isMainPageFocused: false,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_FROM_MAIN_PAGE,\r\n                cameraState: TRANSITION_FROM_MAIN_TO_PROJECTS,\r\n                scrollingState: true,\r\n            }\r\n        case \"REDUX/TRANSITION_TO_MAIN_PAGE\":\r\n            return {\r\n                ...state,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_TO_MAIN_PAGE,\r\n                cameraState: MAIN_SCENE_STATIC,\r\n                isInterfaceAvailable: false,\r\n                scrollingState: true,\r\n                scrollsCount: 0,\r\n            }\r\n        case \"REDUX/STOP_TRANSITION_TO_MAIN_PAGE\":\r\n            return {\r\n                ...state,\r\n                scrollingState: false,\r\n                isMainPageFocused: true\r\n            }\r\n        case \"REDUX/OPEN_ABOUT_ME_SECTION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                isAboutMenuOpened: true,\r\n                cameraState: TRANSITION_TO_ABOUT_SECTION,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/CLOSE_ABOUT_ME_SECTION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                isAboutMenuOpened: false,\r\n                cameraState: TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/OPEN_PROJECT\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                currentlyLookedProject: action.project,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_TO_CLOSE_LOOK,\r\n                cameraState: CLOSE_LOOK,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/CLOSE_PROJECT\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                currentlyLookedProject: null,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n                cameraState: RETURNING_FROM_CLOSE_LOOK,\r\n                videoPlayerState: false,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/START_SCROLLING\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                cameraState: PROJECTS_SCROLLING,\r\n                scrollsCount: action.positive ? state.scrollsCount + 1 : state.scrollsCount - 1\r\n            }\r\n        case \"REDUX/STOP_SCROLLING\":\r\n            return {\r\n                ...state,\r\n                scrollingState: false,\r\n                cameraState: PROJECTS_STATIC,\r\n            }\r\n        case \"REDUX/START_DRUGGING\":\r\n            return {\r\n                ...state,\r\n                cameraState: PROJECTS_SCROLLING,\r\n                druggingState: true\r\n            }\r\n        case \"REDUX/STOP_DRUGGING\":\r\n            return {\r\n                ...state,\r\n                cameraState: PROJECTS_STATIC,\r\n                druggingState: false\r\n            }\r\n        case \"REDUX/STOP_ANY_ANIMATION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: false,\r\n                isInterfaceAvailable: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    setLoadedState: () => ({type: SET_LOADED_STATE}) as const,\r\n    setSun: (sun: THREE.Mesh | null) => ({type: SET_SUN, sun}) as const,\r\n    setScrollsCount: (scrollsCount: number) => ({type: SET_SCROLLS, scrollsCount}) as const,\r\n    setVideo: (video: HTMLVideoElement, projectIndex: number) => ({type: SET_VIDEO, video, projectIndex}) as const,\r\n    setMainPageState: (isFocused: boolean) => ({type: SET_MAIN_PAGE_STATE, isFocused}) as const,\r\n    setInterfaceAvailability: (isAvailable: boolean) => ({type: SET_INTERFACE_AVAILABILITY, isAvailable}) as const,\r\n    setVideoPlayerState: (play: boolean) => ({type: SET_VIDEO_PLAYER_STATE, play}) as const,\r\n    transitionFromMainPaige: () => ({type: TRANSITION_FROM_MAIN_PAGE}) as const,\r\n    transitionToMainPaige: () => ({type: TRANSITION_TO_MAIN_PAGE}) as const,\r\n    stopTransitionToMainPaige: () => ({type: STOP_TRANSITION_TO_MAIN_PAGE}) as const,\r\n    openAboutMeSection: () => ({type: OPEN_ABOUT_ME_SECTION}) as const,\r\n    closeAboutMeSection: () => ({type: CLOSE_ABOUT_ME_SECTION}) as const,\r\n    openProject: (project: number) => ({type: OPEN_PROJECT, project}) as const,\r\n    closeProject: () => ({type: CLOSE_PROJECT}) as const,\r\n    startScrolling: (positive: boolean) => ({type: START_SCROLLING, positive}) as const,\r\n    stopScrolling: () => ({type: STOP_SCROLLING}) as const,\r\n    startDrugging: () => ({type: START_DRUGGING}) as const,\r\n    stopDrugging: () => ({type: STOP_DRUGGING}) as const,\r\n    stopAnyAnimation: () => ({type: STOP_ANY_ANIMATION}) as const,\r\n}\r\n\r\nexport default MainReducer","// camera state\r\nexport const MAIN_SCENE_STATIC = 'static main scene';\r\nexport const TRANSITION_FROM_MAIN_TO_PROJECTS = 'transition from main to project';\r\nexport const PROJECTS_STATIC = 'static projects scene';\r\nexport const PROJECTS_SCROLLING = 'scrolling projects scene';\r\nexport const CLOSE_LOOK = 'close look';\r\nexport const RETURNING_FROM_CLOSE_LOOK = 'returning from close look';\r\nexport const TRANSITION_TO_ABOUT_SECTION = 'about me';\r\nexport const TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC = 'closing info';\r\n\r\n//geometries transition\r\nexport const GEOMETRIES_TRANSITION_FROM_MAIN_PAGE = 'geometries/GEOMETRIES_TRANSITION_FROM_MAIN_PAGE';\r\nexport const GEOMETRIES_TRANSITION_TO_MAIN_PAGE = 'geometries/GEOMETRIES_TRANSITION_TO_MAIN_PAGE';\r\nexport const GEOMETRIES_TRANSITION_TO_CLOSE_LOOK = 'geometries/TRANSITION_TO_CLOSE_LOOK';\r\nexport const GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK = 'geometries/TRANSITION_FROM_CLOSE_LOOK';\r\nexport const GEOMETRIES_TRANSITION_TO_ABOUT_SECTION = 'geometries/TRANSITION_TO_ABOUT_SECTION';\r\nexport const GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION = 'geometries/TRANSITION_FROM_ABOUT_SECTION';\r\n\r\nexport type Vector3Type = [number, number, number];\r\n\r\n\r\n//transition actions\r\nexport const TRANSITION_FROM_MAIN_PAGE = 'REDUX/TRANSITION_FROM_MAIN_PAGE';\r\nexport const TRANSITION_TO_MAIN_PAGE = 'REDUX/TRANSITION_TO_MAIN_PAGE';\r\nexport const STOP_TRANSITION_TO_MAIN_PAGE = 'REDUX/STOP_TRANSITION_TO_MAIN_PAGE';\r\nexport const OPEN_ABOUT_ME_SECTION = 'REDUX/OPEN_ABOUT_ME_SECTION';\r\nexport const CLOSE_ABOUT_ME_SECTION = 'REDUX/CLOSE_ABOUT_ME_SECTION';\r\nexport const OPEN_PROJECT = 'REDUX/OPEN_PROJECT';\r\nexport const CLOSE_PROJECT = 'REDUX/CLOSE_PROJECT';\r\nexport const START_SCROLLING = 'REDUX/START_SCROLLING';\r\nexport const STOP_SCROLLING = 'REDUX/STOP_SCROLLING';\r\nexport const START_DRUGGING = 'REDUX/START_DRUGGING';\r\nexport const STOP_DRUGGING = 'REDUX/STOP_DRUGGING';\r\nexport const STOP_ANY_ANIMATION = 'REDUX/STOP_ANY_ANIMATION';\r\n\r\n//state actions\r\nexport const SET_LOADED_STATE = 'REDUX/SET_LOADED_STATE'\r\nexport const SET_SUN = 'REDUX/SET_SUN';\r\nexport const SET_SCROLLS = 'REDUX/SET_SCROLLS';\r\nexport const SET_MAIN_PAGE_STATE = 'REDUX/SET_MAIN_PAGE_STATE';\r\nexport const SET_INTERFACE_AVAILABILITY = 'REDUX/SET_INTERFACE_AVAILABILITY';\r\nexport const SET_VIDEO = `REDUX/SET_VIDEO`;\r\nexport const SET_CURRENTLY_LOOKED_PROJECT = 'REDUX/SET_CURRENTLY_LOOKED_PROJECT';\r\nexport const SET_VIDEO_PLAYER_STATE = 'REDUX/SET_VIDEO_PLAYER_STATE';\r\n\r\n\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport MainReducer from \"./InterfaceReducer\";\r\n\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    interface: MainReducer,\r\n   /* insaneAnimation: InsaneAnimationReducer*/\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React, {useMemo} from 'react';\r\nimport * as THREE from 'three';\r\nimport {animated, SpringValue} from 'react-spring/three';\r\nimport isEqual from \"react-fast-compare\";\r\n\r\ntype PropsType = {\r\n    scale: [number, number, number],\r\n    position:  [number, number, number],\r\n    rotation: SpringValue<number>\r\n}\r\n\r\nconst SingleBorder: React.FC<PropsType> = ({rotation, position, ...props}) => {\r\n    const {extrudeShape, extrudeSettings} = useMemo(() => {\r\n\r\n        let extrudeShape = new THREE.Shape();\r\n        extrudeShape.moveTo(-51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, 19.2);\r\n        extrudeShape.lineTo(-51.2, 19.2);\r\n\r\n        let hole = new THREE.Path();\r\n        hole.moveTo(-32, -12.8);\r\n        hole.lineTo(32, -12.8);\r\n        hole.lineTo(32, 12.8);\r\n        hole.lineTo(-32, 12.8);\r\n        extrudeShape.holes.push(hole);\r\n        //width: 64, height: 25,6\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,\r\n            depth: 20,\r\n            bevelEnabled: false,\r\n        }\r\n\r\n        return {extrudeShape, extrudeSettings};\r\n    }, []);\r\n\r\n    return (\r\n        <animated.mesh {...props} rotation-z={rotation} position={position} castShadow receiveShadow>\r\n            <extrudeBufferGeometry attach=\"geometry\" args={[extrudeShape, extrudeSettings]}/>\r\n            <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7} shadowSide={THREE.FrontSide}/>\r\n        </animated.mesh>\r\n    );\r\n}\r\n\r\nexport default React.memo(SingleBorder, isEqual)","import React, {useEffect, useRef} from 'react';\r\nimport {useSprings} from 'react-spring/three';\r\nimport SingleBorder from \"./SingleBorder\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK\r\n} from \"../../../../utils/StringVariablesAndTypes\";\r\n\r\n\r\nconst BordersArray: React.FC = () => {\r\n\r\n    const transition = useSelector((state: AppStateType) => state.interface.geometriesTransition, shallowEqual);\r\n\r\n    const [springs, setSprings] = useSprings(40, i => ({\r\n        theta: 0,\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    }));\r\n\r\n    const cancelsForAnimations = useRef<(() => void)[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK || transition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION\r\n            || transition === null) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setSprings(i => ({\r\n                to: async (next) => {\r\n                    let cancelled = false;\r\n                    const cancel = () => cancelled = true;\r\n                    cancelsForAnimations.current.push(cancel)\r\n                    !cancelled && await next({\r\n                        theta: -Math.PI / 2 - 0.004 * (i * i) - i * 0.06,\r\n                        config: {duration: 5000}\r\n                    });\r\n                    !cancelled && await next({\r\n                        theta: (-Math.PI / 2 - 0.004 * (i * i) - i * 0.06) - Math.PI,\r\n                        config: {duration: 5000}\r\n                    });\r\n                    !cancelled && await next({\r\n                        theta: (-Math.PI / 2 - 0.004 * (i * i) - i * 0.06),\r\n                        immediate: true\r\n                    });\r\n                },\r\n                loop: true,\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_TO_CLOSE_LOOK || transition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setSprings(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setSprings(i => ({\r\n                theta: 0,\r\n                config: {duration: undefined}\r\n            })))\r\n        }\r\n    }, [transition, setSprings]);\r\n\r\n    return (\r\n        <>\r\n            {springs.map((spring, i) =>\r\n                <SingleBorder\r\n                    key={i}\r\n                    scale={[0.6, 1, 1]}\r\n                    position={[0, 0, 3 - i * 4]}\r\n                    rotation={spring.theta}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(BordersArray)","import React, {useEffect, useRef} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {useFrame, useThree} from \"react-three-fiber\";\r\nimport {animated, useSpring} from \"react-spring/three\";\r\nimport {\r\n    CLOSE_LOOK,\r\n    MAIN_SCENE_STATIC,\r\n    PROJECTS_SCROLLING,\r\n    PROJECTS_STATIC,\r\n    RETURNING_FROM_CLOSE_LOOK,\r\n    TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n    TRANSITION_FROM_MAIN_TO_PROJECTS,\r\n    TRANSITION_TO_ABOUT_SECTION,\r\n    Vector3Type\r\n} from \"../../utils/StringVariablesAndTypes\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {actions} from \"../../store/InterfaceReducer\";\r\n\r\nexport const cameraPosition = {\r\n    mainDisplay: [0, 0, -300] as Vector3Type,\r\n    staticProjects: [0, 0, 15] as Vector3Type,\r\n    scrollProjects: [0, 0, 35] as Vector3Type,\r\n    closeLook: [-10, 5, 65] as Vector3Type,\r\n    aboutMe: [0, 0, -160] as Vector3Type\r\n};\r\n\r\nconst cameraLookAt = {\r\n    ordinaryPos: [0, 0, -500],\r\n    lookAtProject: [10, 0, 0]\r\n}\r\n\r\n\r\nconst Camera: React.FC = () => {\r\n\r\n    const cameraState = useSelector((state: AppStateType) => state.interface.cameraState, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ref = useRef(new THREE.PerspectiveCamera());\r\n    const {setDefaultCamera, camera} = useThree();\r\n\r\n    useEffect(() => {\r\n        setDefaultCamera(ref.current!);\r\n    }, [setDefaultCamera]);\r\n\r\n    const [{position, lookAt}, setCameraPosition] = useSpring(() => ({\r\n        position: cameraPosition.mainDisplay,\r\n        fov: 50,\r\n        lookAt: cameraLookAt.ordinaryPos,\r\n        config: {\r\n            tension: 100, friction: 25, clamp: true\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (cameraState === MAIN_SCENE_STATIC) {\r\n            setCameraPosition({\r\n                position: cameraPosition.mainDisplay,\r\n                config: {\r\n                    mass: 100,\r\n                    tension: 400,\r\n                    friction: 400,\r\n                    clamp: true,\r\n                }\r\n            }).then(() => dispatch(actions.stopTransitionToMainPaige()));\r\n        }\r\n        if (cameraState === TRANSITION_FROM_MAIN_TO_PROJECTS) setCameraPosition({\r\n            position: cameraPosition.staticProjects,\r\n            config: {\r\n                mass: 100,\r\n                tension: 400,\r\n                friction: 400,\r\n                clamp: true,\r\n            }\r\n        }).then(() => {\r\n            dispatch(actions.setInterfaceAvailability(true));\r\n        });\r\n        if (cameraState === PROJECTS_STATIC) setCameraPosition({\r\n            position: cameraPosition.staticProjects,\r\n            fov: 50,\r\n            config: {\r\n                mass: 1,\r\n                tension: 170,\r\n                friction: 26,\r\n                clamp: true,\r\n            }\r\n        });\r\n        if (cameraState === PROJECTS_SCROLLING) setCameraPosition({\r\n            position: cameraPosition.scrollProjects,\r\n            fov: 80,\r\n            config: {\r\n                mass: 1,\r\n                tension: 170,\r\n                friction: 50,\r\n                clamp: true,\r\n            }\r\n        });\r\n        if (cameraState === CLOSE_LOOK) setCameraPosition({\r\n            position: cameraPosition.closeLook,\r\n            lookAt: cameraLookAt.lookAtProject,\r\n            config: {\r\n                mass: 100,\r\n                tension: 350,\r\n                friction: 300,\r\n                clamp: true,\r\n            }\r\n        }).then(() => {\r\n            dispatch(actions.setVideoPlayerState(true));\r\n            dispatch(actions.stopAnyAnimation())\r\n        });\r\n        if (cameraState === RETURNING_FROM_CLOSE_LOOK) setCameraPosition({\r\n            position: cameraPosition.staticProjects,\r\n            lookAt: cameraLookAt.ordinaryPos,\r\n            config: {\r\n                mass: 100,\r\n                tension: 400,\r\n                friction: 300,\r\n                clamp: true,\r\n            },\r\n            delay: 500\r\n        }).then(() => dispatch(actions.stopAnyAnimation()));\r\n        if (cameraState === TRANSITION_TO_ABOUT_SECTION) {\r\n            setCameraPosition({\r\n                position: cameraPosition.aboutMe,\r\n                config: {\r\n                    mass: 100,\r\n                    tension: 400,\r\n                    friction: 400,\r\n                    clamp: true,\r\n                },\r\n                delay: 1200\r\n            }).then(() => dispatch(actions.stopAnyAnimation()));\r\n        }\r\n        if (cameraState === TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC) {\r\n            setCameraPosition({position: cameraPosition.staticProjects})\r\n                .then(() => dispatch(actions.stopAnyAnimation()))\r\n        }\r\n    }, [cameraState, setCameraPosition, dispatch]);\r\n\r\n    useFrame(() => {\r\n        camera.lookAt(...lookAt.get() as Vector3Type)\r\n    })\r\n\r\n    // @ts-ignore\r\n    return <animated.perspectiveCamera ref={ref} position={position}/>\r\n}\r\n\r\nexport default React.memo(Camera)","import React from 'react';\r\nimport {animated} from \"@react-spring/three\";\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport * as THREE from \"three\";\r\nimport {SpringValue} from 'react-spring/three';\r\n\r\ntype PropsType = {\r\n    pyramidPosition: SpringValue<number[]>\r\n}\r\n\r\nconst Pyramid: React.FC<PropsType> = ({pyramidPosition}) => {\r\n\r\n    return (\r\n        <animated.mesh scale={[10, 10, 10]} receiveShadow\r\n                       position={pyramidPosition as unknown as Vector3Type}\r\n                       rotation={[Math.PI, 0, 0]}>\r\n            <coneBufferGeometry attach=\"geometry\" args={[5, 10, 4]}/>\r\n            <meshStandardMaterial attach=\"material\" roughness={0.7} shadowSide={THREE.FrontSide} color={'white'} metalness={0.6}/>\r\n        </animated.mesh>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Pyramid)","import React from 'react';\r\nimport {animated, useSpring, SpringValue} from \"react-spring/three\";\r\nimport * as THREE from 'three';\r\n\r\ntype PropsType = {\r\n    color: SpringValue<string>\r\n}\r\n\r\nconst Background: React.FC<PropsType> = ({color}) => {\r\n\r\n   /* const {color} = useSpring({\r\n        color: /!*opened ? '#EAE6E5' :*!/ '#000B11',\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true\r\n        },\r\n        delay: opened ? 1000 : 0\r\n    })*/\r\n\r\n    return(\r\n        <mesh position={[0, 0, 0]}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[700, 700, 700]}/>\r\n            <animated.meshBasicMaterial attach=\"material\" color={color} side={THREE.BackSide}/>\r\n        </mesh>\r\n    )\r\n}\r\n\r\nexport default React.memo(Background)","import React, {useEffect, useMemo} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK,\r\n    Vector3Type\r\n} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {animated, config, useSprings} from \"react-spring/three\";\r\n\r\n\r\nconst xGrid = 5, yGrid = 5;\r\nconst xSize = 19.2 / xGrid;\r\nconst ySize = 12.8 / yGrid;\r\n\r\nconst AnimatedCubes: React.FC = () => {\r\n\r\n    const transition = useSelector((state: AppStateType) => state.interface.geometriesTransition, shallowEqual);\r\n\r\n    const closeLookPositions = useMemo(() => {\r\n        let positions: Vector3Type[] = [];\r\n        for (let i = 0; i < xGrid; i++)\r\n            for (let j = 0; j < yGrid; j++) {\r\n                const position: Vector3Type = [\r\n                    (i - xGrid / 2) * xSize,\r\n                    (j - yGrid / 2) * ySize + 2,\r\n                    30 - Math.random() * 2 + 310\r\n                ];\r\n                positions.push(position)\r\n            }\r\n        return positions\r\n    }, []);\r\n\r\n    const projectsObservationPositions = useMemo(() => {\r\n        const zDistance = -160 / (xGrid * yGrid);\r\n        let positions: Vector3Type[] = [];\r\n        for (let i = 0; i < xGrid * yGrid; i++) {\r\n            const x = Math.random() * 20 - 10;\r\n            const y = Math.random() * 13 - 6.5;\r\n            const z = i * zDistance + 0.7 * zDistance * Math.random() + 310;\r\n            positions.push([x, y, z])\r\n        }\r\n        return positions\r\n    }, []);\r\n\r\n    const {positionsInAstralPlane, scaleInAstralPlane} = useMemo(() => {\r\n        let positionsInAstralPlane: Vector3Type[] = [];\r\n        let scaleInAstralPlane: Vector3Type[] = [];\r\n        for (let i = 1; i <= xGrid * yGrid; i++) {\r\n            const row = i % 5;\r\n            const column = Math.ceil(i / 5) - 1;\r\n            const x = THREE.MathUtils.lerp(-28.75, 28.75, row / 4);\r\n            const z = THREE.MathUtils.lerp(-29, 29, column / 4);\r\n            positionsInAstralPlane.push([x, -200, z]);\r\n\r\n            const scaleX = Math.random() * 4 + (column === 2 && row === 2 ? 95 :\r\n                (row === 0 || row === 4) || (column === 0 || column === 4) ? 65 : 80);\r\n            const scaleY = 5 + Math.random();\r\n            const scaleZ = 5 + Math.random();\r\n            scaleInAstralPlane.push([scaleX, scaleY, scaleZ])\r\n        }\r\n        return {positionsInAstralPlane, scaleInAstralPlane}\r\n    }, []);\r\n\r\n    const rotationDirections = useMemo(() => {\r\n        const rotationArray = []\r\n        for (let i = 0; i < xGrid * yGrid; i++) {\r\n            rotationArray.push([Math.PI * Math.random(), Math.PI * Math.random(), Math.PI * Math.random()])\r\n        }\r\n        return rotationArray\r\n    }, []);\r\n\r\n    const [animation, setAnimation] = useSprings(xGrid * yGrid, i => ({\r\n        position: projectsObservationPositions[i],\r\n        scale: [0.7, 0.7, 0.7],\r\n        rotation: rotationDirections[i],\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (transition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation(i => ({\r\n                to: async (next) => {\r\n                    await next({\r\n                        position: [projectsObservationPositions[i][0], projectsObservationPositions[i][1], 50],\r\n                        config: config.default,\r\n                        delay: 300\r\n                    });\r\n                    await next({\r\n                        position: positionsInAstralPlane[i],\r\n                        rotation: [0, 0, Math.PI / 2],\r\n                        scale: [0.3, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                        immediate: true\r\n                    });\r\n                    await next({\r\n                        scale: scaleInAstralPlane[i],\r\n                    });\r\n                }\r\n            }))).then(() => setAnimation(i => {\r\n                const row = (i + 1) % 5;\r\n                const column = Math.ceil((i + 1) / 5) - 1;\r\n                if (row === 2 && column === 2) return {to: false};\r\n                const scaleX = scaleInAstralPlane[i][0] + Math.random() * 8;\r\n                return {\r\n                    to: async (next) => {\r\n                        await next({\r\n                            scale: [scaleInAstralPlane[i][0], scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                            config: {duration: 1000 + Math.random() * 2000},\r\n                            delay: 500 + Math.random() * 1000,\r\n\r\n                        });\r\n                        await next({\r\n                            scale: [scaleX, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                            config: {duration: 1000 + Math.random() * 2000},\r\n                            delay: Math.random() * 500\r\n                        });\r\n                    },\r\n                    loop: true,\r\n                }\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation(i => ({\r\n                scale: [0.7, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                config: config.default\r\n            }))).then(() => setAnimation(i => ({\r\n                scale: [0.7, 0.7, 0.7],\r\n                config: config.default\r\n            }))).then(() => setAnimation(i => ({\r\n                to: async (next) => {\r\n                    await next({\r\n                        position: [projectsObservationPositions[i][0], projectsObservationPositions[i][1], 0],\r\n                        scale: [0.7, 0.7, 0.7],\r\n                        rotation: rotationDirections[i],\r\n                        config: {duration: 400 + Math.random() * 300}\r\n                    });\r\n                    await next({\r\n                        position: projectsObservationPositions[i],\r\n                        rotation: rotationDirections[i],\r\n                        config: {\r\n                            mass: 1,\r\n                            tension: 150,\r\n                            friction: 40\r\n                        }\r\n                    });\r\n                }\r\n            }))).then(() => setAnimation(i => {\r\n                return {\r\n                    to: async next => {\r\n                        await next({rotation: rotationDirections[i]})\r\n                        await next({rotation: rotationDirections[i].map(item => item + 2 * Math.PI)})\r\n                        await next({rotation: rotationDirections[i], immediate: true})\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_TO_CLOSE_LOOK) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation(i => ({\r\n                position: closeLookPositions[i],\r\n                scale: [1, 1, 1],\r\n                rotation: [0, 0, 0],\r\n                config: (prop) =>\r\n                    prop === 'rotation' ? {\r\n                        mass: 1,\r\n                        tension: 100,\r\n                        friction: 40 + (xGrid * yGrid - i),\r\n                        clamp: true,\r\n                    } : {\r\n                        mass: 1,\r\n                        tension: 170,\r\n                        friction: 30,\r\n                        clamp: true,\r\n                    },\r\n                delay: (prop) =>\r\n                    prop === 'rotation' ? 0 : 1000 + (xGrid * yGrid - i) * 100\r\n            }))).then(() => {\r\n                setAnimation(i => {\r\n                    return {\r\n                        to: async (next) => {\r\n                            await next({\r\n                                position: [closeLookPositions[i][0], closeLookPositions[i][1], closeLookPositions[i][2] + Math.random() * 3],\r\n                                config: {duration: 200 + Math.random() * 300},\r\n                                delay: Math.random() * 500\r\n                            });\r\n                            await next({\r\n                                position: [closeLookPositions[i][0], closeLookPositions[i][1], closeLookPositions[i][2] + Math.random() * 3],\r\n                                config: {duration: 200 + Math.random() * 300},\r\n                                delay: Math.random() * 500\r\n                            })\r\n                        },\r\n                        loop: true\r\n                    }\r\n                })\r\n            });\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation(i => ({\r\n                position: closeLookPositions[i]\r\n            }))).then(() => setAnimation(i => ({\r\n                position: projectsObservationPositions[i],\r\n                scale: [0.7, 0.7, 0.7],\r\n                rotation: rotationDirections[i],\r\n                config: {\r\n                    tension: 100,\r\n                    friction: 60\r\n                },\r\n            }))).then(() => setAnimation(i => {\r\n                return {\r\n                    to: async next => {\r\n                        await next({rotation: rotationDirections[i]})\r\n                        await next({rotation: rotationDirections[i].map(item => item + 2 * Math.PI)})\r\n                        await next({rotation: rotationDirections[i], immediate: true})\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            }))\r\n        }\r\n        if (transition === null) {\r\n            setAnimation(i => {\r\n                return {\r\n                    to: async next => {\r\n                        await next({rotation: rotationDirections[i]});\r\n                        await next({rotation: rotationDirections[i].map(item => item + 2 * Math.PI)});\r\n                        await next({rotation: rotationDirections[i], immediate: true});\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            })\r\n        }\r\n    }, [transition, setAnimation, closeLookPositions, positionsInAstralPlane, rotationDirections,\r\n        scaleInAstralPlane, projectsObservationPositions]);\r\n\r\n    return (\r\n        <>\r\n            {animation.map(({scale, position, rotation}, i) =>\r\n                <animated.mesh key={i} position={position as unknown as Vector3Type} castShadow receiveShadow\r\n                               scale={scale as unknown as Vector3Type}\r\n                               rotation={rotation as unknown as Vector3Type}>\r\n                    <boxBufferGeometry attach=\"geometry\" args={[xSize, ySize, ySize, 5, 5, 5]}/>\r\n                    <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7}\r\n                                          shadowSide={THREE.FrontSide}/>\r\n                </animated.mesh>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AnimatedCubes)","import * as THREE from \"three\";\r\n\r\nexport const innerShader = {\r\n    extensions: {\r\n        derivatives: true\r\n    },\r\n    side: THREE.DoubleSide,\r\n    uniforms: {\r\n        time: {type: \"f\", value: 0},\r\n        progress: {type: \"f\", value: 0},\r\n        inside: {type: \"f\", value: 0},\r\n        surfaceColor: {type: \"v3\", value:  new THREE.Color('#353535')},\r\n        insideColor: {type: \"v3\", value:  new THREE.Color('#540b0e')},\r\n        tCube: {value: THREE.CubeTexture},\r\n        pixels: {\r\n            type: \"v2\",\r\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n        },\r\n        uvRate1: {\r\n            value: new THREE.Vector2(1, 1)\r\n        }\r\n    },\r\n    vertexShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n\r\n\r\n\r\n        attribute vec3 centers;\r\n        attribute vec3 axis;\r\n        attribute float offset;\r\n\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n\r\n        mat4 rotationMatrix(vec3 axis, float angle) {\r\n        axis = normalize(axis);\r\n        float s = sin(angle);\r\n        float c = cos(angle);\r\n        float oc = 1.0 - c;\r\n\r\n        return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\r\n            oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\r\n            oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\r\n            0.0,                                0.0,                                0.0,                                1.0);\r\n    }\r\n\r\n    vec3 rotate(vec3 v, vec3 axis, float angle) {\r\n        mat4 m = rotationMatrix(axis, angle);\r\n        return (m * vec4(v, 1.0)).xyz;\r\n    }\r\n\r\n    vec3 bezier4(vec3 a, vec3 b, vec3 c, vec3 d, float t) {\r\n        return mix(mix(mix(a, b, t), mix(b, c, t), t), mix(mix(b, c, t), mix(c, d, t), t), t);\r\n    }\r\n\r\n    float easeInOutQuint(float t){\r\n        return t < 0.5 ? 16.0 * t * t * t * t * t : 1.0 + 16.0 * (--t) * t * t * t * t;\r\n    }\r\n    float easeOutQuint(float t){\r\n        return 1. + (--t) * t * t * t * t;\r\n    }\r\n    float easeOut(float t){\r\n        return  t * t * t;\r\n    }\r\n\r\n    void main() {\r\n\r\n        vec3 newposition = position;\r\n\r\n  float vTemp =  1. - (centers.y + 100.)/200.;\r\n\r\n  float tProgress = max(0.0, (progress - vTemp*0.0) /1.);\r\n\r\n  vec3 newnormal = rotate(normal,axis,tProgress*(3. + offset*10.));\r\n  vNormal = newnormal;\r\n\r\n  newposition += newposition + centers*(tProgress)*(30.);\r\n\r\n  eye = normalize( vec3( modelViewMatrix * vec4( newposition, 1.0 ) ) );\r\n  vec4 worldPosition = modelMatrix * vec4( newposition, 1.0 );\r\n  vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * newnormal );\r\n  vec3 I = worldPosition.xyz - cameraPosition;\r\n  vReflect = reflect( I, worldNormal );\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( newposition, 1.0 );\r\n                }`,\r\n    fragmentShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n        uniform vec3 surfaceColor;\r\n        uniform vec3 insideColor;\r\n        uniform samplerCube tCube;\r\n        \r\n        varying vec2 vUv;\r\n        varying vec2 vUv1;\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n        \r\n        void main()\t{\r\n        \r\n            vec3 r = reflect( eye, vNormal );\r\n            float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\r\n            vec2 vN = r.xy / m + .5;\r\n            vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n        \r\n            vec3 light = normalize(vec3(12.,10.,10.));\r\n            vec3 light1 = normalize(vec3(-12.,-10.,-10.));\r\n            float l = clamp(dot(light, vNormal),0.5,1.);\r\n            l += clamp(dot(light1, vNormal),0.5,1.)/2.;\r\n            \r\n            if(inside<0.5){\r\n                gl_FragColor = vec4(l,l,l,1.)*vec4(surfaceColor,1.);\r\n            } else{\r\n                gl_FragColor = vec4(l,l,l,1.)*vec4(insideColor,1.);\r\n            }\r\n        }`\r\n}\r\n\r\nexport const outerShader = {\r\n    extensions: {\r\n        derivatives: true\r\n    },\r\n    side: THREE.DoubleSide,\r\n    uniforms: {\r\n        time: {type: \"f\", value: 0},\r\n        progress: {type: \"f\", value: 0},\r\n        inside: {type: \"f\", value: 1},\r\n        surfaceColor: {type: \"v3\", value:  new THREE.Color('#353535')},\r\n        insideColor: {type: \"v3\", value:  new THREE.Color('#540b0e')},\r\n        tCube: {value: THREE.CubeTexture},\r\n        pixels: {\r\n            type: \"v2\",\r\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n        },\r\n        uvRate1: {\r\n            value: new THREE.Vector2(1, 1)\r\n        }\r\n    },\r\n    vertexShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n\r\n\r\n\r\n        attribute vec3 centers;\r\n        attribute vec3 axis;\r\n        attribute float offset;\r\n\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n\r\n        mat4 rotationMatrix(vec3 axis, float angle) {\r\n        axis = normalize(axis);\r\n        float s = sin(angle);\r\n        float c = cos(angle);\r\n        float oc = 1.0 - c;\r\n\r\n        return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\r\n            oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\r\n            oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\r\n            0.0,                                0.0,                                0.0,                                1.0);\r\n    }\r\n\r\n    vec3 rotate(vec3 v, vec3 axis, float angle) {\r\n        mat4 m = rotationMatrix(axis, angle);\r\n        return (m * vec4(v, 1.0)).xyz;\r\n    }\r\n\r\n    vec3 bezier4(vec3 a, vec3 b, vec3 c, vec3 d, float t) {\r\n        return mix(mix(mix(a, b, t), mix(b, c, t), t), mix(mix(b, c, t), mix(c, d, t), t), t);\r\n    }\r\n\r\n    float easeInOutQuint(float t){\r\n        return t < 0.5 ? 16.0 * t * t * t * t * t : 1.0 + 16.0 * (--t) * t * t * t * t;\r\n    }\r\n    float easeOutQuint(float t){\r\n        return 1. + (--t) * t * t * t * t;\r\n    }\r\n    float easeOut(float t){\r\n        return  t * t * t;\r\n    }\r\n\r\n    void main() {\r\n\r\n       vec3 newposition = position;\r\n\r\n  float vTemp =  1. - (centers.y + 100.)/200.;\r\n\r\n  float tProgress = max(0.0, (progress - vTemp*0.0) /1.);\r\n\r\n  vec3 newnormal = rotate(normal,axis,tProgress*(3. + offset*10.));\r\n  vNormal = newnormal;\r\n\r\n  newposition += newposition + centers*(tProgress)*(30.);\r\n\r\n  eye = normalize( vec3( modelViewMatrix * vec4( newposition, 1.0 ) ) );\r\n  vec4 worldPosition = modelMatrix * vec4( newposition, 1.0 );\r\n  vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * newnormal );\r\n  vec3 I = worldPosition.xyz - cameraPosition;\r\n  vReflect = reflect( I, worldNormal );\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( newposition, 1.0 );\r\n                }`,\r\n    fragmentShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n        uniform vec3 surfaceColor;\r\n        uniform vec3 insideColor;\r\n        uniform samplerCube tCube;\r\n        \r\n        varying vec2 vUv;\r\n        varying vec2 vUv1;\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n        \r\n        void main()\t{\r\n        \r\n            vec3 r = reflect( eye, vNormal );\r\n            float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\r\n            vec2 vN = r.xy / m + .5;\r\n            vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n        \r\n            vec3 light = normalize(vec3(12.,10.,10.));\r\n            vec3 light1 = normalize(vec3(-12.,-10.,-10.));\r\n            float l = clamp(dot(light, vNormal),0.5,1.);\r\n            l += clamp(dot(light1, vNormal),0.5,1.)/2.;\r\n            \r\n            if(inside<0.5){\r\n                gl_FragColor = vec4(l,l,l,1.)*vec4(surfaceColor,1.);\r\n            } else{\r\n                gl_FragColor = vec4(l,l,l,1.)*vec4(insideColor,1.);\r\n            }\r\n        }`\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport * as THREE from 'three';\r\nimport {innerShader, outerShader} from \"./shaderMaterial\";\r\nimport {BufferGeometryUtils} from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport {animated, SpringValue} from 'react-spring/three';\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport GLB from \"../../../assets/model/withoutAll.glb\"\r\n\r\ninterface CustomMesh extends THREE.Mesh {\r\n    geometry: THREE.BufferGeometry\r\n}\r\n\r\ninterface CustomObject extends THREE.Object3D {\r\n    children: CustomMesh[]\r\n}\r\n\r\ntype StateType = {\r\n    innerMesh: THREE.BufferGeometry | null,\r\n    outerMesh: THREE.BufferGeometry | null\r\n}\r\n\r\nconst processSurface = (object: CustomObject, index: number) => {\r\n    let coords = object.position;\r\n    let surface = object.children[0].geometry.clone().applyMatrix4(\r\n        new THREE.Matrix4().makeTranslation(coords.x, coords.y, coords.z)\r\n    );\r\n    let volume = object.children[1].geometry.clone().applyMatrix4(new THREE.Matrix4().makeTranslation(coords.x, coords.y, coords.z));\r\n    let surfaceLength = object.children[0].geometry.attributes.position.array.length / 3;\r\n    let volumeLength = object.children[1].geometry.attributes.position.array.length / 3;\r\n    //  id\r\n    let offset = new Array(surfaceLength).fill(index / 100);\r\n    surface.setAttribute(\r\n        \"offset\",\r\n        new THREE.BufferAttribute(new Float32Array(offset), 1)\r\n    );\r\n    let offset1 = new Array(volumeLength).fill(index / 100);\r\n    volume.setAttribute(\r\n        \"offset\",\r\n        new THREE.BufferAttribute(new Float32Array(offset1), 1)\r\n    );\r\n    // axis\r\n    let getRandomAxis = () => {\r\n        return new THREE.Vector3(\r\n            Math.random() - 0.5,\r\n            Math.random() - 0.5,\r\n            Math.random() - 0.5\r\n        ).normalize();\r\n    };\r\n    let axis = getRandomAxis();\r\n    let axes = new Array(surfaceLength * 3).fill(0);\r\n    let axes1 = new Array(volumeLength * 3).fill(0);\r\n    for (let i = 0; i < surfaceLength * 3; i = i + 3) {\r\n        axes[i] = axis.x;\r\n        axes[i + 1] = axis.y;\r\n        axes[i + 2] = axis.z;\r\n    }\r\n    surface.setAttribute(\r\n        \"axis\",\r\n        new THREE.BufferAttribute(new Float32Array(axes), 3)\r\n    );\r\n    for (let i = 0; i < volumeLength * 3; i = i + 3) {\r\n        axes1[i] = axis.x;\r\n        axes1[i + 1] = axis.y;\r\n        axes1[i + 2] = axis.z;\r\n    }\r\n    volume.setAttribute(\r\n        \"axis\",\r\n        new THREE.BufferAttribute(new Float32Array(axes1), 3)\r\n    );\r\n\r\n    let getCentroid = (geometry: THREE.BufferGeometry) => {\r\n        let ar = geometry.attributes.position.array;\r\n        let len = ar.length;\r\n        let x = 0,\r\n            y = 0,\r\n            z = 0;\r\n        for (let i = 0; i < len; i = i + 3) {\r\n            x += ar[i];\r\n            y += ar[i + 1];\r\n            z += ar[i + 2];\r\n        }\r\n        return {x: (3 * x) / len, y: (3 * y) / len, z: (3 * z) / len};\r\n    }\r\n\r\n    let centroidVector = getCentroid(surface);\r\n    let centroid = new Array(surfaceLength * 3).fill(0);\r\n    let centroid1 = new Array(volumeLength * 3).fill(0);\r\n    for (let i = 0; i < surfaceLength * 3; i = i + 3) {\r\n        centroid[i] = centroidVector.x;\r\n        centroid[i + 1] = centroidVector.y;\r\n        centroid[i + 2] = centroidVector.z;\r\n    }\r\n    for (let i = 0; i < volumeLength * 3; i = i + 3) {\r\n        centroid1[i] = centroidVector.x;\r\n        centroid1[i + 1] = centroidVector.y;\r\n        centroid1[i + 2] = centroidVector.z;\r\n    }\r\n    surface.setAttribute(\r\n        \"centers\",\r\n        new THREE.BufferAttribute(new Float32Array(centroid), 3)\r\n    );\r\n    volume.setAttribute(\r\n        \"centers\",\r\n        new THREE.BufferAttribute(new Float32Array(centroid1), 3)\r\n    );\r\n\r\n    return {surface, volume};\r\n};\r\n\r\nconst sign = (number: number) => number === 0 ? 1 : number / Math.abs(number);\r\n\r\ntype PropsType = {\r\n    progress: SpringValue<number>\r\n}\r\n\r\nconst Crystal: React.FC<PropsType> = ({progress}) => {\r\n\r\n    const [{innerMesh, outerMesh}, setS] = useState<StateType>({innerMesh: null, outerMesh: null});\r\n\r\n    useEffect(() => {\r\n        const loader = new GLTFLoader();\r\n\r\n        loader.load(GLB,\r\n            (gltf) => {\r\n                let voronoiObj: THREE.Object3D[] = [];\r\n                gltf.scene.traverse((child) => {\r\n                    if (child.name === \"Voronoi_Fracture\") {\r\n                        if (child.children[0].children.length > 2) {\r\n                            child.children.forEach(f => {\r\n                                f.children.forEach(m => {\r\n                                    voronoiObj.push(m.clone());\r\n                                });\r\n                            });\r\n                        } else {\r\n                            child.children.forEach(m => {\r\n                                voronoiObj.push(m.clone());\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n                let innerGeometry: THREE.BufferGeometry[] = [];\r\n                let outerGeometry: THREE.BufferGeometry[] = [];\r\n                let j = 0;\r\n                voronoiObj = voronoiObj.filter(v => {\r\n                    if (v instanceof THREE.Mesh) return false;\r\n                    else {\r\n                        j++;\r\n                        let processedSurface = processSurface(v as CustomObject, j);\r\n                        outerGeometry.push(processedSurface.surface);\r\n                        innerGeometry.push(processedSurface.volume);\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                let innerMesh = BufferGeometryUtils.mergeBufferGeometries(\r\n                    innerGeometry,\r\n                    false\r\n                );\r\n                innerMesh.computeBoundingSphere();\r\n\r\n                let outerMesh = BufferGeometryUtils.mergeBufferGeometries(\r\n                    outerGeometry,\r\n                    false\r\n                );\r\n                outerMesh.computeBoundingSphere();\r\n                setS({innerMesh, outerMesh});\r\n            }\r\n        );\r\n    }, []);\r\n\r\n//explosion\r\n    const group = useRef<THREE.Group>(new THREE.Group());\r\n\r\n    //mouseEvent\r\n    const mouseCoords = useRef<number[]>([0, 0]);\r\n    const mouseX = useRef(0);\r\n    const mouseY = useRef(0);\r\n\r\n    useEffect(() => {\r\n        const onMouseMoveHandler = (e: MouseEvent) => mouseCoords.current = [e.clientX, e.clientY];\r\n        window.addEventListener('mousemove', onMouseMoveHandler);\r\n\r\n        return () => window.removeEventListener('mousemove', onMouseMoveHandler)\r\n    }, []);\r\n\r\n    useFrame(() => {\r\n        let targetMouseX = 2 * (mouseCoords.current[0] - window.innerWidth / 2) / window.innerWidth;\r\n        let targetMouseY = 2 * (mouseCoords.current[1] - window.innerHeight / 2) / window.innerHeight;\r\n        mouseX.current += (targetMouseX - mouseX.current) * 0.05;\r\n        mouseY.current += (targetMouseY - mouseY.current) * 0.05;\r\n        let ta = Math.abs(mouseX.current);\r\n        let taY = Math.abs(mouseY.current);\r\n        group.current.rotation.x = Math.PI / 2 - taY * (2 - taY) * Math.PI * sign(mouseY.current);\r\n        group.current.rotation.y = Math.PI / 2 - ta * (2 - ta) * Math.PI * sign(mouseX.current);\r\n        group.current.rotation.z = Math.PI / 2 - ta * (2 - ta) * Math.PI * sign(mouseX.current);\r\n    });\r\n\r\n    return (\r\n        <group ref={group}>\r\n            <mesh>\r\n                <bufferGeometry attach=\"geometry\" {...innerMesh}/>\r\n                <animated.shaderMaterial uniforms-progress-value={progress} attach=\"material\" args={[innerShader]}/>\r\n            </mesh>\r\n            <mesh>\r\n                <bufferGeometry attach=\"geometry\" {...outerMesh}/>\r\n                <animated.shaderMaterial uniforms-progress-value={progress} attach=\"material\" args={[outerShader]}/>\r\n            </mesh>\r\n        </group>\r\n    )\r\n};\r\n\r\nexport default React.memo(Crystal)","import video from \"../assets/videos/testVid.mp4\";\r\nimport counter from \"../assets/videos/counter.mp4\";\r\nimport todoList from \"../assets/videos/toDoList.mp4\";\r\n\r\nexport const errorMessage = 'Please, turn your device horizontally.';\r\n\r\nexport const animatedSkillsStack = ['JavaScript', 'TypeScript', 'React', 'Redux', 'Three.js'];\r\n\r\nexport const animatedBigSkillsStack = 'HTML5/CSS3   JavaScript   TypeScript   React   Redux   Three.js   styled-components' +\r\n'   React-spring   axios   thunk   etc...';\r\n\r\nexport type ProjectType = {\r\n    projectName: string,\r\n    projectDescription: string,\r\n    detailedDescription: string,\r\n    pros: string,\r\n    cons: string,\r\n    technologies: string,\r\n    color: string,\r\n    refToProject: string,\r\n    refToGit: string,\r\n    video: any\r\n} ;\r\nexport const projectsInfo: ProjectType[] = [\r\n    {\r\n        projectName: \"The Counter\",\r\n        projectDescription: \"My first project\",\r\n        detailedDescription: \"The project everyone started with. It doesn't have much logic, but looks not so bad. \" +\r\n            \"I think that it is not a shame to show it to someone\",\r\n        pros: \"The project is responsive and has a nice appearance. There are two display modes. \" +\r\n            \"It also has advanced input validation with a set of messages for each error.\",\r\n        cons: \"Slight short-term performance degradation may occur when switching modes. The validation logic is quite bulky\",\r\n        technologies: \"JavaScript React Redux SASS\",\r\n        color: '#847EA0',\r\n        refToProject: 'https://illiagorbatov.github.io/counter/',\r\n        refToGit: 'https://github.com/illiaGorbatov/counter',\r\n        video: counter\r\n    },\r\n    {\r\n        projectName: \"To Do List\",\r\n        projectDescription: \"An application with many interactions\",\r\n        detailedDescription: \"My second project. Connected to the server API, kindly provided to me by IT-incubator. \" +\r\n            \"When developing, the main task was to create a beautiful and responsive application with a huge number of all kinds of user interactions. \" +\r\n            \" Design inspired by Apple's Neumorphism\",\r\n        pros: \"There are animations and transitions for almost any user action. Data will be sent only when the user accepts the changes that can be canceled. \" +\r\n            \"Changes are made by comparing the original state with the edited one.\",\r\n        cons: \"Due to the large number of animations and event handlers, performance issues can be observed on slower devices\" +\r\n            \"The function of comparing states and sending data is difficult to understand for an unprepared person. \",\r\n        technologies: \"TypeScript React Redux styled-components react-spring thunk\",\r\n        color: '#EAE8DE',\r\n        refToProject: 'https://illiagorbatov.github.io/ToDoList/',\r\n        refToGit: 'https://github.com/illiaGorbatov/ToDoList',\r\n        video: todoList\r\n    },\r\n    {\r\n        projectName: \"The Portfolio\",\r\n        projectDescription: \"The project that characterizes me\",\r\n        detailedDescription: \"In my opinion, Three.js is a technology that greatly improves perceptions and user experience. \" +\r\n            \"At least After I got acquainted with this library, I had no doubts about it. \" +\r\n            \"Even if you don't have expensive and beautiful 3d models, you can surprise users with your creativity.\",\r\n        pros: \"Main advantage of this project is animated canvas in the background that keeps track\" +\r\n            \" of what you are watching and changes accordingly to it.\",\r\n        cons: \"Possible performance degradation on devices with weak 3d accelerator\",\r\n        technologies: \"TypeScript React Redux styled-components react-spring Three.js\",\r\n        color: \"#ff0000\",\r\n        refToProject: 'https://illiagorbatov.github.io/Portfolio-with-three/',\r\n        refToGit: 'https://github.com/illiaGorbatov/Portfolio-with-three',\r\n        video: video\r\n    }];\r\n\r\nexport const aboutMe = [\r\n    \"I'm a simple guy who likes to create unusual things.\",\r\n    \"New experiences and challenges are my current objectives.\",\r\n    \"No matter the circumstances, I get my way.\"\r\n];\r\n\r\nexport const contacts = [\r\n    {header: 'Linked', href: ''},\r\n    {header: 'GitHub', href: 'https://github.com/illiaGorbatov'},\r\n    {header: 'vk', href: 'https://vk.com/mur0mec'},\r\n    {header: 'telegram', href: 'https://vk.com/mur0mec'},\r\n]","import React, {useLayoutEffect, useRef} from 'react';\r\nimport * as THREE from 'three';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {animated, SpringValue, useSpring} from 'react-spring/three';\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\nimport {projectsInfo} from \"../../../../textAndPrijectsInfo/TextContent\";\r\n\r\ntype PropsType = {\r\n    scale: SpringValue<number[]>,\r\n    intensity: SpringValue<number>,\r\n    distance: SpringValue<number>,\r\n    scrollsCount: number\r\n}\r\n\r\nconst Sun: React.FC<PropsType> = ({scale, distance, intensity, scrollsCount}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {color} = useSpring({\r\n        color: scrollsCount === 0 ? \"#ff0000\" : projectsInfo[scrollsCount-1].color\r\n    })\r\n\r\n    const sunRef = useRef<THREE.Mesh>(new THREE.Mesh());\r\n\r\n    useLayoutEffect(() => {\r\n        setTimeout(() => dispatch(actions.setSun(sunRef.current)), 80)\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <animated.mesh ref={sunRef} scale={scale as unknown as Vector3Type}>\r\n                <sphereBufferGeometry attach=\"geometry\" args={[5, 10, 10]}/>\r\n                <animated.meshBasicMaterial attach=\"material\" color={color}/>\r\n            </animated.mesh>\r\n            <animated.pointLight color={color} intensity={intensity} distance={distance} decay={0.5}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.memo(Sun)","import React, {useEffect} from 'react';\r\nimport Pyramid from \"./Pyramid\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport Background from \"./Background\";\r\nimport AnimatedCubes from \"./AnimatedCubes\";\r\nimport {animated, useSpring} from 'react-spring/three';\r\nimport {\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_MAIN_PAGE,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_MAIN_PAGE,\r\n    Vector3Type\r\n} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport Crystal from \"../../Explosion/Crystal\";\r\nimport Sun from \"../Lights/Sun\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\n\r\nconst AstralPlaneContainer: React.FC = () => {\r\n\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n    const scrollsCount = useSelector((state: AppStateType) => state.interface.scrollsCount, shallowEqual);\r\n    const geometriesTransition = useSelector((state: AppStateType) => state.interface.geometriesTransition, shallowEqual);\r\n    const isInterfaceAvailable = useSelector((state: AppStateType) => state.interface.isInterfaceAvailable, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //group rotation\r\n    const [{position, rotation}, setSpring] = useSpring(() => ({\r\n        position: [0, 0, -310],\r\n        rotation: [0, 0, 0],\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (geometriesTransition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION && isInterfaceAvailable) {\r\n            setSpring({\r\n                position: [30, 0, -310]\r\n            }).then(() => setSpring(() => {\r\n                return {\r\n                    to: async next => {\r\n                        await next({\r\n                            rotation: [0, 2 * Math.PI, 0],\r\n                            config: {\r\n                                duration: 20000\r\n                            }\r\n                        })\r\n                        await next({rotation: [0, 0, 0], immediate: true})\r\n                    },\r\n                    loop: true\r\n                }\r\n            }))\r\n        }\r\n        if (geometriesTransition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION) {\r\n            setSpring({\r\n                cancel: true,\r\n                loop: false\r\n            }).then(() => setSpring({\r\n                position: [0, 0, -310],\r\n                rotation: [0, 0, 0],\r\n                config: {\r\n                    mass: 1,\r\n                    tension: 170,\r\n                    friction: 30,\r\n                    clamp: true,\r\n                    duration: undefined\r\n                }\r\n            }))\r\n        }\r\n    }, [isInterfaceAvailable, geometriesTransition, setSpring]);\r\n\r\n    //elements orchestra\r\n    const [{progress, scale, color, intensity, distance, pyramidPosition}, setAnimation] = useSpring(() => ({\r\n        progress: 0,\r\n        scale: [0.1, 0.1, 0.1],\r\n        color: '#000B11',\r\n        intensity: 1,\r\n        pyramidPosition: [0, 200, 0],\r\n        distance: 500\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setAnimation({distance: project === null ? 500 : 300})\r\n    }, [project, setAnimation])\r\n\r\n    useEffect(() => {\r\n        if (geometriesTransition === null) {\r\n            setAnimation({\r\n                to: async next => {\r\n                    await next({\r\n                        progress: 0.035,\r\n                        delay: 1200,\r\n                        config: {tension: 200, friction: 20}\r\n                    });\r\n                    await next({\r\n                        progress: 0,\r\n                        config: {tension: 200, friction: 25}\r\n                    });\r\n                    await next({\r\n                        progress: 0.03,\r\n                        config: {tension: 200, friction: 20}\r\n                    });\r\n                    await next({\r\n                        progress: 0,\r\n                        config: {tension: 200, friction: 40}\r\n                    });\r\n                },\r\n                loop: true\r\n            })\r\n        }\r\n        if (geometriesTransition === GEOMETRIES_TRANSITION_TO_MAIN_PAGE) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation({\r\n                progress: 0,\r\n                scale: [0.1, 0.1, 0.1],\r\n                config: (prop) => prop === 'progress' ?\r\n                    {tension: 150, friction: 40} : {mass: 1, tension: 200, friction: 30, clamp: true},\r\n                delay: (prop) => prop === 'progress' ? 300 : 0,\r\n            })).then(() => setAnimation({\r\n                to: async next => {\r\n                    await next({\r\n                        progress: 0.035,\r\n                        delay: 1200,\r\n                        config: {tension: 200, friction: 20}\r\n                    });\r\n                    await next({\r\n                        progress: 0,\r\n                        config: {tension: 200, friction: 25}\r\n                    });\r\n                    await next({\r\n                        progress: 0.03,\r\n                        config: {tension: 200, friction: 20}\r\n                    });\r\n                    await next({\r\n                        progress: 0,\r\n                        config: {tension: 200, friction: 40}\r\n                    });\r\n                },\r\n                loop: true\r\n            }))\r\n        }\r\n        if (geometriesTransition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION ||\r\n            geometriesTransition === GEOMETRIES_TRANSITION_FROM_MAIN_PAGE) {\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setAnimation(i => ({\r\n                progress: 0\r\n            }))).then(() => setAnimation({\r\n                progress: 2,\r\n                pyramidPosition: [0, 200, 0],\r\n                intensity: 1,\r\n                distance: 500,\r\n                scale: [15, 15, 15],\r\n                config: (prop) => prop === 'progress' ?\r\n                    {tension: 150, friction: 40} : {mass: 100, tension: 400, friction: 400, clamp: true},\r\n                delay: (prop) => prop === 'scale' ? 300 : 0,\r\n                onRest: () => dispatch(actions.setMainPageState(false))\r\n            }))\r\n        }\r\n        if (geometriesTransition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION) {\r\n            setAnimation({\r\n                scale: [0.1, 0.1, 0.1],\r\n                progress: 0,\r\n                distance: 200,\r\n                pyramidPosition: [0, 70, 0],\r\n                intensity: 0.05,\r\n                config: (prop) => prop === 'progress' ?\r\n                    {tension: 150, friction: 40} : {mass: 1, tension: 200, friction: 30, clamp: true},\r\n                delay: (prop) => prop === 'scale' ? 1000 : 1200\r\n            }).then(() => setAnimation({\r\n                to: async next => {\r\n                    await next({\r\n                        scale: [2, 2, 2],\r\n                        progress: 0.5,\r\n                        intensity: 2,\r\n                        distance: 500,\r\n                        config: {tension: 280, friction: 60, clamp: true}\r\n                    })\r\n                    await next({\r\n                        scale: [0.1, 0.1, 0.1],\r\n                        progress: 0,\r\n                        intensity: 0.05,\r\n                        distance: 200,\r\n                        config: {tension: 280, friction: 100, clamp: true}\r\n                    })\r\n                },\r\n                loop: true\r\n            }))\r\n        }\r\n    }, [setAnimation, dispatch, geometriesTransition]);\r\n\r\n    return (\r\n        <animated.group position={position as unknown as Vector3Type} rotation={rotation as unknown as Vector3Type}>\r\n            <AnimatedCubes/>\r\n            <Background color={color}/>\r\n            <Pyramid pyramidPosition={pyramidPosition}/>\r\n            <Crystal progress={progress}/>\r\n            <Sun scale={scale} intensity={intensity} distance={distance} scrollsCount={scrollsCount}/>\r\n        </animated.group>\r\n    )\r\n}\r\n\r\nexport default React.memo(AstralPlaneContainer)","import React from \"react\";\r\n\r\n\r\nconst VideoPlaneLight: React.FC = () => {\r\n\r\n    return (\r\n        <rectAreaLight args={[0xffffff, 1, 14, 7]} rotation={[0, Math.PI, 0]} />\r\n    )\r\n}\r\n\r\nexport default React.memo(VideoPlaneLight)","import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {animated, useSpring} from \"react-spring/three\";\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport VideoPlaneLight from \"./VideoPlaneLight\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\n\r\nconst VideoPanel: React.FC = () => {\r\n\r\n    const videos = useSelector((state: AppStateType) => state.interface.videos, isEqual);\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n    const videoPlayerState = useSelector((state: AppStateType) => state.interface.videoPlayerState, shallowEqual);\r\n\r\n    const ref = useRef<THREE.Group>(new THREE.Group());\r\n\r\n    const [projectMemo, setProjectMemo] = useState<number>(0);\r\n\r\n    const videoMaterial = useMemo(() => {\r\n        const texture = new THREE.VideoTexture(videos.find(item => item.projectIndex === projectMemo)!.video);\r\n        texture.minFilter = THREE.LinearFilter;\r\n        texture.magFilter = THREE.LinearFilter;\r\n        texture.format = THREE.RGBFormat;\r\n        texture.encoding = THREE.sRGBEncoding;\r\n        texture.anisotropy = 16;\r\n        return new THREE.MeshBasicMaterial({map: texture, transparent: false})\r\n    }, [videos, projectMemo]);\r\n\r\n    const [{position, lookAtPosition, scale}, setAnimation] = useSpring(() => ({\r\n        position: [20, 2.5, 60],\r\n        lookAtPosition: [-10, 7, 65],\r\n        scale: [1, 1, 1]\r\n    }));\r\n\r\n    const mouseMoveHandler = useCallback((e: MouseEvent) => {\r\n        const mouseXPercentage = e.clientX / window.innerWidth;\r\n        const mouseYPercentage = e.clientY / window.innerHeight;\r\n        const x = THREE.MathUtils.lerp(-10, 3, mouseXPercentage);\r\n        const y = THREE.MathUtils.lerp(7, -3, mouseYPercentage);\r\n        setAnimation({lookAtPosition: [x, y, 65]})\r\n    }, [setAnimation]);\r\n\r\n    const memoizedDeltaY = useRef<number>(0);\r\n    const wheelHandler = useCallback((e: WheelEvent) => {\r\n        if (e.deltaY > 0 && memoizedDeltaY.current < 500) {\r\n            memoizedDeltaY.current = memoizedDeltaY.current + e.deltaY;\r\n            setAnimation({scale: new Array(3).fill(memoizedDeltaY.current/1000 + 1)})\r\n        }\r\n        if (e.deltaY < 0 && memoizedDeltaY.current > 0) {\r\n            memoizedDeltaY.current = memoizedDeltaY.current + e.deltaY;\r\n            setAnimation({scale: new Array(3).fill(memoizedDeltaY.current/1000 + 1)})\r\n        }\r\n    }, [setAnimation])\r\n\r\n    useEffect(() => {\r\n        if (project !== null) {\r\n            setProjectMemo(project);\r\n            window.addEventListener('mousemove', mouseMoveHandler);\r\n            window.addEventListener('wheel', wheelHandler);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('mousemove', mouseMoveHandler)\r\n            window.removeEventListener('wheel', wheelHandler)\r\n        }\r\n    }, [project, mouseMoveHandler, wheelHandler]);\r\n\r\n    useEffect(() => {\r\n        if (videoPlayerState) {\r\n            setAnimation({position: [3, 2.5, 45]}).then(() => {\r\n                videos[projectMemo!].video.play();\r\n            })\r\n        }\r\n        if (!videoPlayerState && projectMemo !== null) {\r\n            setAnimation({position: [20, 2.5, 60], scale: [1, 1, 1]})\r\n            videos[projectMemo!].video.pause()\r\n        }\r\n    }, [videoPlayerState, setAnimation, videos, projectMemo]);\r\n\r\n    useFrame(() => {\r\n        if (project !== null) {\r\n            ref.current.lookAt(...lookAtPosition.get() as unknown as Vector3Type);\r\n        }\r\n\r\n    })\r\n\r\n    return (\r\n        <animated.group position={position as unknown as Vector3Type} ref={ref}\r\n                        scale={scale as unknown as Vector3Type}>\r\n            {videoPlayerState && <VideoPlaneLight/>}\r\n            <mesh material={videoMaterial} scale={[1.2, 1.2, 1.2]}>\r\n                <planeBufferGeometry attach=\"geometry\" args={[12.2, 7.40]}/>\r\n            </mesh>\r\n        </animated.group>\r\n    )\r\n}\r\n\r\nexport default React.memo(VideoPanel)","import React from \"react\";\r\n\r\nconst AnimatedLight = () => {\r\n\r\n    return(\r\n        <pointLight position={[0, 1, 50]} intensity={1} distance={150} color=\"#90E0EF\"/>\r\n    )\r\n}\r\n\r\nexport default React.memo(AnimatedLight)","import React, {useEffect, useMemo} from 'react';\r\nimport * as THREE from 'three';\r\nimport {animated, useSprings} from 'react-spring/three';\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\n\r\nconst Room: React.FC = () => {\r\n\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n    const {extrudeShape, extrudeSettings} = useMemo(() => {\r\n\r\n        const extrudeShape = new THREE.Shape();\r\n        extrudeShape.moveTo(-51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, 19.2);\r\n        extrudeShape.lineTo(-51.2, 19.2);\r\n\r\n        const hole = new THREE.Path();\r\n        hole.moveTo(-32, -12.8);\r\n        hole.lineTo(32, -12.8);\r\n        hole.lineTo(32, 12.8);\r\n        hole.lineTo(-32, 12.8);\r\n        extrudeShape.holes.push(hole);\r\n        //width: 64, height: 25,6\r\n        //19.2 12.8\r\n        const extrudeSettings = {\r\n            steps: 1,\r\n            depth: 16,\r\n            bevelEnabled: false,\r\n        }\r\n\r\n        return {extrudeShape, extrudeSettings};\r\n    }, []);\r\n\r\n    const [springs, setSprings] = useSprings(2,i => ({\r\n        scale: i === 0 ? [0.6, 1, 1] : [0.6, 1, 2],\r\n        config: {duration: 700}\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (project !== null) setSprings(i => {\r\n            if (i === 0) return {\r\n                to: async (next) => {\r\n                    await next({\r\n                        scale: [0.6, 0.5, 1],\r\n                        delay: 3000\r\n                    });\r\n                    await next({\r\n                        scale: [0.3, 0.5, 1],\r\n                    })\r\n                }\r\n            }\r\n            return {\r\n                to: async (next) => {\r\n                    await next({\r\n                        scale: [0.6, 0.7, 2],\r\n                        delay: 1000\r\n                    });\r\n                    await next({\r\n                        scale: [0.4, 0.7, 2],\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        if (project === null) setSprings(i => {\r\n            if (i === 0) return {\r\n            to: async (next) => {\r\n                await next({\r\n                    scale: [0.3, 1, 1],\r\n                });\r\n                await next({\r\n                    scale: [0.6, 1, 1],\r\n                })\r\n            }\r\n        }\r\n        return {\r\n            to: async (next) => {\r\n                await next({\r\n                    scale: [0.4, 1, 2],\r\n                    delay: 1500\r\n                });\r\n                await next({\r\n                    scale: [0.6, 1, 2],\r\n                })\r\n            }\r\n        }\r\n        })\r\n    }, [project, setSprings])\r\n\r\n    return (\r\n        <>\r\n        {springs.map(({scale}, i) =>\r\n                <animated.mesh scale={scale as unknown as Vector3Type} key={i}\r\n                               position={i === 0 ? [0, 0, 23] : [0, 0, 39]} castShadow receiveShadow>\r\n                    <extrudeBufferGeometry attach=\"geometry\" args={[extrudeShape, extrudeSettings]}/>\r\n                    <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7} shadowSide={THREE.FrontSide}/>\r\n                </animated.mesh>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Room)","import React from \"react\";\r\nimport {EffectComposer, GodRays, HueSaturation, Vignette} from \"react-postprocessing\";\r\n/*@ts-ignore*/\r\nimport {KernelSize} from 'postprocessing';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst Postprocessing: React.FC = () => {\r\n\r\n    const sun = useSelector((state: AppStateType) => state.interface.sun, isEqual);\r\n\r\n    return (\r\n        <>\r\n            {sun &&\r\n            <EffectComposer multisampling={8}>\r\n                <GodRays sun={sun} height={300} width={300} kernelSize={KernelSize.SMALL}\r\n                         density={0.96} decay={0.92} weight={0.3} exposure={0.34} samples={50} clampMax={1}/>\r\n                <HueSaturation hue={3.11} saturation={2.05}/>\r\n                <Vignette/>\r\n            </EffectComposer>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Postprocessing)","import React, {Suspense} from 'react';\r\nimport BordersArray from \"./Control/Borders/BordersArray\";\r\nimport ControlCamera from \"./Camera\";\r\nimport AstralPlaneContainer from \"./Control/AstralPlane/AstralPlaneContainer\";\r\nimport VideoPanel from \"./Control/Videopanel/Videopanel\";\r\nimport AnimatedLight from \"./Control/Lights/AnimatedLight\";\r\nimport Room from \"./Control/Room/Room\";\r\nimport Postprocessing from \"./posteffects/Postprocessing\";\r\n\r\n//colors\r\n\r\nconst MainScene: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={null}>\r\n                <BordersArray/>\r\n                <AstralPlaneContainer/>\r\n                <VideoPanel/>\r\n                <Postprocessing/>\r\n                <AnimatedLight/>\r\n                <Room/>\r\n            </Suspense>\r\n            <ControlCamera/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MainScene)","import React from 'react';\r\nimport {Canvas} from \"react-three-fiber\";\r\nimport store from \"../../store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport MainScene from \"./MainScene\";\r\nimport {RectAreaLightUniformsLib} from \"three/examples/jsm/lights/RectAreaLightUniformsLib\";\r\n\r\nconst InitialCanvas = () => {\r\n\r\n    return (\r\n        <Canvas\r\n            style={{background: '#EAE6E5'}}\r\n            shadowMap\r\n            colorManagement\r\n            onCreated={RectAreaLightUniformsLib.init}\r\n            gl={{\r\n                alpha: false,\r\n                antialias: false,\r\n                stencil: false,\r\n                depth: false,\r\n            }}\r\n            concurrent={true}>\r\n            <Provider store={store}>\r\n                {/*<fog attach=\"fog\" args={[0x333333, 10, 400]}/>*/}\r\n                <MainScene/>\r\n            </Provider>\r\n        </Canvas>\r\n    );\r\n};\r\n\r\nexport default InitialCanvas;","import React, {useEffect, useState} from 'react';\r\nimport styled, {css, keyframes} from 'styled-components/macro';\r\nimport {animatedSkillsStack} from \"../../../textAndPrijectsInfo/TextContent\";\r\n\r\nconst blink = keyframes`\r\n  0% {\r\n    opacity:1;\r\n  }\r\n  49% {\r\n    opacity:1;\r\n  }\r\n  50% {\r\n    opacity:0;\r\n  }\r\n  100% {\r\n    opacity:0;\r\n  }\r\n`;\r\n\r\nconst complexMixin = css`&::after {\r\n      content: '';\r\n      display: inline-block;\r\n      margin-left: 3px;\r\n      background-color: black;\r\n      animation-name: ${blink};\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: infinite;\r\n      height: 24px;\r\n      width: 8px;\r\n  }`;\r\n\r\nconst Wrapper = styled.div<{$visible: boolean}>`\r\n  text-align:center;\r\n  font-family: 'Relative-Book';\r\n  font-weight: bold;\r\n  color: black;\r\n  letter-spacing: 2px;\r\n  font-size: 25px;\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n}\r\n\r\nconst TextTypingElement: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const textArray = animatedSkillsStack;\r\n\r\n    const [text, setText] = useState<string>('');\r\n    const [isDeleting, setDeleting] = useState<boolean>(false);\r\n    const [loopNumber, setLoopNumber] = useState<number>(0);\r\n    const [typingSpeed, setTypingSpeed] = useState<number>(150);\r\n\r\n    const handleType = () => {\r\n        const i = loopNumber % textArray.length;\r\n        const fullText = textArray[i];\r\n\r\n        if (visible) {\r\n            if (isDeleting) {\r\n                setText(fullText.substring(0, text.length - 1));\r\n                setTypingSpeed(30)\r\n            } else {\r\n                setText(fullText.substring(0, text.length + 1));\r\n                setTypingSpeed(150)\r\n            }\r\n\r\n            if (!isDeleting && text === fullText) {\r\n                setTimeout(() => setDeleting(true), 500);\r\n            } else if (isDeleting && text === '') {\r\n                setDeleting(false)\r\n                setLoopNumber(loopNumber + 1)\r\n            }\r\n        } else {\r\n            setText(fullText.substring(0, text.length - 1));\r\n            setTypingSpeed(30)\r\n            if (text === '') return\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        timer = window.setTimeout(() => handleType(), typingSpeed)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n\r\n    return (\r\n        <Wrapper $visible={visible}>\r\n            {text}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(TextTypingElement)","import React from 'react';\r\nimport styled, {css, keyframes} from 'styled-components/macro';\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {top: 0}\r\n  50% {top: 100%}\r\n  51% {top: -100%}\r\n  100% {top: 0}\r\n`;\r\n\r\nconst ArrowCenter = styled.div`\r\n  position: absolute;\r\n  height: 80px;\r\n  width: 1px;\r\n  left: 50%;\r\n  bottom: 0;\r\n  transform: translateX(-50%);\r\n  background-color: white;\r\n`;\r\n\r\nconst ArrowLeft = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0;\r\n  width: 1px;\r\n  height: 16px;\r\n  transform-origin: 50% 100%;\r\n  background-color: white;\r\n  transform: rotate(45deg) translateX(-50%);\r\n`;\r\n\r\nconst ArrowRight = styled(ArrowLeft)`\r\n  transform: rotate(-45deg);\r\n`;\r\n\r\nconst AnimatedWrapper = styled.div<{ $visible: boolean}>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: top 0.3s ease-in-out;\r\n  top: ${props => !props.$visible ? '100%' : 0}\r\n`;\r\n\r\nconst complexMixin = css`&:hover ${AnimatedWrapper} {animation: .5s ${hoverAnimation} ease-in-out}`;\r\n\r\nconst ArrowWrapper = styled.div<{ $visible: boolean}>`\r\n  position: absolute;\r\n  left: 50%;\r\n  width: 20px;\r\n  height: 80px;\r\n  bottom: 10px;\r\n  overflow: hidden;\r\n  transform: translateX(-50%);\r\n  cursor: ${props => props.$visible ? 'pointer' : 'inherit'};\r\n  &:hover ${ArrowCenter}, &:hover ${ArrowLeft} {\r\n    width: 2px\r\n  }\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n    onArrowClickHandler: () => void,\r\n}\r\n\r\nconst Arrow: React.FC<PropsType> = ({visible, onArrowClickHandler}) => {\r\n\r\n    return (\r\n        <ArrowWrapper onClick={visible ? onArrowClickHandler : undefined} $visible={visible}>\r\n            <AnimatedWrapper $visible={visible}>\r\n                <ArrowLeft/>\r\n                <ArrowCenter/>\r\n                <ArrowRight/>\r\n            </AnimatedWrapper>\r\n        </ArrowWrapper>\r\n    )\r\n}\r\n\r\nexport default Arrow","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\nconst MyName = styled.div<{ $visible: boolean }>`\r\n  font-size: 50px;\r\n  font-family: \"Anders\";\r\n  color: white;\r\n  transform: translateY(${props => props.$visible ? '0%' : '-100%'});\r\n  transition: transform .4s cubic-bezier(.19,.78,.4,.84);\r\n`;\r\n\r\nconst WrapperForAppearing = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean\r\n}\r\n\r\nconst BigLogo: React.FC<PropsType> = ({visible}) => {\r\n    return(\r\n        <WrapperForAppearing>\r\n            <MyName $visible={visible}>\r\n                Gorbatov Illia\r\n            </MyName>\r\n        </WrapperForAppearing>\r\n    )\r\n}\r\n\r\nexport default React.memo(BigLogo)","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport TextTypingElement from \"./TextTypingElement\";\r\nimport Arrow from \"./Arrow\";\r\nimport BigLogo from './BigLogo';\r\n\r\nconst MainPageWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst MyInfoWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\ntype PropsType = {\r\n    loadedState: boolean,\r\n    isMainPageFocused: boolean,\r\n    onArrowClickHandler: () => void\r\n}\r\n\r\nconst MainPageContainer: React.FC<PropsType> = ({loadedState, isMainPageFocused, onArrowClickHandler}) => {\r\n\r\n    return (\r\n        <MainPageWrapper>\r\n            <MyInfoWrapper>\r\n                <BigLogo visible={isMainPageFocused && loadedState}/>\r\n                <TextTypingElement visible={isMainPageFocused && loadedState}/>\r\n            </MyInfoWrapper>\r\n            <Arrow visible={isMainPageFocused && loadedState} onArrowClickHandler={onArrowClickHandler}/>\r\n        </MainPageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(MainPageContainer)","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {projectsInfo} from \"../../../../textAndPrijectsInfo/TextContent\";\r\n\r\nconst AnnotationWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: -10%;\r\n  transform: translateY(-50%);\r\n  text-align: left;\r\n  color: white;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ProjectNameWrapper = styled.div`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 70px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AnimatedProjectName = styled.div<{$isScrolling: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$isScrolling ? '-100' : '0'}%);\r\n  transition: transform ${props => props.$isScrolling ? '.2s' : '.4s'}\r\n`;\r\n\r\nconst ProjectLittleDescription = styled.div`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AnimatedDescription = styled.div<{$invisible: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$invisible ? '-100' : '0'}%);\r\n  transition: transform ${props => props.$invisible ? '.2s' : '.4s .3s'}\r\n`;\r\n\r\ntype PropsType = {\r\n    isScrolling: boolean,\r\n    isDrugging: boolean,\r\n    projectIndex: number\r\n}\r\n\r\nconst ProjectAnnotation: React.FC<PropsType> = ({isScrolling, isDrugging, projectIndex}) => {\r\n\r\n    return (\r\n        <AnnotationWrapper>\r\n            <ProjectNameWrapper>\r\n                <AnimatedProjectName $isScrolling={isScrolling}>\r\n                    {projectsInfo[projectIndex].projectName}\r\n                </AnimatedProjectName>\r\n            </ProjectNameWrapper>\r\n            <ProjectLittleDescription>\r\n                <AnimatedDescription $invisible={isScrolling || isDrugging}>\r\n                    {projectsInfo[projectIndex].projectDescription}\r\n                </AnimatedDescription>\r\n            </ProjectLittleDescription>\r\n        </AnnotationWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectAnnotation)","import React from 'react';\r\nimport styled, {css, keyframes} from 'styled-components/macro';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {right: 0}\r\n  50% {right: 100%}\r\n  51% {right: -100%}\r\n  100% {right: 0}\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translateY(160%);\r\n  right: 20%;\r\n  text-align: left;\r\n  color: white;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Line = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 1px;\r\n  height: ${props => props.$visible ? 200 : 0}%;\r\n  transition: height ${props => props.$visible ? '.3s' : '.2s'};\r\n  background-color: white;\r\n  left: 30%;\r\n  transform: translateY(-120%);\r\n`;\r\n\r\nconst AnimatedText = styled.div<{$visible: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$visible ? 0 : -100}%);\r\n  transition: transform ${props => props.$visible ? '.4s .3s' : '.2s'};\r\n`;\r\n\r\nconst complexMixin = css`&:hover ${AnimatedText}{animation: .4s ${hoverAnimation} ease-in-out}`;\r\n\r\nconst Button = styled.div<{$visible: boolean}>`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 17px;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    projectIndex: number,\r\n    visible: boolean\r\n}\r\n\r\nconst CloseLookButton: React.FC<PropsType> = ({projectIndex, visible}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const lookAtProject = () => {\r\n        dispatch(actions.openProject(projectIndex));\r\n    };\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Line $visible={visible}/>\r\n            <Button onClick={lookAtProject} $visible={visible}>\r\n                <AnimatedText $visible={visible}>\r\n                    About project\r\n                </AnimatedText>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseLookButton)","import React, {useEffect, useRef} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport ProjectAnnotation from \"./ProjectAnnotation\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\nimport CloseLookButton from \"./CloseLookButton\";\r\nimport {projectsInfo} from \"../../../../textAndPrijectsInfo/TextContent\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n`\r\n\r\nconst VideoWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  width: 60%;\r\n  max-width: 1000px;\r\n  height: auto;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\ntype PropsType = {\r\n    projectIndex: number,\r\n    isDrugging: boolean,\r\n    isScrolling: boolean,\r\n    scrollsCount: number,\r\n    currentlyLookedProject: number | null\r\n}\r\n\r\nconst ProjectPresentation: React.FC<PropsType> = ({projectIndex, isDrugging, isScrolling,\r\n                                                      scrollsCount, currentlyLookedProject}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.setVideo(videoRef.current!, projectIndex))\r\n    }, [dispatch, projectIndex]);\r\n\r\n    useEffect(() => {\r\n        if (scrollsCount-1 === projectIndex && (isScrolling || isDrugging) && currentlyLookedProject === null) {\r\n            videoRef.current!.currentTime = 0;\r\n        }\r\n        if (scrollsCount-1 === projectIndex && !isScrolling && !isDrugging && currentlyLookedProject === null){\r\n            videoRef.current!.play()\r\n        }\r\n        if (scrollsCount-1 !== projectIndex || (isScrolling || isDrugging) || currentlyLookedProject !== null){\r\n            videoRef.current!.pause()\r\n        }\r\n    }, [scrollsCount, isDrugging, isScrolling, projectIndex, currentlyLookedProject]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VideoWrapper>\r\n                <Video muted loop ref={videoRef}>\r\n                    <source src={projectsInfo[projectIndex].video} type=\"video/mp4\"/>\r\n                </Video>\r\n                <ProjectAnnotation isDrugging={isDrugging} isScrolling={isScrolling} projectIndex={projectIndex}/>\r\n                <CloseLookButton projectIndex={projectIndex} visible={!isScrolling && !isDrugging}/>\r\n            </VideoWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectPresentation)","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport ProjectPresentation from \"./SingleProject/ProjectPresentation\";\r\nimport {projectsInfo} from \"../../../textAndPrijectsInfo/TextContent\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\n\r\nconst AllProjectsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProjectsContainer: React.FC = () => {\r\n\r\n    const druggingState = useSelector((state: AppStateType) => state.interface.druggingState, shallowEqual);\r\n    const scrollingState = useSelector((state: AppStateType) => state.interface.scrollingState, shallowEqual);\r\n    const scrollsCount = useSelector((state: AppStateType) => state.interface.scrollsCount, shallowEqual);\r\n    const currentlyLookedProject = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n\r\n    return (\r\n        <AllProjectsWrapper>\r\n            {projectsInfo.map((project, index) =>\r\n                <ProjectPresentation key={index} projectIndex={index} scrollsCount={scrollsCount} currentlyLookedProject={currentlyLookedProject}\r\n                                     isDrugging={druggingState} isScrolling={scrollingState}/>)}\r\n        </AllProjectsWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectsContainer)","import React, {useEffect, useState} from 'react';\r\nimport styled, {css, keyframes} from 'styled-components/macro';\r\n\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {left: 0}\r\n  50% {left: -100%}\r\n  51% {left: 100%}\r\n  100% {left: 0}\r\n`;\r\n\r\nconst MenuButton = styled.div<{$visible: boolean}>`\r\n  position: relative;\r\n  transform-origin: 0 50%;\r\n  color: white;\r\n  font-size: 20px;\r\n  left: ${props => props.$visible ? '0' : '100%'};\r\n  transition: left .4s;\r\n  font-family: 'Relative-Book';\r\n`;\r\n\r\nconst complexMixin = css`&:hover ${MenuButton}{animation: .4s ${hoverAnimation} ease-in-out }`\r\n\r\nconst MenuButtonWrapper = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  z-index: 999;\r\n  top: 50%;\r\n  cursor: ${props => props.$visible ? 'pointer' : 'inherit'};\r\n  overflow: hidden;\r\n  transform: rotateZ(-90deg);\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\ntype PropsType = {\r\n    isAboutBlockOpened: boolean,\r\n    openInformation: () => void,\r\n    closeInformation: () => void,\r\n    currentProject: null | number,\r\n    closeProject: () => void,\r\n    visible: boolean\r\n}\r\n\r\nconst LeftContextButton: React.FC<PropsType> = ({\r\n                                                    isAboutBlockOpened, openInformation, closeInformation,\r\n                                                    closeProject, currentProject, visible\r\n                                                }) => {\r\n\r\n    const [memoizedText, setText] = useState<string>('About Me');\r\n\r\n    useEffect(() => {\r\n        if (isAboutBlockOpened && visible) setText('Close');\r\n        if (currentProject !== null && visible) setText('Back');\r\n        if (!isAboutBlockOpened && visible && currentProject === null) setText('About Me');\r\n    }, [visible, isAboutBlockOpened, currentProject]);\r\n\r\n    return (\r\n        <MenuButtonWrapper $visible={visible}\r\n            onClick={!visible ? undefined : currentProject !== null ? closeProject : !isAboutBlockOpened ? openInformation : closeInformation}>\r\n            <MenuButton $visible={visible}>\r\n                {memoizedText}\r\n            </MenuButton>\r\n        </MenuButtonWrapper>\r\n    )\r\n};\r\n\r\nexport default React.memo(LeftContextButton)","import React from 'react';\r\nimport styled, {css, keyframes} from \"styled-components/macro\";\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {right: 0}\r\n  50% {right: 100%}\r\n  51% {right: -100%}\r\n  100% {right: 0}\r\n`;\r\n\r\nconst AnimatedLogo = styled.div<{ $visible: boolean }>`\r\n   position: relative;\r\n   right: ${props => props.$visible ? '0' : '-100%'};\r\n   transition: right .4s;\r\n`;\r\n\r\nconst complexMixin = css`&:hover ${AnimatedLogo}{animation: .4s ${hoverAnimation} ease-in-out}`;\r\n\r\nconst LogoWrapper = styled.div<{ $visible: boolean }>`\r\n  position: absolute;\r\n  z-index: 999;\r\n  color: white;\r\n  left: 50%;\r\n  top: 10px;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  overflow: hidden;\r\n  font-family: \"Anders\";\r\n  cursor: ${props => props.$visible ? 'pointer' : 'inherit'};\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n    returnOnMainPage: () => void\r\n}\r\n\r\nconst Logo: React.FC<PropsType> = ({visible, returnOnMainPage}) => {\r\n\r\n    return (\r\n        <LogoWrapper $visible={visible} onClick={visible ? returnOnMainPage : undefined}>\r\n            <AnimatedLogo $visible={visible}>\r\n                Gorbatov Illia\r\n            </AnimatedLogo>\r\n        </LogoWrapper>\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {useCallback} from 'react';\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport LeftContextButton from './LeftContextButton';\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\nimport Logo from './Logo';\r\n\r\n\r\nconst InterfaceContainer: React.FC = () => {\r\n\r\n    const isInterfaceAvailable = useSelector((state: AppStateType) => state.interface.isInterfaceAvailable, shallowEqual);\r\n    const isAboutBlockOpened = useSelector((state: AppStateType) => state.interface.isAboutMenuOpened, shallowEqual);\r\n    const currentProject = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openInformation = useCallback(() => {\r\n        dispatch(actions.openAboutMeSection());\r\n    }, [dispatch]);\r\n\r\n    const closeInformation = useCallback(() => {\r\n        dispatch(actions.closeAboutMeSection());\r\n    }, [dispatch]);\r\n\r\n    const closeProject = useCallback(() => {\r\n        dispatch(actions.closeProject())\r\n    }, [dispatch]);\r\n\r\n    const returnOnMainPage = useCallback(() => {\r\n        dispatch(actions.transitionToMainPaige())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Logo visible={isInterfaceAvailable && !isAboutBlockOpened} returnOnMainPage={returnOnMainPage}/>\r\n            <LeftContextButton closeInformation={closeInformation} openInformation={openInformation}\r\n                               visible={isInterfaceAvailable}\r\n                               isAboutBlockOpened={isAboutBlockOpened} closeProject={closeProject}\r\n                               currentProject={currentProject}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(InterfaceContainer)","import React, {useEffect, useRef} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated, SpringStartFn, useSpring} from 'react-spring';\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {projectsInfo} from \"../../../textAndPrijectsInfo/TextContent\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  top: 10%;\r\n  right: 6%;\r\n  height: 80%;\r\n`;\r\n\r\nconst ProgressLine = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 1px;\r\n  line-height: 1px;\r\n  height: ${props => props.$visible ? '100%' : '0%'};\r\n  background-color: white;\r\n  transition: ${props => props.$visible ? 'height .3s .3s' : 'height .3s'};\r\n`;\r\n\r\nconst CurrentProject = styled.div`\r\n  position: absolute;\r\n  font-size: 17px;\r\n  font-family: 'Relative-Book';\r\n  left: 25%;\r\n  top: 50%;\r\n  transform: translateY(-100%);\r\n  transition: left .3s, transform .3s;\r\n`;\r\n\r\nconst AllProjects = styled(CurrentProject)`\r\n  left: 75%;\r\n  transform: translateX(-100%);\r\n`;\r\n\r\nconst Border = styled.div`\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 1px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%) rotate(-45deg);\r\n  background-color: white;\r\n  transition: transform .3s;\r\n`;\r\n\r\nconst ProgressBlock = styled(animated.div)<{$visible: boolean}>`\r\n  top: ${props => props.$visible ? '0px' : '-500px'};\r\n  position: relative;\r\n  width: 88px;\r\n  height: 88px;\r\n  background-color: black;\r\n  color: white;\r\n  cursor: grab;\r\n  transition: ${props => props.$visible ? 'top .3s' : 'top .3s .3s'};\r\n  &:active {\r\n    cursor: grabbing\r\n  }\r\n  &:hover ${CurrentProject}, &:active ${CurrentProject}{\r\n      left: 0;\r\n      transform: translateY(-50%) translateX(40%);\r\n  }\r\n  &:hover ${AllProjects}, &:active ${AllProjects}{\r\n      left: 100%;\r\n      transform: translateY(-50%) translateX(-140%);\r\n  }\r\n  &:hover ${Border}, &:active ${Border}{\r\n      transform: rotate(0deg) translateX(-50%) translateY(-50%);\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    setScroll:  SpringStartFn<{top: number, scale: number, x: number}>,\r\n    scrollsCount: number,\r\n    visible: boolean,\r\n    isMainPageFocused: boolean,\r\n    isDrugging: boolean\r\n}\r\n\r\n\r\nconst ProjectsCounter: React.FC<PropsType> = ({setScroll, visible, isDrugging,\r\n                                                  isMainPageFocused, scrollsCount}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [{y, x, translateY}, setAnimation] = useSpring(() => ({\r\n        y: 0,\r\n        x: 0,\r\n        translateY: '-50%'\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (!isDrugging) {\r\n            const currentPercent = (scrollsCount - 1) / (projectsInfo.length - 1);\r\n            const newY = wrapperRef.current!.offsetHeight * currentPercent;\r\n            currentY.current = newY;\r\n            setAnimation({y: newY})\r\n        }\r\n    }, [scrollsCount, setAnimation, isDrugging]);\r\n\r\n    useEffect(() => {\r\n        if (!visible && !isMainPageFocused) setAnimation({x: window.innerWidth/2});\r\n        if (visible && !isMainPageFocused) setAnimation({x: 0});\r\n    }, [visible, setAnimation, isMainPageFocused]);\r\n\r\n    const currentY = useRef<number>(0);\r\n    const currentTop = useRef<number>(0)\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    const onDrugHandler = useDrag(({delta: [, y], active, down, first}) => {\r\n        if (down && first) {\r\n            currentTop.current = -scrollsCount * (window.innerHeight * 0.3) + (scrollsCount - 1) * (window.innerHeight * 0.3);\r\n            setScroll({scale: 0.7});\r\n            dispatch(actions.startDrugging())\r\n        }\r\n        if (active) {\r\n            currentY.current = currentY.current + y;\r\n            const currentPercent = currentY.current / wrapperRef.current!.offsetHeight;\r\n            if (y > 0 && currentPercent > scrollsCount / projectsInfo.length && scrollsCount < projectsInfo.length) {\r\n                dispatch(actions.setScrollsCount(scrollsCount+1))\r\n            } else if (y < 0 && currentPercent < (scrollsCount - 1) / projectsInfo.length && scrollsCount > 1) {\r\n                dispatch(actions.setScrollsCount(scrollsCount-1))\r\n            }\r\n            setAnimation({y: currentY.current});\r\n            setScroll({top: currentTop.current - window.innerHeight * (projectsInfo.length-1) * 0.7 * currentPercent})\r\n        }\r\n        if (!down) {\r\n            const currentBlockPercent = (scrollsCount - 1) / (projectsInfo.length - 1);\r\n            const staticY = currentBlockPercent * wrapperRef.current!.offsetHeight;\r\n            currentY.current = staticY;\r\n            setScroll({scale: 1, top: -currentBlockPercent * (projectsInfo.length-1) * window.innerHeight});\r\n            setAnimation({y: staticY});\r\n            dispatch(actions.stopDrugging())\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Wrapper ref={wrapperRef} style={{x}}>\r\n            <ProgressLine $visible={visible}/>\r\n            <ProgressBlock style={{y, translateY}} {...onDrugHandler()} $visible={visible}>\r\n                <CurrentProject>\r\n                    {scrollsCount === 0 ? 1 : scrollsCount}\r\n                </CurrentProject>\r\n                <Border/>\r\n                <AllProjects>\r\n                    {projectsInfo.length}\r\n                </AllProjects>\r\n            </ProgressBlock>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectsCounter)","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animatedBigSkillsStack} from \"../../../../textAndPrijectsInfo/TextContent\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  font-family: 'Relative-Book';\r\n  color: red;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  padding-bottom: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst InvisibleTextForSize = styled.div`\r\n  opacity: 0\r\n`;\r\n\r\nconst VisibleText = styled.div`\r\n  opacity: 1;\r\n  position: absolute;\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n}\r\n\r\nconst TechnologiesTextTyping: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const [text, setText] = useState<string>('');\r\n\r\n    const typeText = () => {\r\n        if (text === '') {\r\n            setTimeout(() => setText(animatedBigSkillsStack.substring(0, text.length + 1)), 1200)\r\n        } else setText(animatedBigSkillsStack.substring(0, text.length + 1));\r\n    };\r\n    const deleteText = () => {\r\n        if (text === '') return\r\n        setText(animatedBigSkillsStack.substring(0, text.length - 1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        if (visible) timer = window.setTimeout(() => typeText(), 15)\r\n        if (!visible) timer = window.setTimeout(() => deleteText(), 3)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VisibleText>\r\n                {text}\r\n            </VisibleText>\r\n            <InvisibleTextForSize>\r\n                {animatedBigSkillsStack}\r\n            </InvisibleTextForSize>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(TechnologiesTextTyping)","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated, useSprings} from 'react-spring';\r\nimport {aboutMe, contacts} from \"../../../../textAndPrijectsInfo/TextContent\";\r\nimport TextTypingTechnologies from \"./TextTypingTechnologies\";\r\n\r\nconst Wrapper = styled.div<{ $visible: boolean }>`\r\n  display: ${props => props.$visible ? 'block' : 'none'};\r\n  position: absolute;\r\n  width: 50vw;\r\n  top: 0;\r\n  height: 100vh;\r\n`;\r\n\r\nconst InnerCentralWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n  width: 80%;\r\n  text-align: left;\r\n  color: white;\r\n`;\r\n\r\nconst CommonWrapper = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Headers = styled(animated.div)<{ $big: boolean }>`\r\n  font-size: ${props => props.$big ? '60px' : '35px'};\r\n  padding-bottom: ${props => props.$big ? '3%' : '7%'};\r\n  font-family: 'MADE Evolve Bold';\r\n`;\r\n\r\nconst AboutMe = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  font-size: 20px;\r\n  text-align: left;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst InfoHeaders = styled(animated.div)`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 30px;\r\n  padding-top: 4%;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst Contacts = styled(animated.div)`\r\n  padding-top: 4%;\r\n  display: flex;\r\n  justify-items: left;\r\n  width: 60%;\r\n  max-width: 300px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const SingleContact = styled.a`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  font-family: 'Relative-Book';\r\n  text-align: left;\r\n  position: relative;\r\n  opacity: 0.6;\r\n  transition: opacity .2s ease-in-out;\r\n  text-decoration: none;\r\n  color: white;\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: 0;\r\n    height: 1px;\r\n    width: 0;\r\n    background-color: white;\r\n    transition: width .2s ease-in-out;\r\n  }\r\n  &:hover:before {width: 100%};\r\n  &:hover {opacity: 1}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean\r\n}\r\n\r\nconst InfoBlock: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const [springs, setSprings] = useSprings(7, i => ({\r\n        y: '-100%',\r\n    }));\r\n\r\n    const [isContentVisible, setVisibility] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            setVisibility(true)\r\n            setSprings(i => ({\r\n                y: '0%',\r\n                delay: i < 6 ? i * 200 : 3200\r\n            }))\r\n        }\r\n        if (!visible) {\r\n            setSprings(i => ({\r\n                y: '-100%',\r\n                delay: (6 - i) * 200\r\n            })).then(() => setVisibility(false))\r\n        }\r\n    }, [visible, setSprings]);\r\n\r\n    return (\r\n        <Wrapper $visible={isContentVisible}>\r\n            <InnerCentralWrapper>\r\n                <CommonWrapper>\r\n                    <Headers $big={true} style={springs[0]}>\r\n                        Hello\r\n                    </Headers>\r\n                </CommonWrapper>\r\n                <CommonWrapper>\r\n                    <Headers $big={false} style={springs[1]}>\r\n                        Is it me you're looking for?\r\n                    </Headers>\r\n                </CommonWrapper>\r\n                {aboutMe.map((textContent, i) =>\r\n                    <CommonWrapper key={i}>\r\n                        <AboutMe style={springs[i + 2]}>\r\n                            {textContent}\r\n                        </AboutMe>\r\n                    </CommonWrapper>\r\n                )}\r\n                <CommonWrapper>\r\n                    <InfoHeaders style={springs[5]}>\r\n                        Technologies\r\n                    </InfoHeaders>\r\n                </CommonWrapper>\r\n                <TextTypingTechnologies visible={visible}/>\r\n                <CommonWrapper>\r\n                    <Contacts style={springs[6]}>\r\n                        {contacts.map((item, i) =>\r\n                            <SingleContact href={item.href} key={i}>\r\n                                {item.header}\r\n                            </SingleContact>\r\n                        )}\r\n                    </Contacts>\r\n                </CommonWrapper>\r\n            </InnerCentralWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(InfoBlock)","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  font-family: 'Relative-Book';\r\n  font-size: 17px;\r\n  position: relative;\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst InvisibleTextForSize = styled.div`\r\n  opacity: 0\r\n`;\r\n\r\nconst VisibleText = styled.div<{$role: string}>`\r\n  opacity: 1;\r\n  position: absolute;\r\n  color: ${props => props.$role === 'pros' ? 'rgba(255, 255, 255, 0.6)' : 'red'}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n    currentText: string,\r\n    role: string\r\n}\r\n\r\nconst ProsAndConsTyping: React.FC<PropsType> = ({visible, currentText, role}) => {\r\n\r\n    const [text, setText] = useState<string>('');\r\n\r\n    const typeText = () => {\r\n        if (text === ''){\r\n            setTimeout(() => setText(currentText.substring(0, text.length + 1)), role === 'pros' ? 1000 : 1200)\r\n        } else setText(currentText.substring(0, text.length + 1));\r\n    };\r\n    const deleteText = () => {\r\n        if (text === '') return\r\n        setText(currentText.substring(0, text.length - 1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        if (visible) timer = window.setTimeout(() => typeText(), 10)\r\n        if (!visible) timer = window.setTimeout(() => deleteText(), 2)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VisibleText $role={role}>\r\n                {text}\r\n            </VisibleText>\r\n            <InvisibleTextForSize>\r\n                {currentText}\r\n            </InvisibleTextForSize>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProsAndConsTyping)","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components/macro\";\r\nimport {projectsInfo, ProjectType} from \"../../../../textAndPrijectsInfo/TextContent\";\r\nimport {animated, useSprings} from 'react-spring';\r\nimport ProsAndConsTyping from \"./ProsAndConsTyping\";\r\nimport {SingleContact} from \"../../Interface/AboutMe/InfoBlock\";\r\n\r\nconst CloseLookWrapper = styled.div<{ $visible: boolean }>`\r\n  display: ${props => props.$visible ? 'block' : 'none'};\r\n  width: 50vw;\r\n  height: 100vh;\r\n  top: 0;\r\n  position: absolute;\r\n  color: white;\r\n  text-align: left;\r\n`;\r\n\r\nconst CenteringWrapper = styled.div`\r\n  width: 80%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nconst ProjectLittleDescription = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  padding-bottom: 3%;\r\n`;\r\n\r\nconst ProjectName = styled(animated.div)`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 50px;\r\n  padding-bottom: 10%;\r\n`;\r\n\r\nconst References = styled(animated.div)`\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst SingleRef = styled(SingleContact)`\r\n  margin-right: 5%;\r\n`;\r\n\r\nconst ProjectDetailedDescription = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  font-size: 18px;\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst ProsAndCons = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  padding-bottom: 3%;\r\n`;\r\n\r\ntype PropsType = {\r\n    project: number | null,\r\n    visible: boolean\r\n}\r\n\r\nconst CloseLook: React.FC<PropsType> = ({project, visible}) => {\r\n\r\n    const [springs, setSprings] = useSprings(6, i => ({\r\n        x: '-50vw'\r\n    }));\r\n\r\n    const [memoizedProject, setProject] = useState<ProjectType>();\r\n    useEffect(() => {\r\n        if (project !== null) setProject(projectsInfo[project])\r\n    }, [project])\r\n\r\n    const [visibility, setVisibility] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            setVisibility(true);\r\n            setSprings(i => ({\r\n                x: '0vw',\r\n                delay: i * 200\r\n            }))\r\n        }\r\n        if (!visible) {\r\n            setSprings(i => ({\r\n                x: '-50vw',\r\n                delay: (5-i) * 200\r\n            })).then(() => setVisibility(false))\r\n        }\r\n    }, [visible, setSprings]);\r\n\r\n    return (\r\n        <CloseLookWrapper $visible={visibility}>\r\n            <CenteringWrapper>\r\n                <ProjectName style={springs[0]}>\r\n                    {memoizedProject?.projectName}\r\n                </ProjectName>\r\n                <ProjectLittleDescription style={springs[1]}>\r\n                    {memoizedProject?.projectDescription}\r\n                </ProjectLittleDescription>\r\n                <References style={springs[2]}>\r\n                    <SingleRef href={memoizedProject?.refToProject}>\r\n                        github-pages\r\n                    </SingleRef>\r\n                    <SingleRef href={memoizedProject?.refToGit}>\r\n                        source code\r\n                    </SingleRef>\r\n                </References>\r\n                <ProjectDetailedDescription style={springs[3]}>\r\n                    {memoizedProject?.detailedDescription}\r\n                </ProjectDetailedDescription>\r\n                <ProsAndCons style={springs[4]}>\r\n                    Pros\r\n                </ProsAndCons>\r\n                <ProsAndConsTyping visible={visible} currentText={memoizedProject?.pros || ''} role={'pros'}/>\r\n                <ProsAndCons style={springs[5]}>\r\n                    Cons\r\n                </ProsAndCons>\r\n                <ProsAndConsTyping visible={visible} currentText={memoizedProject?.cons || ''} role={'cons'}/>\r\n            </CenteringWrapper>\r\n        </CloseLookWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseLook)\r\n","import React, {useCallback, useEffect, useRef} from 'react';\r\nimport MainPageContainer from \"./Greetings/MainPageContainer\";\r\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\r\nimport Interface from \"./Interface/InterfaceContainer\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from 'react-use-gesture';\r\nimport {isMobile} from 'react-device-detect'\r\nimport {projectsInfo} from \"../../textAndPrijectsInfo/TextContent\";\r\nimport ProjectsCounter from \"./Interface/ProjectsCounter\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {actions} from \"../../store/InterfaceReducer\";\r\nimport InfoBlock from \"./Interface/AboutMe/InfoBlock\";\r\nimport CloseLook from \"./Projects/CloseLook/ProjectCloseLook\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 10;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  background: transparent;\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)`\r\n  width: 100vw;\r\n  position: absolute;\r\n`;\r\n\r\n\r\nconst HTMLElementsContainer: React.FC = () => {\r\n\r\n    const scrollsCount = useSelector((state: AppStateType) => state.interface.scrollsCount, shallowEqual);\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n    const isInterfaceAvailable = useSelector((state: AppStateType) => state.interface.isInterfaceAvailable, shallowEqual);\r\n    const isAboutMenuOpened = useSelector((state: AppStateType) => state.interface.isAboutMenuOpened, shallowEqual);\r\n    const isMainPageFocused = useSelector((state: AppStateType) => state.interface.isMainPageFocused, shallowEqual);\r\n    const druggingState = useSelector((state: AppStateType) => state.interface.druggingState, shallowEqual);\r\n    const scrollingState = useSelector((state: AppStateType) => state.interface.scrollingState, shallowEqual);\r\n    const loadedState = useSelector((state: AppStateType) => state.interface.loadedState, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [animation, setScroll] = useSpring(() => ({\r\n        top: window.innerHeight,\r\n        scale: 1,\r\n        x: 0,\r\n        config: {tension: 100, friction: 25, clamp: true},\r\n    }));\r\n\r\n    const onArrowClickHandler = useCallback(() => {\r\n        dispatch(actions.transitionFromMainPaige())\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!isInterfaceAvailable && !isMainPageFocused && scrollsCount !== 0) {\r\n            setScroll({x: window.innerWidth})\r\n        }\r\n        if (isInterfaceAvailable && !isMainPageFocused && scrollsCount !== 0 && !isAboutMenuOpened && project === null) {\r\n            setScroll({x: 0})\r\n        }\r\n        if (isInterfaceAvailable && !isMainPageFocused && scrollsCount === 0) {\r\n            dispatch(actions.setScrollsCount(1))\r\n            setScroll({\r\n                top: 0,\r\n            });\r\n            setTimeout(() => dispatch(actions.stopScrolling()), 300)\r\n        }\r\n    }, [isInterfaceAvailable, isAboutMenuOpened, isMainPageFocused, setScroll, dispatch, scrollsCount, project]);\r\n\r\n    useWheel(({direction: [, y]}) => {\r\n        if (scrollingState || scrollingState || project !== null || isAboutMenuOpened || druggingState || !loadedState) return;\r\n        if (y > 0 && scrollsCount < projectsInfo.length) {\r\n            if (scrollsCount === 0) {\r\n                dispatch(actions.transitionFromMainPaige());\r\n            } else {\r\n                dispatch(actions.startScrolling(true));\r\n                setScroll({\r\n                    top: -(scrollsCount + 1) * window.innerHeight + window.innerHeight,\r\n                }).then(() => dispatch(actions.stopScrolling()))\r\n            }\r\n        }\r\n        if (y < 0 && scrollsCount !== 0) {\r\n            if (scrollsCount === 1) {\r\n                dispatch(actions.transitionToMainPaige());\r\n                setScroll({top: window.innerHeight})\r\n            } else {\r\n                dispatch(actions.startScrolling(false));\r\n                setScroll({\r\n                    top: -(scrollsCount - 1) * window.innerHeight + window.innerHeight,\r\n                }).then(() => dispatch(actions.stopScrolling()))\r\n            }\r\n        }\r\n    }, {domTarget: window});\r\n\r\n    useDrag(({swipe: [, y]}) => {\r\n        if (!isMobile || project !== null || !loadedState) return;\r\n\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MainPageContainer onArrowClickHandler={onArrowClickHandler} isMainPageFocused={isMainPageFocused}\r\n                               loadedState={loadedState}/>\r\n            <ScrollableWrapper style={animation} ref={wrapperRef}>\r\n                <ProjectsContainer/>\r\n            </ScrollableWrapper>\r\n            <Interface/>\r\n            <ProjectsCounter setScroll={setScroll} scrollsCount={scrollsCount} isMainPageFocused={isMainPageFocused}\r\n                             visible={isInterfaceAvailable && !isAboutMenuOpened && project === null}\r\n                             isDrugging={druggingState}/>\r\n            <InfoBlock visible={isAboutMenuOpened && isInterfaceAvailable}/>\r\n            <CloseLook project={project} visible={!druggingState && !scrollingState && project !== null}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(HTMLElementsContainer)","import React, {useCallback, useEffect} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated, useSpring, useSprings} from 'react-spring';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  background-color: #353535;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LettersWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 50%;\r\n  max-width: 500px;\r\n`;\r\n\r\nconst SingleLetterWrapper = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SingleLetter = styled(animated.div)`\r\n  color: white;\r\n  font-size: 50px;\r\n  text-transform: uppercase;\r\n  font-family: 'Made Evolve Sans Light EVO';\r\n`;\r\n\r\nconst loading = 'loading'.split('');\r\n\r\n\r\nconst Preloader: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [springs, setSprings] = useSprings(7, i => ({\r\n        y: '-100%',\r\n    }));\r\n\r\n    const [wrapperAnimation, setWrapperAnimation] = useSpring(() => ({\r\n        height: '100vh'\r\n    }));\r\n\r\n    const loadStateCheck = useCallback(() => {\r\n        if (document.readyState === 'complete') {\r\n            setSprings(i => ({\r\n                cancel: true,\r\n            })).then(() => setSprings(i => ({\r\n                y: '0%',\r\n                delay: i * 200\r\n            }))).then(() => setWrapperAnimation({\r\n                height: '0vh', delay: 1200\r\n            })).then(() => dispatch(actions.setLoadedState()))\r\n        } else setSprings(i => ({\r\n            to: async next => {\r\n                await next({y: '0%', delay: i * 200});\r\n                await next({y: '100%', delay: 900});\r\n                await next({y: '-100%', immediate: true, delay: (7 - i) * 200});\r\n            },\r\n        })).then(() => loadStateCheck())\r\n    }, [setWrapperAnimation, setSprings, dispatch]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSprings(i => ({\r\n            to: async next => {\r\n                await next({y: '0%', delay: i * 200});\r\n                await next({y: '100%', delay: 900});\r\n                await next({y: '-100%', immediate: true, delay: (7 - i) * 200});\r\n            },\r\n        })).then(() => loadStateCheck())\r\n    }, [setSprings, loadStateCheck])\r\n\r\n    return (\r\n        <Wrapper style={wrapperAnimation}>\r\n            <LettersWrapper>\r\n                {springs.map((spring, i) =>\r\n                    <SingleLetterWrapper key={i}>\r\n                        <SingleLetter style={spring}>\r\n                            {loading[i]}\r\n                        </SingleLetter>\r\n                    </SingleLetterWrapper>\r\n                )}\r\n            </LettersWrapper>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Preloader)","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated} from 'react-spring';\r\nimport {errorMessage} from \"../../../textAndPrijectsInfo/TextContent\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  background-color: #353535;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  display: grid;\r\n  place-items: center;\r\n  z-index: 999;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LettersWrapper = styled.div`\r\n  width: 50%;\r\n  max-width: 500px;\r\n  color: white;\r\n  font-size: 40px;\r\n  font-family: 'Made Evolve Sans Light';\r\n  text-align: center;\r\n`;\r\n\r\n\r\nconst Error: React.FC = () => {\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LettersWrapper>\r\n                {errorMessage}\r\n            </LettersWrapper>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default Error","import React, { useEffect } from 'react';\r\nimport {createGlobalStyle} from \"styled-components\";\r\nimport styled from \"styled-components/macro\";\r\nimport InitialCanvas from \"./components/ThreeJSComponents/InitialCanvas\";\r\nimport HTMLElementsContainer from \"./components/HTMLComponents/HTMLElementsContainer\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Preloader from \"./components/HTMLComponents/preloaderAndErrorScreen/Preloader\";\r\nimport {isMobile} from \"react-device-detect\";\r\nimport Error from \"./components/HTMLComponents/preloaderAndErrorScreen/Error\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n      box-sizing: border-box;\r\n    };\r\n    body {\r\n      margin: 0;\r\n      padding: 0;\r\n      user-select: none;\r\n      outline: none;\r\n      \r\n    };\r\n    &::-webkit-scrollbar { \r\n        display: none;\r\n        };\r\n    html {\r\n        -ms-overflow-style: none; \r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    z-index: -1;\r\n    background-color: black;\r\n    width: 100vw;\r\n    height: 100vh;\r\n`;\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        const reloadFunction = () => document.location.reload()\r\n        window.addEventListener(\"orientationchange\", reloadFunction)\r\n        return () => window.removeEventListener(\"orientationchange\", reloadFunction)\r\n    }, []);\r\n\r\n    let orientation = window.screen.orientation.type;\r\n    if (isMobile && (orientation === \"portrait-secondary\" || orientation === \"portrait-primary\")) return(<Error/>)\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <Preloader/>\r\n            <HTMLElementsContainer/>\r\n            <Wrapper>\r\n                <InitialCanvas/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from './store/store';\n\n/*ReactDOM.render(\n    <StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </StrictMode>,\n    document.getElementById('root')\n);*/\n\nconst root = document.getElementById(\"root\") as HTMLElement;\n// @ts-ignore\nReactDOM.unstable_createRoot(root).render(\n    <StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </StrictMode>);\n\n","module.exports = __webpack_public_path__ + \"static/media/withoutAll.958adb38.glb\";","module.exports = __webpack_public_path__ + \"static/media/testVid.13fb315a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/counter.bf3ccc00.mp4\";","module.exports = __webpack_public_path__ + \"static/media/toDoList.aab83fa4.mp4\";"],"sourceRoot":""}