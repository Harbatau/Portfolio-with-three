{"version":3,"sources":["store/InterfaceReducer.ts","utils/StringVariablesAndTypes.ts","store/store.ts","components/ThreeJSComponents/Control/Borders/SingleBorder.tsx","components/ThreeJSComponents/Control/Borders/BordersArray.tsx","components/ThreeJSComponents/Control/Lights/Lights.tsx","components/ThreeJSComponents/Explosion/shaderMaterial.ts","components/ThreeJSComponents/Explosion/Model.tsx","components/ThreeJSComponents/ControlCamera.tsx","components/ThreeJSComponents/Control/AstralPlane/Pyramid.tsx","components/ThreeJSComponents/Control/AstralPlane/Background.tsx","components/ThreeJSComponents/Control/AstralPlane/AstralPlane.tsx","components/ThreeJSComponents/Control/Videopanel/VideoPlaneLight.tsx","components/ThreeJSComponents/Control/Videopanel/Videopanel.tsx","components/ThreeJSComponents/Control/Lights/Sun.tsx","components/ThreeJSComponents/Control/Lights/AnimatedLight.tsx","components/ThreeJSComponents/Control/Room/Room.tsx","components/ThreeJSComponents/posteffects/Postprocessing.tsx","components/ThreeJSComponents/Control/Cubes/AnimatedCubes.tsx","components/ThreeJSComponents/Control/MainScene.tsx","components/ThreeJSComponents/InitialCanvas.tsx","textContent/TextContent.ts","components/HTMLComponents/Greetings/TextTypingElement.tsx","components/HTMLComponents/Greetings/Arrow.tsx","components/HTMLComponents/Greetings/MainPageContainer.tsx","components/HTMLComponents/Projects/SingleProject/ProjectAnnotation.tsx","components/HTMLComponents/Projects/SingleProject/CloseLookButton.tsx","components/HTMLComponents/Projects/SingleProject/ProjectPresentation.tsx","components/HTMLComponents/Projects/ProjectsContainer.tsx","components/HTMLComponents/Interface/LeftContextButton.tsx","components/HTMLComponents/Interface/Logo.tsx","components/HTMLComponents/Interface/InterfaceContainer.tsx","components/HTMLComponents/Interface/ProjectsCounter.tsx","components/HTMLComponents/Interface/AboutMe/TextTypingTechnologies.tsx","components/HTMLComponents/Interface/AboutMe/InfoBlock.tsx","components/HTMLComponents/Projects/CloseLook/ProsAndConsTyping.tsx","components/HTMLComponents/Projects/CloseLook/ProjectCloseLook.tsx","components/HTMLComponents/HTMLElementsContainer.tsx","App.tsx","index.tsx","model/withoutAll.glb","assets/videos/testVid.mp4"],"names":["initialState","scrollsCount","explosionProgress","sun","cameraState","videos","currentlyLookedProject","isMainPageFocused","isInterfaceAvailable","isCrystalExploded","isAboutMenuOpened","videoPlayerState","geometriesTransition","druggingState","scrollingState","actions","type","video","projectIndex","isFocused","isAvailable","exploded","play","project","positive","MainReducer","state","action","rootReducer","combineReducers","interface","store","createStore","React","memo","rotation","position","props","useMemo","extrudeShape","THREE","moveTo","lineTo","hole","holes","push","extrudeSettings","steps","depth","bevelEnabled","mesh","rotation-z","castShadow","receiveShadow","attach","args","color","roughness","shadowSide","isEqual","transition","useSelector","shallowEqual","useSprings","i","theta","config","mass","tension","friction","clamp","springs","setSprings","cancelsForAnimations","useRef","useEffect","current","forEach","cancel","to","next","a","cancelled","Math","PI","duration","immediate","loop","then","undefined","map","spring","key","scale","distance","useSpring","shadow-mapSize-width","shadow-mapSize-height","angle","penumbra","pointLight","intensity","decay","shader","extensions","derivatives","side","uniforms","time","value","progress","inside","surfaceColor","insideColor","tCube","pixels","window","innerWidth","innerHeight","uvRate1","vertexShader","fragmentShader","sign","number","abs","dispatch","useDispatch","outerShader","shaderMat","useState","innerMesh","outerMesh","setS","GLTFLoader","load","GLB","gltf","voronoiObj","scene","traverse","child","name","children","length","f","m","clone","innerGeometry","outerGeometry","j","filter","v","processedSurface","object","index","coords","surface","geometry","applyMatrix4","makeTranslation","x","y","z","volume","surfaceLength","attributes","array","volumeLength","offset","Array","fill","setAttribute","Float32Array","offset1","axis","random","normalize","axes","axes1","centroidVector","ar","len","getCentroid","centroid","centroid1","processSurface","BufferGeometryUtils","mergeBufferGeometries","computeBoundingSphere","setAnimation","group","onRest","mouseCoords","mouseX","mouseY","onMouseMoveHandler","e","clientX","clientY","addEventListener","removeEventListener","useFrame","targetMouseX","targetMouseY","ta","taY","ref","shaderMaterial","uniforms-progress-value","cameraPosition","mainDisplay","staticProjects","scrollProjects","closeLook","aboutMe","cameraLookAt","ordinaryPos","lookAtProject","useThree","setDefaultCamera","camera","fov","lookAt","setCameraPosition","setTimeout","console","log","get","perspectiveCamera","opened","setSpring","metalness","delay","meshBasicMaterial","videoMaterial","texture","find","item","minFilter","magFilter","format","material","transparent","projectMemo","pause","sunRef","useLayoutEffect","multisampling","height","width","kernelSize","KernelSize","SMALL","density","weight","exposure","samples","clampMax","premultiply","blendFunction","BlendFunction","ADD","opacity","hue","saturation","closeLookPositions","positions","xGrid","yGrid","projectsObservationPositions","positionsInAstralPlane","scaleInAstralPlane","row","column","ceil","lerp","scaleX","scaleY","scaleZ","rotationDirections","rotationArray","animation","default","prop","fallback","InitialCanvas","style","background","shadowMap","colorManagement","onCreated","RectAreaLightUniformsLib","init","gl","alpha","antialias","stencil","concurrent","animatedSkillsStack","animatedBigSkillsStack","projectsInfo","projectName","projectDescription","detailedDescription","pros","cons","technologies","blink","keyframes","Wrapper","styled","div","TextTypingElement","visible","textArray","text","setText","isDeleting","setDeleting","loopNumber","setLoopNumber","typingSpeed","setTypingSpeed","invisible","setInvisible","timer","fullText","substring","handleType","clearTimeout","hoverAnimation","ArrowCenter","ArrowLeft","ArrowRight","AnimatedWrapper","$visible","ArrowWrapper","Arrow","onArrowClickHandler","onClick","MainPageWrapper","MyInfoWrapper","MyName","WrapperForAppearing","MainPageContainer","useCallback","AnnotationWrapper","ProjectNameWrapper","AnimatedProjectName","$isScrolling","ProjectLittleDescription","AnimatedDescription","$invisible","isScrolling","isDrugging","ButtonWrapper","Line","Button","AnimatedText","VideoWrapper","Video","videoRef","muted","src","AllProjectsWrapper","MenuButton","$isAboutBlockOpened","complexMixin","css","MenuButtonWrapper","isAboutBlockOpened","openInformation","closeInformation","closeProject","currentProject","memoizedText","LogoWrapper","Logo","animated","ProgressLine","ProgressBlock","CurrentProject","AllProjects","Border","setScroll","translateY","currentPercent","newY","wrapperRef","offsetHeight","currentY","currentTop","onDrugHandler","useDrag","delta","active","down","first","top","currentBlockPercent","staticY","InvisibleTextForSize","VisibleText","InnerCentralWrapper","CommonWrapper","Headers","$big","AboutMe","InfoHeaders","isContentVisible","setVisibility","textContent","TextTypingTechnologies","$role","currentText","role","CloseLookWrapper","CenteringWrapper","ProjectName","ProjectDetailedDescription","ProsAndCons","memoizedProject","setProject","visibility","ScrollableWrapper","useWheel","direction","domTarget","swipe","isMobile","filterTaps","eventOptions","passive","library","add","far","fas","GlobalStyles","createGlobalStyle","App","root","document","getElementById","ReactDOM","unstable_createRoot","render","module","exports"],"mappings":"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","file":"static/js/main.2b697835.chunk.js","sourcesContent":["import {InferActionTypes} from \"./store\";\r\nimport * as THREE from \"three\";\r\nimport {\r\n    CLOSE_ABOUT_ME_SECTION,\r\n    CLOSE_LOOK,\r\n    CLOSE_PROJECT,\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK, MAIN_SCENE_STATIC,\r\n    OPEN_ABOUT_ME_SECTION,\r\n    OPEN_PROJECT,\r\n    PROJECTS_SCROLLING,\r\n    PROJECTS_STATIC,\r\n    RETURNING_FROM_CLOSE_LOOK,\r\n    SET_ABOUT_MENU_STATE,\r\n    SET_CAMERA_STATE,\r\n    SET_CRYSTAL_STATE,\r\n    SET_INTERFACE_AVAILABILITY,\r\n    SET_MAIN_PAGE_STATE,\r\n    SET_SCROLLS,\r\n    SET_SUN,\r\n    SET_VIDEO,\r\n    SET_VIDEO_PLAYER_STATE,\r\n    START_DRUGGING,\r\n    START_SCROLLING,\r\n    STOP_DRUGGING,\r\n    STOP_SCROLLING,\r\n    TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n    TRANSITION_FROM_MAIN_PAGE,\r\n    TRANSITION_FROM_MAIN_TO_PROJECTS, TRANSITION_TO_MAIN_PAGE, TRANSITION_TO_ABOUT_SECTION, STOP_ANY_ANIMATION,\r\n} from \"../utils/StringVariablesAndTypes\";\r\n\r\ntype InitialStateType = {\r\n    scrollsCount: number,\r\n    explosionProgress: number,\r\n    cameraState: string | null,\r\n    sun: THREE.Mesh | null,\r\n    videos: { video: HTMLVideoElement, projectIndex: number }[],\r\n    currentlyLookedProject: number | null,\r\n    isMainPageFocused: boolean,\r\n    isInterfaceAvailable: boolean,\r\n    isCrystalExploded: boolean,\r\n    isAboutMenuOpened: boolean,\r\n    videoPlayerState: boolean,\r\n    geometriesTransition: null | string,\r\n    druggingState: boolean,\r\n    scrollingState: boolean\r\n};\r\n\r\nconst initialState = {\r\n    scrollsCount: 0,\r\n    explosionProgress: 0,\r\n    sun: null,\r\n    cameraState: null,\r\n    videos: [],\r\n    currentlyLookedProject: null,\r\n    isMainPageFocused: true,\r\n    isInterfaceAvailable: false,\r\n    isCrystalExploded: false,\r\n    isAboutMenuOpened: false,\r\n    videoPlayerState: false,\r\n    geometriesTransition: null,\r\n    druggingState: false,\r\n    scrollingState: false\r\n};\r\n\r\nconst MainReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'REDUX/SET_SUN':\r\n            return {\r\n                ...state,\r\n                sun: action.sun\r\n            }\r\n        case 'REDUX/SET_CAMERA_STATE':\r\n            return {\r\n                ...state,\r\n                cameraState: action.cameraState\r\n            }\r\n        case 'REDUX/SET_SCROLLS':\r\n            return {\r\n                ...state,\r\n                scrollsCount: action.scrollsCount\r\n            }\r\n        case \"REDUX/SET_VIDEO\":\r\n            return {\r\n                ...state,\r\n            videos: [...state.videos, {video: action.video, projectIndex: action.projectIndex}]\r\n            }\r\n        case \"REDUX/SET_MAIN_PAGE_STATE\":\r\n            return {\r\n                ...state,\r\n                isMainPageFocused: action.isFocused\r\n            }\r\n        case \"REDUX/SET_INTERFACE_AVAILABILITY\":\r\n            return {\r\n                ...state,\r\n                isInterfaceAvailable: action.isAvailable,\r\n            }\r\n        case \"REDUX/SET_CRYSTAL_STATE\":\r\n            return {\r\n                ...state,\r\n                isCrystalExploded: action.exploded\r\n            }\r\n        case \"REDUX/SET_ABOUT_MENU_STATE\":\r\n            return {\r\n                ...state,\r\n                isAboutMenuOpened: action.state\r\n            }\r\n        case \"REDUX/SET_VIDEO_PLAYER_STATE\":\r\n            return {\r\n                ...state,\r\n                videoPlayerState: action.play\r\n            }\r\n        case \"REDUX/TRANSITION_FROM_MAIN_PAGE\":\r\n            return {\r\n                ...state,\r\n                isCrystalExploded: true,\r\n                cameraState: TRANSITION_FROM_MAIN_TO_PROJECTS,\r\n                scrollingState: true,\r\n            }\r\n        case \"REDUX/TRANSITION_TO_MAIN_PAGE\":\r\n            return {\r\n                ...state,\r\n                cameraState: MAIN_SCENE_STATIC,\r\n                isInterfaceAvailable: false,\r\n                scrollingState: true,\r\n                scrollsCount: 0\r\n            }\r\n        case \"REDUX/OPEN_ABOUT_ME_SECTION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                isAboutMenuOpened: true,\r\n                cameraState: TRANSITION_TO_ABOUT_SECTION,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/CLOSE_ABOUT_ME_SECTION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                isAboutMenuOpened: false,\r\n                cameraState: TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/OPEN_PROJECT\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                currentlyLookedProject: action.project,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_TO_CLOSE_LOOK,\r\n                cameraState: CLOSE_LOOK,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/CLOSE_PROJECT\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                currentlyLookedProject: null,\r\n                geometriesTransition: GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n                cameraState: RETURNING_FROM_CLOSE_LOOK,\r\n                isInterfaceAvailable: false\r\n            }\r\n        case \"REDUX/START_SCROLLING\":\r\n            return {\r\n                ...state,\r\n                scrollingState: true,\r\n                cameraState: PROJECTS_SCROLLING,\r\n                scrollsCount: action.positive ? state.scrollsCount + 1 : state.scrollsCount - 1\r\n            }\r\n        case \"REDUX/STOP_SCROLLING\":\r\n            return {\r\n                ...state,\r\n                scrollingState: false,\r\n                cameraState: PROJECTS_STATIC,\r\n            }\r\n        case \"REDUX/START_DRUGGING\":\r\n            return {\r\n                ...state,\r\n                cameraState: PROJECTS_SCROLLING,\r\n                druggingState: true\r\n            }\r\n        case \"REDUX/STOP_DRUGGING\":\r\n\r\n            return {\r\n                ...state,\r\n                cameraState: PROJECTS_STATIC,\r\n                druggingState: false\r\n            }\r\n        case \"REDUX/STOP_ANY_ANIMATION\":\r\n            return {\r\n                ...state,\r\n                scrollingState: false,\r\n                isInterfaceAvailable: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype ActionsTypes = InferActionTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n    setSun: (sun: THREE.Mesh | null) => ({type: SET_SUN, sun}) as const,\r\n    setCameraState: (cameraState: string) => ({type: SET_CAMERA_STATE, cameraState}) as const,\r\n    setScrollsCount: (scrollsCount: number) => ({type: SET_SCROLLS, scrollsCount}) as const,\r\n    setVideo: (video: HTMLVideoElement, projectIndex: number) => ({type: SET_VIDEO, video, projectIndex}) as const,\r\n    setMainPageState: (isFocused: boolean) => ({type: SET_MAIN_PAGE_STATE, isFocused}) as const,\r\n    setInterfaceAvailability: (isAvailable: boolean) => ({type: SET_INTERFACE_AVAILABILITY, isAvailable}) as const,\r\n    setCrystalExplosionState: (exploded: boolean) => ({type: SET_CRYSTAL_STATE, exploded}) as const,\r\n    setAboutMenuState: (state: boolean) => ({type: SET_ABOUT_MENU_STATE, state}) as const,\r\n    setVideoPlayerState: (play: boolean) => ({type: SET_VIDEO_PLAYER_STATE, play}) as const,\r\n    transitionFromMainPaige: () => ({type: TRANSITION_FROM_MAIN_PAGE}) as const,\r\n    transitionToMainPaige: () => ({type: TRANSITION_TO_MAIN_PAGE}) as const,\r\n    openAboutMeSection: () => ({type: OPEN_ABOUT_ME_SECTION}) as const,\r\n    closeAboutMeSection: () => ({type: CLOSE_ABOUT_ME_SECTION}) as const,\r\n    openProject: (project: number) => ({type: OPEN_PROJECT, project}) as const,\r\n    closeProject: () => ({type: CLOSE_PROJECT}) as const,\r\n    startScrolling: (positive: boolean) => ({type: START_SCROLLING, positive}) as const,\r\n    stopScrolling: () => ({type: STOP_SCROLLING}) as const,\r\n    startDrugging: () => ({type: START_DRUGGING}) as const,\r\n    stopDrugging: () => ({type: STOP_DRUGGING}) as const,\r\n    stopAnyAnimation: () => ({type: STOP_ANY_ANIMATION}) as const\r\n}\r\n\r\nexport default MainReducer","// camera and stars and sky state\r\n\r\nexport const MAIN_SCENE_STATIC = 'static main scene';\r\nexport const TRANSITION_FROM_MAIN_TO_PROJECTS = 'transition from main to project';\r\nexport const PROJECTS_STATIC = 'static projects scene';\r\nexport const PROJECTS_SCROLLING = 'scrolling projects scene';\r\nexport const CLOSE_LOOK = 'close look';\r\nexport const RETURNING_FROM_CLOSE_LOOK = 'returning from close look';\r\nexport const TRANSITION_TO_ABOUT_SECTION = 'about me';\r\nexport const TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC = 'closing info';\r\n\r\n//cubes transition\r\nexport const GEOMETRIES_TRANSITION_TO_CLOSE_LOOK = 'geometries/TRANSITION_TO_CLOSE_LOOK';\r\nexport const GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK = 'geometries/TRANSITION_FROM_CLOSE_LOOK';\r\nexport const GEOMETRIES_TRANSITION_TO_ABOUT_SECTION = 'geometries/TRANSITION_TO_ABOUT_SECTION';\r\nexport const GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION = 'geometries/TRANSITION_FROM_ABOUT_SECTION';\r\n\r\nexport type Vector3Type = [number, number, number];\r\n\r\n\r\n//Redux variables\r\nexport const SET_NAV_MENU_STATE = 'REDUX/SET_NAV_MENU_STATE';\r\nexport const SET_SUN = 'REDUX/SET_SUN';\r\nexport const SET_CAMERA_STATE = 'REDUX/SET_CAMERA_STATE';\r\nexport const SET_SCROLLS = 'REDUX/SET_SCROLLS';\r\nexport const SET_MAIN_PAGE_STATE = 'REDUX/SET_MAIN_PAGE_STATE';\r\nexport const SET_INTERFACE_AVAILABILITY = 'REDUX/SET_INTERFACE_AVAILABILITY';\r\nexport const SET_CRYSTAL_STATE = 'REDUX/SET_CRYSTAL_STATE';\r\nexport const SET_ABOUT_MENU_STATE = 'REDUX/SET_ABOUT_MENU_STATE';\r\nexport const TRANSITION_FROM_MAIN_PAGE = 'REDUX/TRANSITION_FROM_MAIN_PAGE';\r\nexport const TRANSITION_TO_MAIN_PAGE = 'REDUX/TRANSITION_TO_MAIN_PAGE';\r\nexport const OPEN_ABOUT_ME_SECTION = 'REDUX/OPEN_ABOUT_ME_SECTION';\r\nexport const CLOSE_ABOUT_ME_SECTION = 'REDUX/CLOSE_ABOUT_ME_SECTION';\r\nexport const OPEN_PROJECT = 'REDUX/OPEN_PROJECT';\r\nexport const CLOSE_PROJECT = 'REDUX/CLOSE_PROJECT';\r\nexport const START_SCROLLING = 'REDUX/START_SCROLLING';\r\nexport const STOP_SCROLLING = 'REDUX/STOP_SCROLLING';\r\nexport const START_DRUGGING = 'REDUX/START_DRUGGING';\r\nexport const STOP_DRUGGING = 'REDUX/STOP_DRUGGING';\r\nexport const STOP_ANY_ANIMATION = 'REDUX/STOP_ANY_ANIMATION';\r\n\r\nexport const SET_VIDEO = `REDUX/SET_VIDEO`;\r\nexport const SET_CURRENTLY_LOOKED_PROJECT = 'REDUX/SET_CURRENTLY_LOOKED_PROJECT';\r\nexport const SET_VIDEO_PLAYER_STATE = 'REDUX/SET_VIDEO_PLAYER_STATE';\r\n\r\n\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport MainReducer from \"./InterfaceReducer\";\r\n\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nconst rootReducer = combineReducers({\r\n    interface: MainReducer,\r\n   /* insaneAnimation: InsaneAnimationReducer*/\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React, {useMemo} from 'react';\r\nimport * as THREE from 'three';\r\nimport {animated, SpringValue} from 'react-spring/three';\r\nimport isEqual from \"react-fast-compare\";\r\n\r\ntype PropsType = {\r\n    scale: [number, number, number],\r\n    position:  [number, number, number],\r\n    rotation: SpringValue<number>\r\n}\r\n\r\nconst SingleBorder: React.FC<PropsType> = ({rotation, position, ...props}) => {\r\n    const {extrudeShape, extrudeSettings} = useMemo(() => {\r\n\r\n        let extrudeShape = new THREE.Shape();\r\n        extrudeShape.moveTo(-51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, 19.2);\r\n        extrudeShape.lineTo(-51.2, 19.2);\r\n\r\n        let hole = new THREE.Path();\r\n        hole.moveTo(-32, -12.8);\r\n        hole.lineTo(32, -12.8);\r\n        hole.lineTo(32, 12.8);\r\n        hole.lineTo(-32, 12.8);\r\n        extrudeShape.holes.push(hole);\r\n        //width: 64, height: 25,6\r\n\r\n        const extrudeSettings = {\r\n            steps: 1,\r\n            depth: 20,\r\n            bevelEnabled: false,\r\n        }\r\n\r\n        return {extrudeShape, extrudeSettings};\r\n    }, []);\r\n\r\n    return (\r\n        <animated.mesh {...props} rotation-z={rotation} position={position} castShadow receiveShadow>\r\n            <extrudeBufferGeometry attach=\"geometry\" args={[extrudeShape, extrudeSettings]}/>\r\n            <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7} shadowSide={THREE.FrontSide}/>\r\n        </animated.mesh>\r\n    );\r\n}\r\n\r\nexport default React.memo(SingleBorder, isEqual)","import React, {useEffect, useRef} from 'react';\r\nimport {useSprings} from 'react-spring/three';\r\nimport SingleBorder from \"./SingleBorder\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK\r\n} from \"../../../../utils/StringVariablesAndTypes\";\r\n\r\n\r\nconst BordersArray: React.FC = () => {\r\n\r\n    const transition = useSelector((state: AppStateType) => state.interface.geometriesTransition, shallowEqual);\r\n\r\n    const [springs, setSprings] = useSprings(40, i => ({\r\n        theta: 0,\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    }));\r\n\r\n    const cancelsForAnimations = useRef<(() => void)[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK || transition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION\r\n            || transition === null) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setSprings(i => ({\r\n                to: async (next) => {\r\n                    let cancelled = false;\r\n                    const cancel = () => cancelled = true;\r\n                    cancelsForAnimations.current.push(cancel)\r\n                    !cancelled && await next({\r\n                        theta: -Math.PI / 2 - 0.004 * (i * i) - i * 0.06,\r\n                        config: {duration: 5000}\r\n                    });\r\n                    !cancelled && await next({\r\n                        theta: (-Math.PI / 2 - 0.004 * (i * i) - i * 0.06) - Math.PI,\r\n                        config: {duration: 5000}\r\n                    });\r\n                    !cancelled && await next({\r\n                        theta: (-Math.PI / 2 - 0.004 * (i * i) - i * 0.06),\r\n                        immediate: true\r\n                    });\r\n                },\r\n                loop: true,\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_TO_CLOSE_LOOK || transition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setSprings(i => ({\r\n                cancel: true,\r\n                loop: false\r\n            })).then(() => setSprings(i => ({\r\n                theta: 0,\r\n                config: {duration: undefined}\r\n            })))\r\n        }\r\n    }, [transition]);\r\n\r\n    return (\r\n        <>\r\n            {springs.map((spring, i) =>\r\n                <SingleBorder\r\n                    key={i}\r\n                    scale={[0.6, 1, 1]}\r\n                    position={[0, 0, 3 - i * 4]}\r\n                    rotation={spring.theta}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(BordersArray)","import React from 'react';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport { useSpring, animated } from 'react-spring/three';\r\n\r\nconst Lights: React.FC = () => {\r\n\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n    const {distance} = useSpring({distance: project === null ? 500 : 300})\r\n\r\n    return (\r\n        <>\r\n            <spotLight shadow-mapSize-width={2048} shadow-mapSize-height={2048} distance={200} angle={0.4}\r\n                       penumbra={0.3} castShadow color={\"#ff0000\"} position={[0, 0, -310]}/>\r\n            <animated.pointLight color={\"#ff0000\"} position={[0, 1, -310]} intensity={1}\r\n                                 distance={distance} decay={0.5}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Lights);","import * as THREE from \"three\";\r\n\r\nexport const shader = {\r\n    extensions: {\r\n        derivatives: true\r\n    },\r\n    side: THREE.DoubleSide,\r\n    uniforms: {\r\n        time: {type: \"f\", value: 0},\r\n        progress: {type: \"f\", value: 0},\r\n        inside: {type: \"f\", value: 0},\r\n        surfaceColor: {type: \"v3\", value:  new THREE.Color('green')},\r\n        insideColor: {type: \"v3\", value:  new THREE.Color('blue')},\r\n        tCube: {value: THREE.CubeTexture},\r\n        pixels: {\r\n            type: \"v2\",\r\n            value: new THREE.Vector2(window.innerWidth, window.innerHeight)\r\n        },\r\n        uvRate1: {\r\n            value: new THREE.Vector2(1, 1)\r\n        }\r\n    },\r\n    vertexShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n\r\n\r\n\r\n        attribute vec3 centers;\r\n        attribute vec3 axis;\r\n        attribute float offset;\r\n\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n\r\n        mat4 rotationMatrix(vec3 axis, float angle) {\r\n        axis = normalize(axis);\r\n        float s = sin(angle);\r\n        float c = cos(angle);\r\n        float oc = 1.0 - c;\r\n\r\n        return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\r\n            oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\r\n            oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\r\n            0.0,                                0.0,                                0.0,                                1.0);\r\n    }\r\n\r\n    vec3 rotate(vec3 v, vec3 axis, float angle) {\r\n        mat4 m = rotationMatrix(axis, angle);\r\n        return (m * vec4(v, 1.0)).xyz;\r\n    }\r\n\r\n    vec3 bezier4(vec3 a, vec3 b, vec3 c, vec3 d, float t) {\r\n        return mix(mix(mix(a, b, t), mix(b, c, t), t), mix(mix(b, c, t), mix(c, d, t), t), t);\r\n    }\r\n\r\n    float easeInOutQuint(float t){\r\n        return t < 0.5 ? 16.0 * t * t * t * t * t : 1.0 + 16.0 * (--t) * t * t * t * t;\r\n    }\r\n    float easeOutQuint(float t){\r\n        return 1. + (--t) * t * t * t * t;\r\n    }\r\n    float easeOut(float t){\r\n        return  t * t * t;\r\n    }\r\n\r\n    void main() {\r\n\r\n        vec3 newposition = position;\r\n\r\n        float vTemp =  1. - ((centers.x + centers.y)*0.5 + 1.)/2.;\r\n\r\n        float tProgress = max(0.0, (progress - vTemp*0.4) /0.6);\r\n        vec3 newnormal = rotate(normal,axis,tProgress*(3. + offset*10.));\r\n        vNormal = newnormal;\r\n\r\n        newposition += newposition + centers*(tProgress)*(3. + offset*7.);\r\n\r\n        eye = normalize( vec3( modelViewMatrix * vec4( newposition, 1.0 ) ) );\r\n        vec4 worldPosition = modelMatrix * vec4( newposition, 1.0 );\r\n        vec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * newnormal );\r\n        vec3 I = worldPosition.xyz - cameraPosition;\r\n        vReflect = reflect( I, worldNormal );\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( newposition, 1.0 );\r\n                }`,\r\n    fragmentShader: `uniform float time;\r\n        uniform float progress;\r\n        uniform float inside;\r\n        uniform vec3 surfaceColor;\r\n        uniform vec3 insideColor;\r\n        uniform samplerCube tCube;\r\n        \r\n        varying vec2 vUv;\r\n        varying vec2 vUv1;\r\n        varying vec3 eye;\r\n        varying vec3 vNormal;\r\n        varying vec3 vReflect;\r\n        \r\n        void main()\t{\r\n        \r\n            vec3 r = reflect( eye, vNormal );\r\n            float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\r\n            vec2 vN = r.xy / m + .5;\r\n            vec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\r\n        \r\n            vec3 light = normalize(vec3(12.,10.,10.));\r\n            vec3 light1 = normalize(vec3(-12.,-10.,-10.));\r\n            float l = clamp(dot(light, vNormal),0.5,1.);\r\n            l += clamp(dot(light1, vNormal),0.5,1.)/2.;\r\n            \r\n            if(inside>0.5){\r\n                gl_FragColor = vec4(l,l,l,1.)*vec4(surfaceColor,1.);\r\n            } else{\r\n                gl_FragColor = reflectedColor*vec4(insideColor,1.);\r\n            }\r\n        }`\r\n}","import React, {useEffect, useMemo, useRef, useState} from 'react';\r\nimport * as THREE from 'three';\r\nimport {shader} from \"./shaderMaterial\";\r\nimport {BufferGeometryUtils} from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport {useFrame} from \"react-three-fiber\";\r\nimport {animated, useSpring} from 'react-spring/three';\r\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport {Vector3Type} from \"../../../utils/StringVariablesAndTypes\";\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\n// @ts-ignore\r\nimport GLB from \"../../../model/withoutAll.glb\"\r\n\r\ninterface CustomMesh extends THREE.Mesh {\r\n    geometry: THREE.BufferGeometry\r\n}\r\n\r\ninterface CustomObject extends THREE.Object3D {\r\n    children: CustomMesh[]\r\n}\r\n\r\ntype StateType = {\r\n    innerMesh: THREE.BufferGeometry | null,\r\n    outerMesh: THREE.BufferGeometry | null\r\n}\r\n\r\nconst processSurface = (object: CustomObject, index: number) => {\r\n    let coords = object.position;\r\n    let surface = object.children[0].geometry.clone().applyMatrix4(\r\n        new THREE.Matrix4().makeTranslation(coords.x, coords.y, coords.z)\r\n    );\r\n    let volume = object.children[1].geometry.clone().applyMatrix4(new THREE.Matrix4().makeTranslation(coords.x, coords.y, coords.z));\r\n\r\n    let surfaceLength = object.children[0].geometry.attributes.position.array.length / 3;\r\n    let volumeLength = object.children[1].geometry.attributes.position.array.length / 3;\r\n    //  id\r\n    let offset = new Array(surfaceLength).fill(index / 100);\r\n    surface.setAttribute(\r\n        \"offset\",\r\n        new THREE.BufferAttribute(new Float32Array(offset), 1)\r\n    );\r\n\r\n    let offset1 = new Array(volumeLength).fill(index / 100);\r\n    volume.setAttribute(\r\n        \"offset\",\r\n        new THREE.BufferAttribute(new Float32Array(offset1), 1)\r\n    );\r\n\r\n    // axis\r\n    let getRandomAxis = () => {\r\n        return new THREE.Vector3(\r\n            Math.random() - 0.5,\r\n            Math.random() - 0.5,\r\n            Math.random() - 0.5\r\n        ).normalize();\r\n    };\r\n\r\n    let axis = getRandomAxis();\r\n    let axes = new Array(surfaceLength * 3).fill(0);\r\n    let axes1 = new Array(volumeLength * 3).fill(0);\r\n    for (let i = 0; i < surfaceLength * 3; i = i + 3) {\r\n        axes[i] = axis.x;\r\n        axes[i + 1] = axis.y;\r\n        axes[i + 2] = axis.z;\r\n    }\r\n    surface.setAttribute(\r\n        \"axis\",\r\n        new THREE.BufferAttribute(new Float32Array(axes), 3)\r\n    );\r\n    for (let i = 0; i < volumeLength * 3; i = i + 3) {\r\n        axes1[i] = axis.x;\r\n        axes1[i + 1] = axis.y;\r\n        axes1[i + 2] = axis.z;\r\n    }\r\n    volume.setAttribute(\r\n        \"axis\",\r\n        new THREE.BufferAttribute(new Float32Array(axes1), 3)\r\n    );\r\n\r\n    let getCentroid = (geometry: THREE.BufferGeometry) => {\r\n        let ar = geometry.attributes.position.array;\r\n        let len = ar.length;\r\n        let x = 0,\r\n            y = 0,\r\n            z = 0;\r\n        for (let i = 0; i < len; i = i + 3) {\r\n            x += ar[i];\r\n            y += ar[i + 1];\r\n            z += ar[i + 2];\r\n        }\r\n        return {x: (3 * x) / len, y: (3 * y) / len, z: (3 * z) / len};\r\n    }\r\n\r\n    let centroidVector = getCentroid(surface);\r\n    let centroid = new Array(surfaceLength * 3).fill(0);\r\n    let centroid1 = new Array(volumeLength * 3).fill(0);\r\n    for (let i = 0; i < surfaceLength * 3; i = i + 3) {\r\n        centroid[i] = centroidVector.x;\r\n        centroid[i + 1] = centroidVector.y;\r\n        centroid[i + 2] = centroidVector.z;\r\n    }\r\n    for (let i = 0; i < volumeLength * 3; i = i + 3) {\r\n        centroid1[i] = centroidVector.x;\r\n        centroid1[i + 1] = centroidVector.y;\r\n        centroid1[i + 2] = centroidVector.z;\r\n    }\r\n    surface.setAttribute(\r\n        \"centers\",\r\n        new THREE.BufferAttribute(new Float32Array(centroid), 3)\r\n    );\r\n    volume.setAttribute(\r\n        \"centers\",\r\n        new THREE.BufferAttribute(new Float32Array(centroid1), 3)\r\n    );\r\n\r\n    return {surface, volume};\r\n};\r\n\r\nconst sign = (number: number) => number === 0 ? 1 : number / Math.abs(number);\r\n\r\n\r\nconst Model: React.FC = () => {\r\n\r\n    const isCrystalExploded = useSelector((state: AppStateType) => state.interface.isCrystalExploded, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const outerShader = useMemo(() => {\r\n        let shaderMat = shader;\r\n        shaderMat.uniforms.inside.value = 1;\r\n        return shaderMat\r\n    }, []);\r\n\r\n    const [{innerMesh, outerMesh}, setS] = useState<StateType>({innerMesh: null, outerMesh: null});\r\n\r\n    useEffect(() => {\r\n        const loader = new GLTFLoader();\r\n\r\n        loader.load(GLB,\r\n            (gltf) => {\r\n                let voronoiObj: THREE.Object3D[] = [];\r\n                gltf.scene.traverse((child) => {\r\n                    if (child.name === \"Voronoi_Fracture\") {\r\n                        if (child.children[0].children.length > 2) {\r\n                            child.children.forEach(f => {\r\n                                f.children.forEach(m => {\r\n                                    voronoiObj.push(m.clone());\r\n                                });\r\n                            });\r\n                        } else {\r\n                            child.children.forEach(m => {\r\n                                voronoiObj.push(m.clone());\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n                let innerGeometry: THREE.BufferGeometry[] = [];\r\n                let outerGeometry: THREE.BufferGeometry[] = [];\r\n                let j = 0;\r\n                voronoiObj = voronoiObj.filter(v => {\r\n                    if (v instanceof THREE.Mesh) return false;\r\n                    else {\r\n                        j++;\r\n                        let processedSurface = processSurface(v as CustomObject, j);\r\n                        outerGeometry.push(processedSurface.surface);\r\n                        innerGeometry.push(processedSurface.volume);\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                let innerMesh = BufferGeometryUtils.mergeBufferGeometries(\r\n                    innerGeometry,\r\n                    false\r\n                );\r\n                innerMesh.computeBoundingSphere();\r\n\r\n                let outerMesh = BufferGeometryUtils.mergeBufferGeometries(\r\n                    outerGeometry,\r\n                    false\r\n                );\r\n                outerMesh.computeBoundingSphere();\r\n                setS({innerMesh, outerMesh});\r\n            }\r\n        );\r\n    }, []);\r\n\r\n//explosion\r\n    const [{progress, position}, setAnimation] = useSpring(() => ({\r\n        progress: 0,\r\n        position: [0, 0, -310],\r\n    }));\r\n\r\n    const group = useRef<THREE.Group>(new THREE.Group());\r\n\r\n    useEffect(() => {\r\n        if (!isCrystalExploded) setAnimation({progress: 0});\r\n        if (isCrystalExploded) setAnimation({\r\n            progress: 5,\r\n            onRest: () => dispatch(actions.setMainPageState(false))\r\n        });\r\n    }, [isCrystalExploded, dispatch, setAnimation]);\r\n\r\n    //mouseEvent\r\n    const mouseCoords = useRef<number[]>([0, 0]);\r\n    const mouseX = useRef(0);\r\n    const mouseY = useRef(0);\r\n    useEffect(() => {\r\n        const onMouseMoveHandler = (e: MouseEvent) => mouseCoords.current = [e.clientX, e.clientY];\r\n        if (!isCrystalExploded) {\r\n            window.addEventListener('mousemove', onMouseMoveHandler);\r\n        }\r\n        return (() => {\r\n                window.removeEventListener('mousemove', onMouseMoveHandler)\r\n        })\r\n    }, [isCrystalExploded]);\r\n\r\n    useFrame(() => {\r\n        let targetMouseX = 2 * (mouseCoords.current[0] - window.innerWidth / 2) / window.innerWidth;\r\n        let targetMouseY = 2 * (mouseCoords.current[1] - window.innerHeight / 2) / window.innerHeight;\r\n        mouseX.current += (targetMouseX - mouseX.current) * 0.05;\r\n        mouseY.current += (targetMouseY - mouseY.current) * 0.05;\r\n        let ta = Math.abs(mouseX.current);\r\n        let taY = Math.abs(mouseY.current);\r\n        group.current.rotation.x = Math.PI / 2 - taY * (2 - taY) * Math.PI * sign(mouseY.current);\r\n        group.current.rotation.y = Math.PI / 2 - ta * (2 - ta) * Math.PI * sign(mouseX.current);\r\n        group.current.rotation.z = Math.PI / 2 - ta * (2 - ta) * Math.PI * sign(mouseX.current);\r\n    });\r\n\r\n    return (\r\n        <animated.group ref={group} position={position as unknown as Vector3Type}>\r\n            <mesh>\r\n                <bufferGeometry attach=\"geometry\" {...innerMesh}/>\r\n                <animated.shaderMaterial uniforms-progress-value={progress} attach=\"material\" args={[shader]}\r\n                                         />\r\n            </mesh>\r\n            <mesh>\r\n                <bufferGeometry attach=\"geometry\" {...outerMesh}/>\r\n                <animated.shaderMaterial uniforms-progress-value={progress} attach=\"material\" args={[outerShader]}\r\n                                        />\r\n            </mesh>\r\n        </animated.group>\r\n    )\r\n};\r\n\r\nexport default React.memo(Model)","import React, {useEffect, useRef} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {useFrame, useThree} from \"react-three-fiber\";\r\nimport {animated, useSpring} from \"react-spring/three\";\r\nimport {\r\n    CLOSE_LOOK,\r\n    MAIN_SCENE_STATIC,\r\n    PROJECTS_SCROLLING,\r\n    PROJECTS_STATIC,\r\n    RETURNING_FROM_CLOSE_LOOK,\r\n    TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC,\r\n    TRANSITION_FROM_MAIN_TO_PROJECTS,\r\n    TRANSITION_TO_ABOUT_SECTION,\r\n    Vector3Type\r\n} from \"../../utils/StringVariablesAndTypes\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {actions} from \"../../store/InterfaceReducer\";\r\n\r\nexport const cameraPosition = {\r\n    mainDisplay: [0, 0, -300] as Vector3Type,\r\n    staticProjects: [0, 0, 15] as Vector3Type,\r\n    scrollProjects: [0, 0, 35] as Vector3Type,\r\n    closeLook: [-10, 5, 65] as Vector3Type,\r\n    aboutMe: [0, 0, -240] as Vector3Type\r\n};\r\n\r\nconst cameraLookAt = {\r\n    ordinaryPos: [0, 0, -500],\r\n    lookAtProject: [10, 0, 0]\r\n}\r\n\r\n\r\nconst ControlCamera: React.FC = () => {\r\n\r\n    const cameraState = useSelector((state: AppStateType) => state.interface.cameraState, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ref = useRef(new THREE.PerspectiveCamera());\r\n    const {setDefaultCamera, camera} = useThree();\r\n\r\n    useEffect(() => {\r\n        setDefaultCamera(ref.current!);\r\n    }, []);\r\n\r\n    const [{position, lookAt}, setCameraPosition] = useSpring(() => ({\r\n        position: cameraPosition.mainDisplay,\r\n        fov: 50,\r\n        lookAt: cameraLookAt.ordinaryPos,\r\n        config: {\r\n            tension: 100, friction: 25, clamp: true\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (cameraState === MAIN_SCENE_STATIC) {\r\n            setCameraPosition({position: cameraPosition.mainDisplay}).then(() => dispatch(actions.stopAnyAnimation()));\r\n            setTimeout(() => dispatch(actions.setCrystalExplosionState(false)), 300)\r\n        }\r\n        if (cameraState === PROJECTS_STATIC) setCameraPosition({position: cameraPosition.staticProjects});\r\n        if (cameraState === PROJECTS_SCROLLING) setCameraPosition({\r\n            position: cameraPosition.scrollProjects,\r\n            fov: 80,\r\n            onRest: () => setCameraPosition({fov: 50})\r\n        });\r\n        if (cameraState === CLOSE_LOOK) setCameraPosition({\r\n            position: cameraPosition.closeLook,\r\n            lookAt: cameraLookAt.lookAtProject,\r\n            config: {\r\n                mass: 100,\r\n                tension: 300,\r\n                friction: 300,\r\n                clamp: true,\r\n            }\r\n        }).then(() => {\r\n            dispatch(actions.setVideoPlayerState(true));\r\n            dispatch(actions.stopAnyAnimation())\r\n        });\r\n        if (cameraState === RETURNING_FROM_CLOSE_LOOK) setCameraPosition({\r\n            position: cameraPosition.staticProjects,\r\n            lookAt: cameraLookAt.ordinaryPos,\r\n            config: {\r\n                mass: 100,\r\n                tension: 400,\r\n                friction: 400,\r\n                clamp: true,\r\n            }\r\n        }).then(() => dispatch(actions.stopAnyAnimation()));\r\n        if (cameraState === TRANSITION_FROM_MAIN_TO_PROJECTS) setCameraPosition({\r\n            position: cameraPosition.staticProjects,\r\n            config: {\r\n                mass: 100,\r\n                tension: 400,\r\n                friction: 400,\r\n                clamp: true,\r\n            }\r\n        }).then(() => {\r\n            dispatch(actions.setInterfaceAvailability(true));\r\n            dispatch(actions.setMainPageState(false));\r\n        });\r\n        if (cameraState === TRANSITION_TO_ABOUT_SECTION) {\r\n            setCameraPosition({\r\n                position: cameraPosition.aboutMe,\r\n                config: {\r\n                    mass: 100,\r\n                    tension: 400,\r\n                    friction: 400,\r\n                    clamp: true,\r\n                }\r\n            }).then(() => dispatch(actions.stopAnyAnimation()));\r\n            setTimeout(() => dispatch(actions.setCrystalExplosionState(false)), 300)\r\n        }\r\n        if (cameraState === TRANSITION_FROM_ABOUT_SECTION_TO_PROJECTS_STATIC) {\r\n            setCameraPosition({position: cameraPosition.staticProjects})\r\n                .then(() => dispatch(actions.stopAnyAnimation()))\r\n            setTimeout(() => dispatch(actions.setCrystalExplosionState(true)), 300)\r\n        }\r\n        console.log(cameraState)\r\n    }, [cameraState, setCameraPosition, dispatch]);\r\n\r\n    useFrame(() => {\r\n        camera.lookAt(...lookAt.get() as Vector3Type)\r\n    })\r\n\r\n    // @ts-ignore\r\n    return <animated.perspectiveCamera ref={ref} position={position}/>\r\n}\r\n\r\nexport default React.memo(ControlCamera)","import React, {useEffect} from 'react';\r\nimport {useSpring, animated} from \"@react-spring/three\";\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport * as THREE from \"three\";\r\n\r\ntype PropsType = {\r\n    opened: boolean\r\n}\r\n\r\nconst Pyramid: React.FC<PropsType> = ({opened}) => {\r\n\r\n    const [{position}, setSpring] = useSpring(() => ({\r\n        position: [0, 400, -300],\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (opened) setSpring({position: [0, 205, -300]});\r\n        if (!opened) setSpring({position: [0, 400, -300]});\r\n    }, [opened])\r\n\r\n    return (\r\n        <animated.mesh scale={[40, 40, 40]}\r\n                       position={position as unknown as Vector3Type}\r\n                       rotation={[Math.PI, 0, 0]}>\r\n            <coneBufferGeometry attach=\"geometry\" args={[5, 10, 4]}/>\r\n            <meshStandardMaterial attach=\"material\" roughness={0.7} shadowSide={THREE.FrontSide} color={'#000B11'} metalness={0.6}/>\r\n        </animated.mesh>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Pyramid)","import React from 'react';\r\nimport {animated, useSpring} from \"react-spring/three\";\r\nimport * as THREE from 'three';\r\n\r\ntype PropsType = {\r\n    opened: boolean\r\n}\r\n\r\nconst Background: React.FC<PropsType> = ({opened}) => {\r\n\r\n    const {color} = useSpring({\r\n        color: opened ? '#EAE6E5' : '#000B11',\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true\r\n        },\r\n        delay: opened ? 1000 : 0\r\n    })\r\n\r\n    return(\r\n        <mesh position={[0, 0, -300]}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[700, 700, 700]}/>\r\n            <animated.meshBasicMaterial attach=\"material\" color={color} side={THREE.BackSide}/>\r\n        </mesh>\r\n    )\r\n}\r\n\r\nexport default React.memo(Background)","import React from 'react';\r\nimport Pyramid from \"./Pyramid\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport Background from \"./Background\";\r\n\r\nconst AstralPlane: React.FC = () => {\r\n\r\n    const isAboutMenuOpened = useSelector((state: AppStateType) => state.interface.isAboutMenuOpened, shallowEqual);\r\n\r\n\r\n    return(\r\n        <group>\r\n            <Background opened={isAboutMenuOpened}/>\r\n            <Pyramid opened={isAboutMenuOpened}/>\r\n        </group>\r\n    )\r\n}\r\n\r\nexport default React.memo(AstralPlane)","import React from \"react\";\r\n\r\n\r\nconst VideoPlaneLight: React.FC = () => {\r\n\r\n    return (\r\n        <rectAreaLight args={[0xffffff, 1, 14, 7]} rotation={[0, Math.PI, 0]} />\r\n    )\r\n}\r\n\r\nexport default React.memo(VideoPlaneLight)","import React, {useEffect, useMemo, useRef} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {animated, useSpring} from \"react-spring/three\";\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport VideoPlaneLight from \"./VideoPlaneLight\";\r\nimport {useFrame} from \"react-three-fiber\";\r\n\r\n\r\nconst VideoPanel: React.FC = () => {\r\n\r\n    const videos = useSelector((state: AppStateType) => state.interface.videos, shallowEqual);\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n    const videoPlayerState = useSelector((state: AppStateType) => state.interface.videoPlayerState, shallowEqual);\r\n\r\n    const ref = useRef<THREE.Group>(new THREE.Group());\r\n\r\n    const videoMaterial = useMemo(() => {\r\n        if (project !== null) {\r\n            const texture = new THREE.VideoTexture(videos.find(item => item.projectIndex === project)!.video);\r\n            texture.minFilter = THREE.LinearFilter;\r\n            texture.magFilter = THREE.LinearFilter;\r\n            texture.format = THREE.RGBFormat;\r\n            const material = new THREE.MeshBasicMaterial({color: 0xffffff, map: texture});\r\n            material.transparent = false;\r\n            return material\r\n        } else return new THREE.MeshBasicMaterial({color: 0xffffff})\r\n    }, [project]);\r\n\r\n    const [{position}, setAnimation] = useSpring(() => ({\r\n        position: [80, 0, 100]\r\n    }));\r\n\r\n    const projectMemo = useRef<null | number>(null);\r\n\r\n    useEffect(() => {\r\n        if (videoPlayerState && project !== null) {\r\n            setAnimation({position: [3, 0, 45]})\r\n            videos[project].video.play();\r\n            projectMemo.current = project\r\n        }\r\n        if (videoPlayerState && project === null) {\r\n            setAnimation({position: [80, 0, 100]})\r\n            videos[projectMemo.current!].video.pause()\r\n        }\r\n    }, [videoPlayerState, project]);\r\n\r\n    useFrame(() => {\r\n        ref.current.lookAt(...[-10, 5, 65] as Vector3Type)\r\n    })\r\n\r\n    return (\r\n        <animated.group position={position as unknown as Vector3Type} ref={ref}>\r\n            {videoPlayerState && <VideoPlaneLight/>}\r\n            <mesh material={videoMaterial}>\r\n                <planeBufferGeometry attach=\"geometry\" args={[14, 7]}/>\r\n            </mesh>\r\n        </animated.group>\r\n    )\r\n}\r\n\r\nexport default React.memo(VideoPanel)","import React, {useLayoutEffect, useRef} from 'react';\r\nimport * as THREE from 'three';\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {animated, useSpring} from 'react-spring/three';\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\n\r\n\r\nconst Sun = () => {\r\n\r\n    const isCrystalExploded = useSelector((state: AppStateType) => state.interface.isCrystalExploded, shallowEqual);\r\n    const dispatch = useDispatch();\r\n\r\n    const sunRef  = useRef<THREE.Mesh>(new THREE.Mesh())\r\n\r\n    const {scale} = useSpring({\r\n        scale: isCrystalExploded ? [15, 15, 15] : [0.1, 0.1, 0.1],\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    });\r\n\r\n    useLayoutEffect(() => {\r\n        setTimeout(() => dispatch(actions.setSun(sunRef.current)), 50)\r\n    }, [])\r\n\r\n    return (\r\n        <animated.mesh ref={sunRef} position={[0, 0, -310]} scale={scale as unknown as Vector3Type}>\r\n            <sphereBufferGeometry attach=\"geometry\" args={[5, 10, 10]}/>\r\n            <meshBasicMaterial attach=\"material\" color={\"#FF0000\"} />\r\n        </animated.mesh>\r\n    );\r\n};\r\n\r\nexport default React.memo(Sun)","import React from \"react\";\r\n\r\nconst AnimatedLight = () => {\r\n\r\n    return(\r\n        <pointLight position={[0, 1, 50]} intensity={1} distance={150} color=\"#90E0EF\"/>\r\n    )\r\n}\r\n\r\nexport default React.memo(AnimatedLight)","import React, {useEffect, useMemo} from 'react';\r\nimport * as THREE from 'three';\r\nimport {animated, useSprings} from 'react-spring/three';\r\nimport {Vector3Type} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\n\r\nconst Room: React.FC = () => {\r\n\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n    const {extrudeShape, extrudeSettings} = useMemo(() => {\r\n\r\n        let extrudeShape = new THREE.Shape();\r\n        extrudeShape.moveTo(-51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, -19.2);\r\n        extrudeShape.lineTo(51.2, 19.2);\r\n        extrudeShape.lineTo(-51.2, 19.2);\r\n\r\n        let hole = new THREE.Path();\r\n        hole.moveTo(-32, -12.8);\r\n        hole.lineTo(32, -12.8);\r\n        hole.lineTo(32, 12.8);\r\n        hole.lineTo(-32, 12.8);\r\n        extrudeShape.holes.push(hole);\r\n        //width: 64, height: 25,6\r\n        //19.2 12.8\r\n        const extrudeSettings = {\r\n            steps: 1,\r\n            depth: 16,\r\n            bevelEnabled: false,\r\n        }\r\n\r\n        return {extrudeShape, extrudeSettings};\r\n    }, []);\r\n\r\n    const [springs, setSprings] = useSprings(2,i => ({\r\n        scale: i === 0 ? [0.6, 1, 1] : [0.6, 1, 2],\r\n        config: {duration: 700}\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (project !== null) setSprings(i => {\r\n            if (i === 0) return {\r\n                to: async (next) => {\r\n                    await next({\r\n                        scale: [0.6, 0.5, 1],\r\n                        delay: 3000\r\n                    });\r\n                    await next({\r\n                        scale: [0.3, 0.5, 1],\r\n                    })\r\n                }\r\n            }\r\n            return {\r\n                to: async (next) => {\r\n                    await next({\r\n                        scale: [0.6, 0.7, 2],\r\n                        delay: 1000\r\n                    });\r\n                    await next({\r\n                        scale: [0.4, 0.7, 2],\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        if (project === null) setSprings(i => ({\r\n\r\n        }))\r\n    }, [project])\r\n\r\n    return (\r\n        <>\r\n        {springs.map(({scale}, i) =>\r\n                <animated.mesh scale={scale as unknown as Vector3Type} key={i}\r\n                               position={i === 0 ? [0, 0, 23] : [0, 0, 39]} castShadow receiveShadow>\r\n                    <extrudeBufferGeometry attach=\"geometry\" args={[extrudeShape, extrudeSettings]}/>\r\n                    <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7} shadowSide={THREE.FrontSide}/>\r\n                </animated.mesh>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Room)","import React from \"react\";\r\nimport {EffectComposer, GodRays, HueSaturation, Noise, Vignette} from \"react-postprocessing\";\r\n/*@ts-ignore*/\r\nimport {BlendFunction, KernelSize} from 'postprocessing';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport isEqual from \"react-fast-compare\";\r\n\r\nconst Postprocessing: React.FC = () => {\r\n\r\n    const sun = useSelector((state: AppStateType) => state.interface.sun, isEqual);\r\n\r\n    return (\r\n        <>\r\n            {sun &&\r\n            <EffectComposer multisampling={8}>\r\n                <GodRays sun={sun} height={300} width={300} kernelSize={KernelSize.SMALL}\r\n                         density={0.96} decay={0.92} weight={0.3} exposure={0.34} samples={50} clampMax={1}/>\r\n                {/*@ts-ignore*/}\r\n                <Noise premultiply blendFunction={BlendFunction.ADD} opacity={0.47}/>\r\n                <HueSaturation hue={3.11} saturation={2.05}/>\r\n                <Vignette/>\r\n            </EffectComposer>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(Postprocessing)","import React, {useEffect, useMemo, useRef} from \"react\";\r\nimport * as THREE from 'three';\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../store/store\";\r\nimport {\r\n    GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK,\r\n    GEOMETRIES_TRANSITION_TO_ABOUT_SECTION,\r\n    GEOMETRIES_TRANSITION_TO_CLOSE_LOOK,\r\n    Vector3Type\r\n} from \"../../../../utils/StringVariablesAndTypes\";\r\nimport {animated, config, useSprings} from \"react-spring/three\";\r\n\r\n\r\nconst xGrid = 5, yGrid = 5;\r\nconst xSize = 19.2 / xGrid;\r\nconst ySize = 12.8 / yGrid;\r\n\r\nconst AnimatedCubes: React.FC = () => {\r\n\r\n    const transition = useSelector((state: AppStateType) => state.interface.geometriesTransition, shallowEqual);\r\n\r\n    const closeLookPositions = useMemo(() => {\r\n        let positions: Vector3Type[] = [];\r\n        for (let i = 0; i < xGrid; i++)\r\n            for (let j = 0; j < yGrid; j++) {\r\n                const position: Vector3Type = [\r\n                    (i - xGrid / 2) * xSize,\r\n                    (j - yGrid / 2) * ySize + 2,\r\n                    30 - Math.random()*2\r\n                ];\r\n                positions.push(position)\r\n            }\r\n        return positions\r\n    }, []);\r\n\r\n    const projectsObservationPositions = useMemo(() => {\r\n        const zDistance = -160 / (xGrid * yGrid);\r\n        let positions: Vector3Type[] = [];\r\n        for (let i = 0; i < xGrid * yGrid; i++) {\r\n            const x = Math.random() * 20 - 10;\r\n            const y = Math.random() * 13 - 6.5;\r\n            const z = i * zDistance + 0.7 * zDistance * Math.random();\r\n            positions.push([x, y, z])\r\n        }\r\n        return positions\r\n    }, []);\r\n\r\n    const {positionsInAstralPlane, scaleInAstralPlane} = useMemo(() => {\r\n        let positionsInAstralPlane: Vector3Type[] = [];\r\n        let scaleInAstralPlane: Vector3Type[] = [];\r\n        for (let i = 1; i <= xGrid * yGrid; i++) {\r\n            const row = i % 5;\r\n            const column = Math.ceil(i / 5) - 1;\r\n            const x = THREE.MathUtils.lerp(-28.75, 28.75, row / 4);\r\n            const z = THREE.MathUtils.lerp(-431.25, -488.75, column / 4);\r\n            positionsInAstralPlane.push([x, -200, z]);\r\n\r\n            const scaleX = Math.random() * 4 + (column === 2 && row === 2 ? 95 :\r\n                (row === 0 || row === 4) || (column === 0 || column === 4) ? 65 : 80);\r\n            const scaleY = 5 + Math.random();\r\n            const scaleZ = 5 + Math.random();\r\n            scaleInAstralPlane.push([scaleX, scaleY, scaleZ])\r\n        }\r\n        return {positionsInAstralPlane, scaleInAstralPlane}\r\n    }, []);\r\n\r\n    const rotationDirections = useMemo(() => {\r\n        const rotationArray = []\r\n        for (let i = 0; i < xGrid * yGrid; i++) {\r\n            rotationArray.push([Math.PI * Math.random(), Math.PI * Math.random(), Math.PI * Math.random()])\r\n        }\r\n        return rotationArray\r\n    }, []);\r\n\r\n    const [animation, setAnimation] = useSprings(xGrid * yGrid, i => ({\r\n        position: projectsObservationPositions[i],\r\n        scale: [0.7, 0.7, 0.7],\r\n        rotation: rotationDirections[i],\r\n        config: {\r\n            mass: 100,\r\n            tension: 400,\r\n            friction: 400,\r\n            clamp: true,\r\n        }\r\n    }));\r\n\r\n    const cancelsForAnimations = useRef<(() => void)[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (transition === GEOMETRIES_TRANSITION_TO_ABOUT_SECTION) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setAnimation(i => ({\r\n                cancel: true\r\n            })).then(() => setAnimation(i => ({\r\n                to: async (next) => {\r\n                    await next({\r\n                        position: [projectsObservationPositions[i][0],projectsObservationPositions[i][1], -170],\r\n                        config: {duration: 400 + Math.random()*300}\r\n                    });\r\n                    await next({\r\n                        position: [i, -100, -200],\r\n                        rotation: [0, 0, Math.PI / 2],\r\n                        config: config.default\r\n                    });\r\n                    await next({\r\n                        position: positionsInAstralPlane[i],\r\n                        immediate: true\r\n                    });\r\n                    await next({\r\n                        scale: [0.3, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                        immediate: true\r\n                    });\r\n                    await next({\r\n                        scale: scaleInAstralPlane[i],\r\n                    });\r\n                }\r\n            }))).then(() => setAnimation(i => {\r\n                const row = (i + 1) % 5;\r\n                const column = Math.ceil((i + 1) / 5) - 1;\r\n                if (row === 2 && column === 2) return {to: false};\r\n\r\n                const scaleX = scaleInAstralPlane[i][0] + Math.random() * 8;\r\n\r\n                let cancelled = false;\r\n                const cancel = () => cancelled = true;\r\n                cancelsForAnimations.current.push(cancel)\r\n\r\n                return {\r\n                    to: async (next) => {\r\n                        !cancelled && await next({\r\n                            scale: [scaleInAstralPlane[i][0], scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                            config: {duration: 1600 + Math.random() * 2000},\r\n                            delay: 500 + Math.random() * 1000,\r\n\r\n                        });\r\n                        !cancelled && await next({\r\n                            scale: [scaleX, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                            config: {duration: 1600 + Math.random() * 2000},\r\n                            delay: Math.random() * 500\r\n                        });\r\n                    },\r\n                    loop: true,\r\n                }\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_CLOSE_LOOK) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n            })).then(() => setAnimation(i => ({\r\n                position: projectsObservationPositions[i],\r\n                scale: [0.7, 0.7, 0.7],\r\n                rotation: rotationDirections[i],\r\n            }))).then(() => setAnimation(i => {\r\n                let cancelled = false;\r\n                const cancel = () => cancelled = true;\r\n                cancelsForAnimations.current.push(cancel)\r\n                return {\r\n                    to: async next => {\r\n                        !cancelled && await next ({rotation: rotationDirections[i]})\r\n                        !cancelled && await next ({rotation: rotationDirections[i].map(item => item + 2*Math.PI)})\r\n                        !cancelled && await next ({rotation: rotationDirections[i], immediate: true})\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_FROM_ABOUT_SECTION) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setAnimation(i => ({\r\n                cancel: true,\r\n            })).then(() => setAnimation(i => ({\r\n                scale: [0.7, scaleInAstralPlane[i][1], scaleInAstralPlane[i][2]],\r\n                config: config.default\r\n            }))).then(() => setAnimation(i => ({\r\n                scale: [0.7, 0.7, 0.7],\r\n                config: config.default\r\n            }))).then(() => setAnimation(i => ({\r\n                to: async (next) => {\r\n                    await next({\r\n                        position: [projectsObservationPositions[i][0], projectsObservationPositions[i][1], -170],\r\n                        scale: [0.7, 0.7, 0.7],\r\n                        rotation: rotationDirections[i],\r\n                        config: {duration: 400 + Math.random() * 300}\r\n                    });\r\n                    await next({\r\n                        position: projectsObservationPositions[i],\r\n                        config: {duration: 400 + Math.random() * 300}\r\n                    });\r\n                }\r\n            }))).then(() => setAnimation(i => ({\r\n                position: projectsObservationPositions[i],\r\n                rotation: rotationDirections[i],\r\n            }))).then(() => setAnimation(i => {\r\n                let cancelled = false;\r\n                const cancel = () => cancelled = true;\r\n                cancelsForAnimations.current.push(cancel)\r\n                return {\r\n                    to: async next => {\r\n                        !cancelled && await next ({rotation: rotationDirections[i]})\r\n                        !cancelled && await next ({rotation: rotationDirections[i].map(item => item + 2*Math.PI)})\r\n                        !cancelled && await next ({rotation: rotationDirections[i], immediate: true})\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            }))\r\n        }\r\n        if (transition === GEOMETRIES_TRANSITION_TO_CLOSE_LOOK) {\r\n            cancelsForAnimations.current.forEach(cancel => cancel());\r\n            cancelsForAnimations.current = [];\r\n            setAnimation(i => ({\r\n                cancel: true\r\n            })).then(() => setAnimation(i => ({\r\n                position: closeLookPositions[i],\r\n                scale: [1, 1, 1],\r\n                rotation: [0, 0, 0],\r\n                config: (prop) =>\r\n                    prop !== 'rotation' ? {\r\n                        mass: 1,\r\n                        tension: 214,\r\n                        friction: 120,\r\n                        clamp: true,\r\n                    } : {\r\n                        mass: 1,\r\n                        tension: 70 + 50 * Math.random(),\r\n                        friction: 40,\r\n                        clamp: true,\r\n                    }\r\n            }))).then(() => {\r\n\r\n                setAnimation(i => ({\r\n                    to: async (next) => {\r\n                        let cancelled = false;\r\n                        const cancel = () => cancelled = true;\r\n                        cancelsForAnimations.current.push(cancel)\r\n                        !cancelled && await next({\r\n                            position: [closeLookPositions[i][0], closeLookPositions[i][1], closeLookPositions[i][2] + Math.random()*3],\r\n                            config: {duration: 200 + Math.random() * 300},\r\n                            delay: Math.random() * 500\r\n                        });\r\n                        !cancelled && await next({\r\n                            position: [closeLookPositions[i][0], closeLookPositions[i][1], closeLookPositions[i][2] +Math.random()*3],\r\n                            config: {duration: 200 + Math.random() * 300},\r\n                            delay: Math.random() * 500\r\n                        })\r\n                    },\r\n                    loop: true\r\n                }))\r\n            });\r\n        }\r\n        if (transition === null) {\r\n            setAnimation(i => {\r\n                let cancelled = false;\r\n                const cancel = () => cancelled = true;\r\n                cancelsForAnimations.current.push(cancel)\r\n                return {\r\n                    to: async next => {\r\n                        !cancelled && await next ({rotation: rotationDirections[i]})\r\n                        !cancelled && await next ({rotation: rotationDirections[i].map(item => item + 2*Math.PI)})\r\n                        !cancelled && await next ({rotation: rotationDirections[i], immediate: true})\r\n                    },\r\n                    loop: true,\r\n                    config: (prop) =>\r\n                        prop === 'rotation' ? {duration: 10000} : {}\r\n                }\r\n            })\r\n        }\r\n    }, [transition]);\r\n\r\n    return (\r\n        <>\r\n            {animation.map(({scale, position, rotation}, i) =>\r\n                <animated.mesh key={i} position={position as unknown as Vector3Type} castShadow receiveShadow\r\n                               scale={scale as unknown as Vector3Type}\r\n                               rotation={rotation as unknown as Vector3Type}>\r\n                    <boxBufferGeometry attach=\"geometry\" args={[xSize, ySize, ySize, 5, 5, 5]}/>\r\n                    <meshStandardMaterial attach=\"material\" color=\"#6a040f\" roughness={0.7} shadowSide={THREE.FrontSide}/>\r\n                </animated.mesh>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AnimatedCubes)","import React, {Suspense} from 'react';\r\nimport BordersArray from \"./Borders/BordersArray\";\r\nimport Lights from \"./Lights/Lights\";\r\nimport Model from \"../Explosion/Model\";\r\nimport ControlCamera from \"../ControlCamera\";\r\nimport AstralPlane from \"./AstralPlane/AstralPlane\";\r\nimport VideoPanel from \"./Videopanel/Videopanel\";\r\nimport Sun from \"./Lights/Sun\";\r\nimport AnimatedLight from \"./Lights/AnimatedLight\";\r\nimport Room from \"./Room/Room\";\r\nimport Postprocessing from \"../posteffects/Postprocessing\";\r\nimport AnimatedCubes from \"./Cubes/AnimatedCubes\";\r\n\r\n//colors\r\n\r\nconst MainScene: React.FC = () => {\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={null}>\r\n                <BordersArray/>\r\n                <Lights/>\r\n                <Sun/>\r\n                <Model/>\r\n                <AnimatedCubes/>\r\n                <AstralPlane/>\r\n                <VideoPanel/>\r\n                <Postprocessing/>\r\n                <AnimatedLight/>\r\n                <Room/>\r\n            </Suspense>\r\n            <ControlCamera/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MainScene)","import React from 'react';\r\nimport {Canvas} from \"react-three-fiber\";\r\nimport store from \"../../store/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport MainScene from \"./Control/MainScene\";\r\nimport {RectAreaLightUniformsLib} from \"three/examples/jsm/lights/RectAreaLightUniformsLib\";\r\n\r\nconst InitialCanvas = () => {\r\n\r\n    return (\r\n        <Canvas\r\n            style={{background: '#EAE6E5'}}\r\n            shadowMap\r\n            colorManagement\r\n            onCreated={RectAreaLightUniformsLib.init}\r\n            gl={{\r\n                alpha: false,\r\n                antialias: false,\r\n                stencil: false,\r\n                depth: false,\r\n            }}\r\n            concurrent={true}>\r\n            <Provider store={store}>\r\n                {/*<fog attach=\"fog\" args={[0x333333, 10, 400]}/>*/}\r\n                <MainScene/>\r\n            </Provider>\r\n        </Canvas>\r\n    );\r\n};\r\n\r\nexport default InitialCanvas;","export const animatedSkillsStack = ['JavaScript', 'TypeScript', 'React', 'Redux', 'Three.js'];\r\n\r\nexport const animatedBigSkillsStack = 'HTML5/CSS3   JavaScript   TypeScript   React   Redux   Three.js   styled-components' +\r\n'   React-spring   axios   thunk   etc...';\r\n\r\nexport type ProjectType = {\r\n    projectName: string,\r\n    projectDescription: string,\r\n    detailedDescription: string,\r\n    pros: string,\r\n    cons: string,\r\n    technologies: string\r\n} ;\r\nexport const projectsInfo: ProjectType[] = [\r\n    {\r\n        projectName: \"The Counter\",\r\n        projectDescription: \"My first project\",\r\n        detailedDescription: \"The project everyone started with. It doesn't have much logic, but looks not so bad. \" +\r\n            \"I think that it is not a shame to show it to someone\",\r\n        pros: \"The project is responsive and has a nice appearance. There are two display modes. \" +\r\n            \"It also has advanced input validation with a set of messages for each error.\",\r\n        cons: \"Slight short-term performance degradation may occur when switching modes. The validation logic is quite bulky\",\r\n        technologies: \"JavaScript React Redux SASS\"\r\n    },\r\n    {\r\n        projectName: \"To Do List\",\r\n        projectDescription: \"An application with many interactions\",\r\n        detailedDescription: \"My second project. Connected to the server API, kindly provided to me by IT-incubator. \" +\r\n            \"When developing, the main task was to create a beautiful and responsive application with a huge number of all kinds of user interactions. \" +\r\n            \" Design inspired by Apple's Neumorphism\",\r\n        pros: \"There are animations and transitions for almost any user action. Data will be sent only when the user accepts the changes that can be canceled\" +\r\n            \"Changes are made by comparing the original state with the edited one.\",\r\n        cons: \"Due to the large number of animations and event handlers, performance issues can be observed on slower devices\" +\r\n            \"The function of comparing states and sending data is difficult to understand for an unprepared person. \",\r\n        technologies: \"TypeScript React Redux styled-components react-spring thunk\"\r\n    },\r\n    {\r\n        projectName: \"The Portfolio\",\r\n        projectDescription: \"The project that characterizes me\",\r\n        detailedDescription: \"In my opinion, Three.js is a technology that greatly improves perceptions and user experience.\" +\r\n            \"At least After I got acquainted with this library, I had no doubts about it\" +\r\n            \"Even if you don't have expensive and beautiful 3d models, you can surprise users with your creativity.\",\r\n        pros: \"Main advantage of this project is animated canvas in the background that keeps track\" +\r\n            \" of what you are watching and changes accordingly to it.\",\r\n        cons: \"Possible performance degradation on devices with weak 3d accelerator\",\r\n        technologies: \"TypeScript React Redux styled-components react-spring Three.js\"\r\n    }];\r\n\r\nexport const aboutMe = [\r\n    \"I'm a simple guy who loves to create unusual things.\",\r\n    \"New experiences and challenges are my current objectives.\",\r\n    \"No matter the circumstances, I get my way.\"\r\n]","import React, {useEffect, useState} from 'react';\r\nimport styled, {keyframes} from 'styled-components/macro';\r\nimport {animatedSkillsStack} from \"../../../textContent/TextContent\";\r\n\r\nconst blink = keyframes`\r\n  0% {\r\n    opacity:1;\r\n  }\r\n  49% {\r\n    opacity:1;\r\n  }\r\n  50% {\r\n    opacity:0;\r\n  }\r\n  100% {\r\n    opacity:0;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  text-align:center;\r\n  font-family: 'Relative-Book';\r\n  color: red;\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  &::after {\r\n      content: '';\r\n      display: inline-block;\r\n      margin-left: 3px;\r\n      background-color: red;\r\n      animation-name: ${blink};\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: infinite;\r\n      height: 24px;\r\n      width: 8px;\r\n  }\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n}\r\n\r\nconst TextTypingElement: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const textArray = animatedSkillsStack;\r\n\r\n    const [text, setText] = useState<string>('');\r\n    const [isDeleting, setDeleting] = useState<boolean>(false);\r\n    const [loopNumber, setLoopNumber] = useState<number>(0);\r\n    const [typingSpeed, setTypingSpeed] = useState<number>(150);\r\n    const [invisible, setInvisible] = useState<boolean>(false);\r\n\r\n    const handleType = () => {\r\n        const i = loopNumber % textArray.length;\r\n        const fullText = textArray[i];\r\n\r\n        if (visible) {\r\n            if (isDeleting) {\r\n                setText(fullText.substring(0, text.length - 1));\r\n                setTypingSpeed(30)\r\n            } else {\r\n                setText(fullText.substring(0, text.length + 1));\r\n                setTypingSpeed(150)\r\n            }\r\n\r\n            if (!isDeleting && text === fullText) {\r\n                setTimeout(() => setDeleting(true), 500);\r\n            } else if (isDeleting && text === '') {\r\n                setDeleting(false)\r\n                setLoopNumber(loopNumber + 1)\r\n            }\r\n        } else {\r\n            setText(fullText.substring(0, text.length - 1));\r\n            setTypingSpeed(30)\r\n            if (text === '') setInvisible(true)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        if (!invisible) timer = setTimeout(() => handleType(), typingSpeed)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n    if (invisible) return null\r\n\r\n    return (\r\n        <Wrapper>\r\n            {text}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default TextTypingElement","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components/macro';\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {top: 0}\r\n  50% {top: 100%}\r\n  51% {top: -100%}\r\n  100% {top: 0}\r\n`;\r\n\r\nconst ArrowCenter = styled.div`\r\n  position: absolute;\r\n  height: 80px;\r\n  width: 1px;\r\n  left: 50%;\r\n  bottom: 0;\r\n  transform: translateX(-50%);\r\n  background-color: white;\r\n`;\r\n\r\nconst ArrowLeft = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0;\r\n  width: 1px;\r\n  height: 16px;\r\n  transform-origin: 50% 100%;\r\n  background-color: white;\r\n  transform: rotate(45deg) translateX(-50%);\r\n`;\r\n\r\nconst ArrowRight = styled(ArrowLeft)`\r\n  transform: rotate(-45deg);\r\n`;\r\n\r\nconst AnimatedWrapper = styled.div<{ $visible: boolean}>`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: top 0.3s ease-in-out;\r\n  top: ${props => !props.$visible ? '100%' : 0}\r\n`;\r\n\r\nconst ArrowWrapper = styled.div<{ $visible: boolean}>`\r\n  position: absolute;\r\n  left: 50%;\r\n  width: 20px;\r\n  height: 80px;\r\n  bottom: 10px;\r\n  overflow: hidden;\r\n  transform: translateX(-50%);\r\n  cursor: ${props => props.$visible ? 'pointer' : 'inherit'};\r\n  &:hover ${ArrowCenter}, &:hover ${ArrowLeft} {\r\n    width: 2px\r\n  }\r\n  &:hover ${AnimatedWrapper} {animation: .5s ${hoverAnimation} ease-in-out}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n    onArrowClickHandler: () => void,\r\n}\r\n\r\nconst Arrow: React.FC<PropsType> = ({visible, onArrowClickHandler}) => {\r\n\r\n    return (\r\n        <ArrowWrapper onClick={visible ? onArrowClickHandler : undefined} $visible={visible}>\r\n            <AnimatedWrapper $visible={visible}>\r\n                <ArrowLeft/>\r\n                <ArrowCenter/>\r\n                <ArrowRight/>\r\n            </AnimatedWrapper>\r\n        </ArrowWrapper>\r\n    )\r\n}\r\n\r\nexport default Arrow","import React, {useCallback} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport TextTypingElement from \"./TextTypingElement\";\r\nimport Arrow from \"./Arrow\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\n\r\nconst MainPageWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst MyInfoWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst MyName = styled.div<{ $visible: boolean }>`\r\n  font-size: 50px;\r\n  font-family: \"Anders\";\r\n  color: white;\r\n  transform: translateY(${props => props.$visible ? '0%' : '-100%'});\r\n  transition: transform .5s cubic-bezier(.19,.78,.4,.84);\r\n`;\r\n\r\nconst WrapperForAppearing = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainPageContainer: React.FC = () => {\r\n\r\n    const isCrystalExploded = useSelector((state: AppStateType) => state.interface.isCrystalExploded, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onArrowClickHandler = useCallback(() => {\r\n        dispatch(actions.transitionFromMainPaige())\r\n    }, []);\r\n\r\n    return (\r\n        <MainPageWrapper>\r\n            <MyInfoWrapper>\r\n                <WrapperForAppearing>\r\n                    <MyName $visible={!isCrystalExploded}>\r\n                        Gorbatov Illia\r\n                    </MyName>\r\n                </WrapperForAppearing>\r\n                <TextTypingElement visible={!isCrystalExploded}/>\r\n            </MyInfoWrapper>\r\n            <Arrow visible={!isCrystalExploded} onArrowClickHandler={onArrowClickHandler}/>\r\n        </MainPageWrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default MainPageContainer","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {projectsInfo} from \"../../../../textContent/TextContent\";\r\n\r\nconst AnnotationWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: -10%;\r\n  transform: translateY(-50%);\r\n  text-align: left;\r\n  color: white;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ProjectNameWrapper = styled.div`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 70px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AnimatedProjectName = styled.div<{$isScrolling: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$isScrolling ? '-100' : '0'}%);\r\n  transition: transform ${props => props.$isScrolling ? '.2s' : '.4s'}\r\n`;\r\n\r\nconst ProjectLittleDescription = styled.div`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AnimatedDescription = styled.div<{$invisible: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$invisible ? '-100' : '0'}%);\r\n  transition: transform ${props => props.$invisible ? '.2s' : '.4s .3s'}\r\n`;\r\n\r\ntype PropsType = {\r\n    isScrolling: boolean,\r\n    isDrugging: boolean,\r\n    projectIndex: number\r\n}\r\n\r\nconst ProjectAnnotation: React.FC<PropsType> = ({isScrolling, isDrugging, projectIndex}) => {\r\n\r\n    return (\r\n        <AnnotationWrapper>\r\n            <ProjectNameWrapper>\r\n                <AnimatedProjectName $isScrolling={isScrolling}>\r\n                    {projectsInfo[projectIndex].projectName}\r\n                </AnimatedProjectName>\r\n            </ProjectNameWrapper>\r\n            <ProjectLittleDescription>\r\n                <AnimatedDescription $invisible={isScrolling || isDrugging}>\r\n                    {projectsInfo[projectIndex].projectDescription}\r\n                </AnimatedDescription>\r\n            </ProjectLittleDescription>\r\n        </AnnotationWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectAnnotation)","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  transform: translateY(160%);\r\n  right: 20%;\r\n  text-align: left;\r\n  color: white;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Line = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  top: 0;\r\n  width: 1px;\r\n  height: ${props => props.$visible ? 200 : 0}%;\r\n  transition: height ${props => props.$visible ? '.3s' : '.2s'};\r\n  background-color: white;\r\n  left: 30%;\r\n  transform: translateY(-120%);\r\n`;\r\n\r\nconst Button = styled.div`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AnimatedText = styled.div<{$visible: boolean}>`\r\n  position: relative;\r\n  transform: translateY(${props => props.$visible ? 0 : -100}%);\r\n  transition: transform ${props => props.$visible ? '.4s .3s' : '.2s'};\r\n`;\r\n\r\ntype PropsType = {\r\n    projectIndex: number,\r\n    visible: boolean\r\n}\r\n\r\nconst CloseLookButton: React.FC<PropsType> = ({projectIndex, visible}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const lookAtProject = () => {\r\n        dispatch(actions.openProject(projectIndex));\r\n    };\r\n\r\n    return (\r\n        <ButtonWrapper>\r\n            <Line $visible={visible}/>\r\n            <Button onClick={lookAtProject}>\r\n                <AnimatedText $visible={visible}>\r\n                    About project\r\n                </AnimatedText>\r\n            </Button>\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseLookButton)","import React, {useEffect, useRef} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport ProjectAnnotation from \"./ProjectAnnotation\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../../store/InterfaceReducer\";\r\nimport CloseLookButton from \"./CloseLookButton\";\r\n// @ts-ignore\r\nimport video from \"../../../../assets/videos/testVid.mp4\"\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n`\r\n\r\nconst VideoWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n  width: 70%;\r\n  max-width: 1000px;\r\n  height: auto;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\ntype PropsType = {\r\n    projectIndex: number,\r\n    isDrugging: boolean,\r\n    isScrolling: boolean,\r\n    scrollsCount: number,\r\n    currentlyLookedProject: number | null\r\n}\r\n\r\nconst ProjectPresentation: React.FC<PropsType> = ({projectIndex, isDrugging, isScrolling,\r\n                                                      scrollsCount, currentlyLookedProject}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.setVideo(videoRef.current!, projectIndex))\r\n    }, [dispatch, projectIndex]);\r\n\r\n    useEffect(() => {\r\n        if (scrollsCount-1 === projectIndex && !isScrolling && !isDrugging && currentlyLookedProject === null){\r\n            videoRef.current!.play()\r\n        }\r\n        if (scrollsCount-1 !== projectIndex || (isScrolling || isDrugging) || currentlyLookedProject !== null){\r\n            videoRef.current!.pause()\r\n        }\r\n    }, [scrollsCount, isDrugging, isScrolling, projectIndex, currentlyLookedProject]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VideoWrapper>\r\n                <Video muted loop ref={videoRef}>\r\n                    <source src={video} type=\"video/mp4\"/>\r\n                </Video>\r\n                <ProjectAnnotation isDrugging={isDrugging} isScrolling={isScrolling} projectIndex={projectIndex}/>\r\n                <CloseLookButton projectIndex={projectIndex} visible={!isScrolling && !isDrugging}/>\r\n            </VideoWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectPresentation)","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport ProjectPresentation from \"./SingleProject/ProjectPresentation\";\r\nimport {projectsInfo} from \"../../../textContent/TextContent\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\n\r\nconst AllProjectsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProjectsContainer: React.FC = () => {\r\n\r\n    const druggingState = useSelector((state: AppStateType) => state.interface.druggingState, shallowEqual);\r\n    const scrollingState = useSelector((state: AppStateType) => state.interface.scrollingState, shallowEqual);\r\n    const scrollsCount = useSelector((state: AppStateType) => state.interface.scrollsCount, shallowEqual);\r\n    const currentlyLookedProject = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n\r\n    return (\r\n        <AllProjectsWrapper>\r\n            {projectsInfo.map((project, index) =>\r\n                <ProjectPresentation key={index} projectIndex={index} scrollsCount={scrollsCount} currentlyLookedProject={currentlyLookedProject}\r\n                                     isDrugging={druggingState} isScrolling={scrollingState}/>)}\r\n        </AllProjectsWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectsContainer)","import React, {useEffect, useState} from 'react';\r\nimport styled, {css, keyframes} from 'styled-components/macro';\r\n\r\n\r\nconst hoverAnimation = keyframes`\r\n  0% {left: 0}\r\n  50% {left: 100%}\r\n  51% {left: -100%}\r\n  100% {left: 0}\r\n`;\r\n\r\nconst MenuButton = styled.div<{$visible: boolean, $isAboutBlockOpened: boolean}>`\r\n  position: relative;\r\n  transform-origin: 0 50%;\r\n  color: ${props => props.$isAboutBlockOpened ? 'black' : 'white'};\r\n  font-size: 20px;\r\n  left: ${props => props.$visible ? '0' : '100%'};\r\n  transition: left .4s;\r\n  font-family: 'Relative-Book';\r\n`;\r\n\r\nconst complexMixin = css`&:hover ${MenuButton}{animation: .4s ${hoverAnimation} ease-in-out}`\r\n\r\nconst MenuButtonWrapper = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  z-index: 999;\r\n  top: 50%;\r\n  cursor: ${props => props.$visible ? 'pointer' : 'inherit'};\r\n  overflow: hidden;\r\n  transform: rotateZ(-90deg);\r\n  ${props => props.$visible && complexMixin}\r\n`;\r\n\r\ntype PropsType = {\r\n    isAboutBlockOpened: boolean,\r\n    openInformation: () => void,\r\n    closeInformation: () => void,\r\n    currentProject: null | number,\r\n    closeProject: () => void,\r\n    visible: boolean\r\n}\r\n\r\nconst LeftContextButton: React.FC<PropsType> = ({\r\n                                                    isAboutBlockOpened, openInformation, closeInformation,\r\n                                                    closeProject, currentProject, visible\r\n                                                }) => {\r\n\r\n    const [memoizedText, setText] = useState<string>('About Me');\r\n    useEffect(() => {\r\n        if (isAboutBlockOpened && visible) setText('Close');\r\n        if (currentProject !== null && visible) setText('Back');\r\n        if (!isAboutBlockOpened && visible && currentProject === null) setText('About Me');\r\n    }, [visible, isAboutBlockOpened, currentProject]);\r\n\r\n    return (\r\n        <MenuButtonWrapper $visible={visible}\r\n            onClick={!visible ? undefined : currentProject !== null ? closeProject : !isAboutBlockOpened ? openInformation : closeInformation}>\r\n            <MenuButton $visible={visible} $isAboutBlockOpened={isAboutBlockOpened}>\r\n                {memoizedText}\r\n            </MenuButton>\r\n        </MenuButtonWrapper>\r\n    )\r\n};\r\n\r\nexport default React.memo(LeftContextButton)","import React from 'react';\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst LogoWrapper = styled.div<{ $visible: boolean }>`\r\n  position: absolute;\r\n  z-index: 999;\r\n  color: white;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  font-size: 20px;\r\n  font-family: \"Anders\";\r\n  top: ${props => props.$visible ? 20 : -100}px;\r\n  transition: top .2s .3s;\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean\r\n}\r\n\r\nconst Logo: React.FC<PropsType> = ({visible}) => {\r\n    return (\r\n        <LogoWrapper $visible={visible}>\r\n            Gorbatov Illia\r\n        </LogoWrapper>\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {useCallback} from 'react';\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport LeftContextButton from './LeftContextButton';\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\nimport Logo from './Logo';\r\n\r\n\r\nconst InterfaceContainer: React.FC = () => {\r\n\r\n    const isInterfaceAvailable = useSelector((state: AppStateType) => state.interface.isInterfaceAvailable, shallowEqual);\r\n    const isAboutBlockOpened = useSelector((state: AppStateType) => state.interface.isAboutMenuOpened, shallowEqual);\r\n    const currentProject = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openInformation = useCallback(() => {\r\n        dispatch(actions.openAboutMeSection());\r\n    }, [dispatch]);\r\n\r\n    const closeInformation = useCallback(() => {\r\n        dispatch(actions.closeAboutMeSection());\r\n    }, [dispatch]);\r\n\r\n    const closeProject = useCallback(() => {\r\n        dispatch(actions.closeProject())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Logo visible={isInterfaceAvailable}/>\r\n            <LeftContextButton closeInformation={closeInformation} openInformation={openInformation}\r\n                               visible={isInterfaceAvailable}\r\n                               isAboutBlockOpened={isAboutBlockOpened} closeProject={closeProject}\r\n                               currentProject={currentProject}/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default React.memo(InterfaceContainer)","import React, {useEffect, useRef} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated, SpringStartFn, useSpring} from 'react-spring';\r\nimport {useDrag} from \"react-use-gesture\";\r\nimport {projectsInfo} from \"../../../textContent/TextContent\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../../store/InterfaceReducer\";\r\n\r\nconst Wrapper = styled(animated.div)`\r\n  position: absolute;\r\n  top: 10%;\r\n  right: 6%;\r\n  height: 80%;\r\n  width: 80px;\r\n`;\r\n\r\nconst ProgressLine = styled.div<{$visible: boolean}>`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 1px;\r\n  line-height: 1px;\r\n  height: ${props => props.$visible ? '100%' : '0%'};\r\n  background-color: white;\r\n  transition: ${props => props.$visible ? 'height .3s .3s' : 'height .3s'};\r\n`;\r\n\r\nconst ProgressBlock = styled(animated.div)<{$visible: boolean}>`\r\n  top: ${props => props.$visible ? '0px' : '-500px'};\r\n  position: absolute;\r\n  width: 88px;\r\n  height: 88px;\r\n  background-color: black;\r\n  color: white;\r\n  cursor: grab;\r\n  transition: ${props => props.$visible ? 'top .3s' : 'top .3s .3s'};\r\n  &:active {\r\n    cursor: grabbing\r\n  }\r\n`;\r\n\r\nconst CurrentProject = styled.div`\r\n  position: absolute;\r\n  font-size: 17px;\r\n  font-family: 'Relative-Book';\r\n  left: 25%;\r\n  top: 50%;\r\n  transform: translateY(-100%);\r\n`;\r\n\r\nconst AllProjects = styled(CurrentProject)`\r\n  left: 75%;\r\n  transform: translateX(-100%);\r\n`;\r\n\r\nconst Border = styled.div`\r\n  position: absolute;\r\n  width: 20px;\r\n  height: 1px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform-origin: 50%;\r\n  transform: translateX(-50%) translateY(-50%) rotate(-45deg);\r\n  background-color: white;\r\n`;\r\n\r\ntype PropsType = {\r\n    setScroll:  SpringStartFn<{top: number, scale: number, x: number}>,\r\n    scrollsCount: number,\r\n    visible: boolean,\r\n    isMainPageFocused: boolean,\r\n    isDrugging: boolean\r\n}\r\n\r\n\r\nconst ProjectsCounter: React.FC<PropsType> = ({setScroll, visible, isDrugging,\r\n                                                  isMainPageFocused, scrollsCount}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [{y, x, translateY}, setAnimation] = useSpring(() => ({\r\n        y: 0,\r\n        x: 0,\r\n        translateY: '-50%'\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (!isDrugging) {\r\n            const currentPercent = (scrollsCount - 1) / (projectsInfo.length - 1);\r\n            const newY = wrapperRef.current!.offsetHeight * currentPercent;\r\n            currentY.current = newY;\r\n            setAnimation({y: newY})\r\n        }\r\n    }, [scrollsCount, setAnimation, isDrugging]);\r\n\r\n    useEffect(() => {\r\n        if (!visible && !isMainPageFocused) setAnimation({x: window.innerWidth/2});\r\n        if (visible && !isMainPageFocused) setAnimation({x: 0});\r\n    }, [visible, setAnimation, isMainPageFocused]);\r\n\r\n    const currentY = useRef<number>(0);\r\n    const currentTop = useRef<number>(0)\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    const onDrugHandler = useDrag(({delta: [, y], active, down, first}) => {\r\n        if (down && first) {\r\n            currentTop.current = -scrollsCount * (window.innerHeight * 0.3) + (scrollsCount - 1) * (window.innerHeight * 0.3);\r\n            setScroll({scale: 0.7});\r\n            dispatch(actions.startDrugging())\r\n        }\r\n        if (active) {\r\n            currentY.current = currentY.current + y;\r\n            const currentPercent = currentY.current / wrapperRef.current!.offsetHeight;\r\n            if (y > 0 && currentPercent > scrollsCount / projectsInfo.length && scrollsCount < projectsInfo.length) {\r\n                dispatch(actions.setScrollsCount(scrollsCount+1))\r\n            } else if (y < 0 && currentPercent < (scrollsCount - 1) / projectsInfo.length && scrollsCount > 1) {\r\n                dispatch(actions.setScrollsCount(scrollsCount-1))\r\n            }\r\n            setAnimation({y: currentY.current});\r\n            setScroll({top: currentTop.current - window.innerHeight * (projectsInfo.length-1) * 0.7 * currentPercent})\r\n        }\r\n        if (!down) {\r\n            const currentBlockPercent = (scrollsCount - 1) / (projectsInfo.length - 1);\r\n            const staticY = currentBlockPercent * wrapperRef.current!.offsetHeight;\r\n            currentY.current = staticY;\r\n            setScroll({scale: 1, top: -currentBlockPercent * (projectsInfo.length-1) * window.innerHeight});\r\n            setAnimation({y: staticY});\r\n            dispatch(actions.stopDrugging())\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Wrapper ref={wrapperRef} style={{x}}>\r\n            <ProgressLine $visible={visible}/>\r\n            <ProgressBlock style={{y, translateY}} {...onDrugHandler()} $visible={visible}>\r\n                <CurrentProject>\r\n                    {scrollsCount === 0 ? 1 : scrollsCount}\r\n                </CurrentProject>\r\n                <Border/>\r\n                <AllProjects>\r\n                    {projectsInfo.length}\r\n                </AllProjects>\r\n            </ProgressBlock>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProjectsCounter)","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animatedBigSkillsStack} from \"../../../../textContent/TextContent\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  font-family: 'Relative-Book';\r\n  color: red;\r\n  letter-spacing: 2px;\r\n  font-size: 15px;\r\n  position: relative;\r\n`;\r\n\r\nconst InvisibleTextForSize = styled.div`\r\n  opacity: 0\r\n`;\r\n\r\nconst VisibleText = styled.div`\r\n  opacity: 1;\r\n  position: absolute;\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n}\r\n\r\nconst TechnologiesTextTyping: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const [text, setText] = useState<string>('');\r\n\r\n    const typeText = () => {\r\n        if (text === '') {\r\n            setTimeout(() => setText(animatedBigSkillsStack.substring(0, text.length + 1)), 1200)\r\n        } else setText(animatedBigSkillsStack.substring(0, text.length + 1));\r\n    };\r\n    const deleteText = () => {\r\n        if (text === '') return\r\n        setText(animatedBigSkillsStack.substring(0, text.length - 1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        if (visible) timer = setTimeout(() => typeText(), 15)\r\n        if (!visible) timer = setTimeout(() => deleteText(), 3)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VisibleText>\r\n                {text}\r\n            </VisibleText>\r\n            <InvisibleTextForSize>\r\n                {animatedBigSkillsStack}\r\n            </InvisibleTextForSize>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(TechnologiesTextTyping)","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {animated, useSprings} from 'react-spring';\r\nimport {aboutMe} from \"../../../../textContent/TextContent\";\r\nimport TextTypingTechnologies from \"./TextTypingTechnologies\";\r\n\r\nconst Wrapper = styled.div<{$visible: boolean}>`\r\n  display: ${props => props.$visible ? 'block' : 'none'};\r\n  position: absolute;\r\n  width: 50vw;\r\n  top: 0;\r\n  height: 100vh;\r\n`;\r\n\r\nconst InnerCentralWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n  width: 80%;\r\n  text-align: left;\r\n  color: black;\r\n`;\r\n\r\nconst CommonWrapper = styled.div`\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Headers = styled(animated.div)<{ $big: boolean }>`\r\n  font-size: ${props => props.$big ? '50px' : '25px'};\r\n  padding-bottom: ${props => props.$big ? '3%' : '7%'};\r\n  font-family: 'MADE Evolve Bold';\r\n`;\r\n\r\nconst AboutMe = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  font-size: 15px;\r\n  text-align: left;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst InfoHeaders = styled(animated.div)`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 20px;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst Contacts = styled(animated.div)`\r\n  \r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean\r\n}\r\n\r\nconst InfoBlock: React.FC<PropsType> = ({visible}) => {\r\n\r\n    const [springs, setSprings] = useSprings(6, i =>({\r\n        y: '-100%',\r\n    }));\r\n\r\n    const [isContentVisible, setVisibility] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            setVisibility(true)\r\n            setSprings(i => ({\r\n               y: '0%',\r\n                delay: i*200\r\n           }))\r\n        }\r\n        if (!visible) {\r\n            setSprings(i =>({\r\n                y: '-100%',\r\n                delay: (5-i)*200\r\n            })).then(() =>setVisibility(false))\r\n        }\r\n    }, [visible, setSprings]);\r\n\r\n    return(\r\n        <Wrapper $visible={isContentVisible}>\r\n            <InnerCentralWrapper>\r\n                <CommonWrapper>\r\n                    <Headers $big={true} style={springs[0]}>\r\n                        Hello\r\n                    </Headers>\r\n                </CommonWrapper>\r\n                <CommonWrapper>\r\n                    <Headers $big={false} style={springs[1]}>\r\n                        Is it me you're looking for?\r\n                    </Headers>\r\n                </CommonWrapper>\r\n                {aboutMe.map((textContent, i) =>\r\n                    <CommonWrapper key={i}>\r\n                        <AboutMe style={springs[i+2]}>\r\n                            {textContent}\r\n                        </AboutMe>\r\n                    </CommonWrapper>\r\n                )}\r\n                <CommonWrapper>\r\n                    <InfoHeaders style={springs[5]}>\r\n                        Technologies\r\n                    </InfoHeaders>\r\n                </CommonWrapper>\r\n                <TextTypingTechnologies visible={visible}/>\r\n            </InnerCentralWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(InfoBlock)","import React, {useEffect, useMemo, useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport {projectsInfo} from \"../../../../textContent/TextContent\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: left;\r\n  font-family: 'Relative-Book';\r\n  font-size: 17px;\r\n  position: relative;\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst InvisibleTextForSize = styled.div`\r\n  opacity: 0\r\n`;\r\n\r\nconst VisibleText = styled.div<{$role: string}>`\r\n  opacity: 1;\r\n  position: absolute;\r\n  color: ${props => props.$role === 'pros' ? 'rgba(255, 255, 255, 0.6)' : 'red'}\r\n`;\r\n\r\ntype PropsType = {\r\n    visible: boolean,\r\n    currentText: string,\r\n    role: string\r\n}\r\n\r\nconst ProsAndConsTyping: React.FC<PropsType> = ({visible, currentText, role}) => {\r\n\r\n    const [text, setText] = useState<string>('');\r\n\r\n    const typeText = () => {\r\n        if (text === ''){\r\n            setTimeout(() => setText(currentText.substring(0, text.length + 1)), role === 'pros' ? 1000 : 1200)\r\n        } else setText(currentText.substring(0, text.length + 1));\r\n    };\r\n    const deleteText = () => {\r\n        if (text === '') return\r\n        setText(currentText.substring(0, text.length - 1));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer: number\r\n        if (visible) timer = setTimeout(() => typeText(), 10)\r\n        if (!visible) timer = setTimeout(() => deleteText(), 2)\r\n        return () => clearTimeout(timer)\r\n    });\r\n\r\n    return (\r\n        <Wrapper>\r\n            <VisibleText $role={role}>\r\n                {text}\r\n            </VisibleText>\r\n            <InvisibleTextForSize>\r\n                {currentText}\r\n            </InvisibleTextForSize>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProsAndConsTyping)","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components/macro\";\r\nimport {projectsInfo, ProjectType} from \"../../../../textContent/TextContent\";\r\nimport {animated, useSprings} from 'react-spring';\r\nimport ProsAndConsTyping from \"./ProsAndConsTyping\";\r\n\r\nconst CloseLookWrapper = styled.div<{ $visible: boolean }>`\r\n  display: ${props => props.$visible ? 'block' : 'none'};\r\n  width: 50vw;\r\n  height: 100vh;\r\n  top: 0;\r\n  position: absolute;\r\n  color: white;\r\n  text-align: left;\r\n`;\r\n\r\nconst CenteringWrapper = styled.div`\r\n  width: 80%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateY(-50%) translateX(-50%);\r\n`;\r\n\r\nconst ProjectLittleDescription = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst ProjectName = styled(animated.div)`\r\n  font-family: 'MADE Evolve Bold';\r\n  font-size: 50px;\r\n  padding-bottom: 10%;\r\n`;\r\n\r\nconst ProjectDetailedDescription = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  font-size: 18px;\r\n  padding-bottom: 7%;\r\n`;\r\n\r\nconst ProsAndCons = styled(animated.div)`\r\n  font-family: 'Relative-Book';\r\n  letter-spacing: 2px;\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  padding-bottom: 3%;\r\n`;\r\n\r\ntype PropsType = {\r\n    project: number | null,\r\n    visible: boolean\r\n}\r\n\r\nconst CloseLook: React.FC<PropsType> = ({project, visible}) => {\r\n\r\n    const [springs, setSprings] = useSprings(5, i => ({\r\n        x: '-50vw'\r\n    }));\r\n\r\n    const [memoizedProject, setProject] = useState<ProjectType>();\r\n    useEffect(() => {\r\n        if (project !== null) setProject(projectsInfo[project])\r\n    }, [project])\r\n\r\n    const [visibility, setVisibility] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            setVisibility(true);\r\n            setSprings(i => ({\r\n                x: '0vw',\r\n                delay: i * 200\r\n            }))\r\n        }\r\n        if (!visible) {\r\n            setSprings(i => ({\r\n                x: '-50vw',\r\n                delay: (4-i) * 200\r\n            })).then(() => setVisibility(false))\r\n        }\r\n    }, [visible, setSprings]);\r\n\r\n    return (\r\n        <CloseLookWrapper $visible={visibility}>\r\n            <CenteringWrapper>\r\n                <ProjectName style={springs[0]}>\r\n                    {memoizedProject?.projectName}\r\n                </ProjectName>\r\n                <ProjectLittleDescription style={springs[1]}>\r\n                    {memoizedProject?.projectDescription}\r\n                </ProjectLittleDescription>\r\n                <ProjectDetailedDescription style={springs[2]}>\r\n                    {memoizedProject?.detailedDescription}\r\n                </ProjectDetailedDescription>\r\n                <ProsAndCons style={springs[3]}>\r\n                    Pros\r\n                </ProsAndCons>\r\n                <ProsAndConsTyping visible={visible} currentText={memoizedProject?.pros || ''} role={'pros'}/>\r\n                <ProsAndCons style={springs[4]}>\r\n                    Cons\r\n                </ProsAndCons>\r\n                <ProsAndConsTyping visible={visible} currentText={memoizedProject?.cons || ''} role={'cons'}/>\r\n            </CenteringWrapper>\r\n        </CloseLookWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(CloseLook)\r\n","import React, {useEffect, useRef} from 'react';\r\nimport MainPageContainer from \"./Greetings/MainPageContainer\";\r\nimport ProjectsContainer from \"./Projects/ProjectsContainer\";\r\nimport Interface from \"./Interface/InterfaceContainer\";\r\nimport styled from \"styled-components/macro\";\r\nimport {animated, useSpring} from \"react-spring\";\r\nimport {useDrag, useWheel} from 'react-use-gesture';\r\nimport {isMobile} from 'react-device-detect'\r\nimport {projectsInfo} from \"../../textContent/TextContent\";\r\nimport ProjectsCounter from \"./Interface/ProjectsCounter\";\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {actions} from \"../../store/InterfaceReducer\";\r\nimport InfoBlock from \"./Interface/AboutMe/InfoBlock\";\r\nimport CloseLook from \"./Projects/CloseLook/ProjectCloseLook\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  z-index: 10;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n  background: transparent;\r\n`;\r\n\r\nconst ScrollableWrapper = styled(animated.div)`\r\n  width: 100vw;\r\n  position: absolute;\r\n`;\r\n\r\n\r\nconst HTMLElementsContainer: React.FC = () => {\r\n\r\n    const scrollsCount = useSelector((state: AppStateType) => state.interface.scrollsCount, shallowEqual);\r\n    const project = useSelector((state: AppStateType) => state.interface.currentlyLookedProject, shallowEqual);\r\n    const isInterfaceAvailable = useSelector((state: AppStateType) => state.interface.isInterfaceAvailable, shallowEqual);\r\n    const isAboutMenuOpened = useSelector((state: AppStateType) => state.interface.isAboutMenuOpened, shallowEqual);\r\n    const isMainPageFocused = useSelector((state: AppStateType) => state.interface.isMainPageFocused, shallowEqual);\r\n    const druggingState = useSelector((state: AppStateType) => state.interface.druggingState, shallowEqual);\r\n    const scrollingState = useSelector((state: AppStateType) => state.interface.scrollingState, shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n    const [animation, setScroll] = useSpring(() => ({\r\n        top: window.innerHeight,\r\n        scale: 1,\r\n        x: 0,\r\n        config: {tension: 100, friction: 25, clamp: true},\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (!isInterfaceAvailable && !isMainPageFocused && scrollsCount !== 0) {\r\n            setScroll({x: window.innerWidth})\r\n        }\r\n        if (isInterfaceAvailable && !isMainPageFocused && scrollsCount !== 0 && !isAboutMenuOpened && project === null) {\r\n            setScroll({x: 0})\r\n        }\r\n        if (isInterfaceAvailable && !isMainPageFocused && scrollsCount === 0) {\r\n            dispatch(actions.setScrollsCount(1))\r\n            setScroll({\r\n                top: 0,\r\n            }).then(() => dispatch(actions.stopScrolling()))\r\n        }\r\n    }, [isInterfaceAvailable, isAboutMenuOpened, isMainPageFocused, setScroll, dispatch, scrollsCount, project]);\r\n\r\nconsole.log(isInterfaceAvailable, scrollingState)\r\n    useWheel(({direction: [, y]}) => {\r\n        if (scrollingState || scrollingState || project !== null || isAboutMenuOpened || druggingState) return;\r\n        if (y > 0 && scrollsCount < projectsInfo.length) {\r\n            if (scrollsCount === 0) {\r\n                dispatch(actions.transitionFromMainPaige());\r\n            } else {\r\n                dispatch(actions.startScrolling(true));\r\n                setScroll({\r\n                    top: -(scrollsCount + 1) * window.innerHeight + window.innerHeight,\r\n                }).then(() => dispatch(actions.stopScrolling()))\r\n            }\r\n        }\r\n        if (y < 0 && scrollsCount !== 0) {\r\n            if (scrollsCount === 1) {\r\n                dispatch(actions.transitionToMainPaige());\r\n                setScroll({top: window.innerHeight})\r\n            } else {\r\n                dispatch(actions.startScrolling(false));\r\n                setScroll({\r\n                    top: -(scrollsCount - 1) * window.innerHeight + window.innerHeight,\r\n                }).then(() => dispatch(actions.stopScrolling()))\r\n            }\r\n        }\r\n    }, {domTarget: window});\r\n\r\n    useDrag(({swipe: [, y]}) => {\r\n        if (!isMobile || project !== null) return;\r\n\r\n    }, {domTarget: window, filterTaps: true, eventOptions: {passive: false}});\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MainPageContainer/>\r\n            <ScrollableWrapper style={animation} ref={wrapperRef}>\r\n                <ProjectsContainer/>\r\n            </ScrollableWrapper>\r\n            <Interface/>\r\n            <ProjectsCounter setScroll={setScroll} scrollsCount={scrollsCount} isMainPageFocused={isMainPageFocused}\r\n                             visible={isInterfaceAvailable && !isAboutMenuOpened && project === null}\r\n                             isDrugging={druggingState}/>\r\n            <InfoBlock visible={isAboutMenuOpened && isInterfaceAvailable}/>\r\n            <CloseLook project={project} visible={!druggingState && !scrollingState && project !== null}/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(HTMLElementsContainer)","import React from 'react';\r\nimport {createGlobalStyle} from \"styled-components\";\r\nimport styled from \"styled-components/macro\";\r\nimport InitialCanvas from \"./components/ThreeJSComponents/InitialCanvas\";\r\nimport HTMLElementsContainer from \"./components/HTMLComponents/HTMLElementsContainer\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {far} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(far, fas);\r\n\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    * {\r\n      box-sizing: border-box;\r\n    };\r\n    body {\r\n      margin: 0;\r\n      padding: 0;\r\n      user-select: none;\r\n      outline: none;\r\n      \r\n    };\r\n    &::-webkit-scrollbar { \r\n        display: none;\r\n        };\r\n    html {\r\n        -ms-overflow-style: none; \r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    z-index: -1;\r\n    background-color: black;\r\n    width: 100vw;\r\n    height: 100vh;\r\n`;\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <>\r\n            <GlobalStyles/>\r\n            <HTMLElementsContainer/>\r\n            <Wrapper>\r\n                <InitialCanvas/>\r\n            </Wrapper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from './store/store';\n\n/*ReactDOM.render(\n    <StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </StrictMode>,\n    document.getElementById('root')\n);*/\n\nconst root = document.getElementById(\"root\") as HTMLElement;\n// @ts-ignore\nReactDOM.unstable_createRoot(root).render(\n    <StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </StrictMode>);\n\n","module.exports = __webpack_public_path__ + \"static/media/withoutAll.958adb38.glb\";","module.exports = __webpack_public_path__ + \"static/media/testVid.13fb315a.mp4\";"],"sourceRoot":""}